brut.androlib.Androlib -> a.a.a:
    brut.androlib.res.AndrolibResources mAndRes -> c
    brut.androlib.res.data.ResUnknownFiles mResUnknownFiles -> a
    brut.androlib.ApkOptions apkOptions -> b
    int mMinSdkVersion -> d
    java.util.logging.Logger LOGGER -> e
    java.lang.String[] APK_RESOURCES_FILENAMES -> f
    java.lang.String[] APK_RESOURCES_WITHOUT_RES_FILENAMES -> g
    java.lang.String[] APP_RESOURCES_FILENAMES -> h
    java.lang.String[] APK_MANIFEST_FILENAMES -> i
    java.lang.String[] APK_STANDARD_ALL_FILENAMES -> j
    java.util.regex.Pattern NO_COMPRESS_PATTERN -> k
    51:59:void <init>(brut.androlib.ApkOptions) -> <init>
    51:64:void <init>() -> <init>
    68:68:brut.androlib.res.data.ResTable getResTable(brut.directory.ExtFile) -> a
    73:73:brut.androlib.res.data.ResTable getResTable(brut.directory.ExtFile,boolean) -> a
    79:84:void decodeSourcesRaw(brut.directory.ExtFile,java.io.File,java.lang.String) -> a
    90:102:void decodeSourcesSmali(java.io.File,java.io.File,java.lang.String,boolean,int) -> a
    107:113:void decodeManifestRaw(brut.directory.ExtFile,java.io.File) -> a
    117:118:void decodeManifestFull(brut.directory.ExtFile,java.io.File,brut.androlib.res.data.ResTable) -> a
    123:128:void decodeResourcesRaw(brut.directory.ExtFile,java.io.File) -> b
    132:133:void decodeResourcesFull(brut.directory.ExtFile,java.io.File,brut.androlib.res.data.ResTable) -> b
    137:138:void decodeManifestWithResources(brut.directory.ExtFile,java.io.File,brut.androlib.res.data.ResTable) -> c
    142:163:void decodeRawFiles(brut.directory.ExtFile,java.io.File,short) -> a
    167:193:void recordUncompressedFiles(brut.directory.ExtFile,java.util.Collection) -> a
    196:201:boolean isAPKFileNames(java.lang.String) -> a
    206:226:void decodeUnknownFiles(brut.directory.ExtFile,java.io.File,brut.androlib.res.data.ResTable) -> d
    230:247:void writeOriginalFiles(brut.directory.ExtFile,java.io.File) -> c
    252:256:void writeMetaFile(java.io.File,brut.androlib.meta.MetaInfo) -> a
    261:266:brut.androlib.meta.MetaInfo readMetaFile(brut.directory.ExtFile) -> b
    271:272:void build() -> a
    274:275:void build(java.io.File,java.io.File) -> a
    279:343:void build(brut.directory.ExtFile,java.io.File) -> d
    347:350:void buildSources(java.io.File) -> a
    356:382:void buildNonDefaultSources(brut.directory.ExtFile) -> c
    386:400:boolean buildSourcesRaw(java.io.File,java.lang.String) -> a
    405:418:boolean buildSourcesSmali(java.io.File,java.lang.String,java.lang.String) -> a
    423:427:void buildResources(brut.directory.ExtFile,brut.androlib.meta.UsesFramework) -> a
    432:446:boolean buildResourcesRaw(brut.directory.ExtFile) -> d
    453:489:boolean buildResourcesFull(java.io.File,brut.androlib.meta.UsesFramework) -> a
    496:501:boolean buildManifestRaw(brut.directory.ExtFile) -> e
    508:541:boolean buildManifest(brut.directory.ExtFile,brut.androlib.meta.UsesFramework) -> b
    546:547:void buildLib(java.io.File) -> b
    550:551:void buildLibs(java.io.File) -> c
    554:570:void buildLibrary(java.io.File,java.lang.String) -> b
    574:593:void buildCopyOriginalFiles(java.io.File) -> d
    597:621:void buildUnknownFiles(java.io.File,java.io.File,brut.androlib.meta.MetaInfo) -> a
    625:640:void copyExistingFiles(java.util.zip.ZipFile,java.util.zip.ZipOutputStream) -> a
    644:671:void copyUnknownFiles(java.io.File,java.util.zip.ZipOutputStream,java.util.Map) -> a
    674:688:void buildApk(java.io.File,java.io.File) -> b
    704:709:boolean isFrameworkApk(brut.androlib.res.data.ResTable) -> a
    713:713:java.lang.String getVersion() -> b
    718:733:java.io.File[] parseUsesFramework(brut.androlib.meta.UsesFramework) -> a
    737:737:boolean isModified(java.io.File,java.io.File) -> c
    741:746:boolean isModified(java.io.File[],java.io.File[]) -> a
    750:754:java.io.File[] newFiles(java.lang.String[],java.io.File) -> a
    761:778:void <clinit>() -> <clinit>
brut.androlib.AndrolibException -> a.a.b:
    25:26:void <init>() -> <init>
    29:30:void <init>(java.lang.String) -> <init>
    33:34:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    37:38:void <init>(java.lang.Throwable) -> <init>
brut.androlib.ApkDecoder -> a.a.c:
    brut.androlib.Androlib mAndrolib -> a
    java.util.logging.Logger LOGGER -> b
    brut.directory.ExtFile mApkFile -> c
    java.io.File mOutDir -> d
    brut.androlib.res.data.ResTable mResTable -> e
    short mDecodeSources -> f
    short mDecodeResources -> g
    short mDecodeAssets -> h
    boolean mForceDelete -> i
    boolean mKeepBrokenResources -> j
    boolean mBakDeb -> k
    java.util.Collection mUncompressedFiles -> l
    boolean mAnalysisMode -> m
    int mApi -> n
    46:47:void <init>() -> <init>
    49:426:void <init>(brut.androlib.Androlib) -> <init>
    63:71:void setApkFile(java.io.File) -> a
    74:75:void setOutDir(java.io.File) -> b
    78:79:void setApi(int) -> a
    83:177:void decode() -> a
    180:184:void setDecodeSources(short) -> a
    187:191:void setDecodeResources(short) -> b
    194:198:void setDecodeAssets(short) -> c
    201:210:void setAnalysisMode(boolean,boolean) -> a
    213:221:void setTargetSdkVersion() -> b
    224:225:void setBaksmaliDebugMode(boolean) -> a
    228:229:void setForceDelete(boolean) -> b
    236:237:void setKeepBrokenResources(boolean) -> c
    240:241:void setFrameworkDir(java.lang.String) -> a
    244:253:brut.androlib.res.data.ResTable getResTable() -> c
    258:260:boolean hasSources() -> d
    266:277:boolean hasMultipleSources() -> e
    283:285:boolean hasManifest() -> f
    291:293:boolean hasResources() -> g
    313:316:java.io.File getOutDir() -> h
    320:336:void writeMetaFile() -> i
    339:357:void putUsesFramework(brut.androlib.meta.MetaInfo) -> a
    360:364:void putSdkInfo(brut.androlib.meta.MetaInfo) -> b
    367:386:void putPackageInfo(brut.androlib.meta.MetaInfo) -> c
    389:395:void putVersionInfo(brut.androlib.meta.MetaInfo) -> d
    398:399:void putUnknownInfo(brut.androlib.meta.MetaInfo) -> e
    402:405:void putFileCompressionInfo(brut.androlib.meta.MetaInfo) -> f
    408:409:void putSharedLibraryInfo(brut.androlib.meta.MetaInfo) -> g
    413:413:void <clinit>() -> <clinit>
brut.androlib.ApkOptions -> a.a.d:
    boolean forceBuildAll -> a
    boolean forceDeleteFramework -> b
    boolean debugMode -> c
    boolean verbose -> d
    boolean copyOriginalFiles -> e
    boolean updateFiles -> f
    boolean isFramework -> g
    boolean resourcesAreCompressed -> h
    java.util.Collection doNotCompress -> i
    java.io.File in -> j
    java.io.File out -> k
    java.io.File tmp -> l
    java.lang.String keystore -> m
    java.lang.String pk8 -> n
    java.lang.String x509 -> o
    java.lang.String storepass -> p
    java.lang.String keypass -> q
    java.lang.String alias -> r
    java.lang.String frameworkFolderLocation -> s
    java.lang.String frameworkTag -> t
    java.lang.String aaptPath -> u
    22:42:void <init>() -> <init>
brut.androlib.ApktoolProperties -> a.a.e:
    java.util.Properties sProps -> a
    java.util.logging.Logger LOGGER -> b
    27:27:void <init>() -> <init>
    29:29:java.lang.String get(java.lang.String) -> a
    33:36:java.util.Properties get() -> a
    40:84:void loadProps() -> b
    88:88:void <clinit>() -> <clinit>
brut.androlib.err.CantFind9PatchChunk -> a.a.a.a:
    31:32:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    38:39:void <init>() -> <init>
brut.androlib.err.CantFindFrameworkResException -> a.a.a.b:
    int mPkgId -> a
    31:33:void <init>(int) -> <init>
brut.androlib.err.InFileNotFoundException -> a.a.a.c:
    38:39:void <init>() -> <init>
brut.androlib.err.OutDirExistsException -> a.a.a.d:
    38:39:void <init>() -> <init>
brut.androlib.err.UndefinedResObject -> a.a.a.e:
    34:35:void <init>(java.lang.String) -> <init>
    37:38:void <init>() -> <init>
brut.androlib.meta.MetaInfo -> a.a.b.a:
    java.lang.String version -> version
    java.lang.String apkFileName -> apkFileName
    boolean isFrameworkApk -> isFrameworkApk
    brut.androlib.meta.UsesFramework usesFramework -> usesFramework
    java.util.Map sdkInfo -> sdkInfo
    brut.androlib.meta.PackageInfo packageInfo -> packageInfo
    brut.androlib.meta.VersionInfo versionInfo -> versionInfo
    boolean compressionType -> compressionType
    boolean sharedLibrary -> sharedLibrary
    java.util.Map unknownFiles -> unknownFiles
    java.util.Collection doNotCompress -> doNotCompress
    28:28:void <init>() -> <init>
    42:49:org.yaml.snakeyaml.Yaml getYaml() -> a
    53:56:void save(java.io.Writer) -> save
    59:66:void save(java.io.File) -> save
    69:69:brut.androlib.meta.MetaInfo load(java.io.InputStream) -> load
    73:77:brut.androlib.meta.MetaInfo load(java.io.File) -> load
brut.androlib.meta.PackageInfo -> a.a.b.b:
    java.lang.String forcedPackageId -> forcedPackageId
    java.lang.String renameManifestPackage -> renameManifestPackage
    19:19:void <init>() -> <init>
brut.androlib.meta.StringExConstructor -> a.a.b.c:
    26:28:void <init>() -> <init>
    25:25:java.lang.Object access$100(brut.androlib.meta.StringExConstructor,org.yaml.snakeyaml.nodes.ScalarNode) -> a
brut.androlib.meta.StringExConstructor$1 -> a.a.b.d:
brut.androlib.meta.StringExConstructor$ConstructStringEx -> a.a.b.e:
    brut.androlib.meta.StringExConstructor this$0 -> a
    30:30:void <init>(brut.androlib.meta.StringExConstructor) -> <init>
    32:33:java.lang.Object construct(org.yaml.snakeyaml.nodes.Node) -> construct
    30:30:void <init>(brut.androlib.meta.StringExConstructor,brut.androlib.meta.StringExConstructor$1) -> <init>
brut.androlib.meta.StringExRepresent -> a.a.b.f:
    23:27:void <init>() -> <init>
brut.androlib.meta.StringExRepresent$1 -> a.a.b.g:
brut.androlib.meta.StringExRepresent$RepresentStringEx -> a.a.b.h:
    brut.androlib.meta.StringExRepresent this$0 -> a
    29:29:void <init>(brut.androlib.meta.StringExRepresent) -> <init>
    33:33:org.yaml.snakeyaml.nodes.Node representData(java.lang.Object) -> representData
    29:29:void <init>(brut.androlib.meta.StringExRepresent,brut.androlib.meta.StringExRepresent$1) -> <init>
brut.androlib.meta.UsesFramework -> a.a.b.i:
    java.util.List ids -> ids
    java.lang.String tag -> tag
    21:21:void <init>() -> <init>
brut.androlib.meta.VersionInfo -> a.a.b.j:
    java.lang.String versionCode -> versionCode
    java.lang.String versionName -> versionName
    19:19:void <init>() -> <init>
brut.androlib.meta.YamlStringEscapeUtils -> a.a.b.k:
    26:26:void <init>() -> <init>
    29:29:java.lang.String escapeString(java.lang.String) -> escapeString
    39:48:java.lang.String escapeJavaStyleString(java.lang.String,boolean,boolean) -> a
    61:129:void escapeJavaStyleString(java.io.Writer,java.lang.String,boolean,boolean) -> a
    141:141:java.lang.String unescapeString(java.lang.String) -> unescapeString
brut.androlib.mod.SmaliMod -> a.a.c.a:
    59:104:boolean assembleSmaliFile(java.io.File,org.jf.dexlib2.writer.builder.DexBuilder,boolean,boolean) -> a
brut.androlib.res.AndrolibResources -> a.a.d.a:
    brut.androlib.ApkOptions apkOptions -> a
    boolean sKeepBroken -> b
    java.util.logging.Logger LOGGER -> c
    java.io.File mFrameworkDirectory -> d
    brut.directory.ExtFile mFramework -> e
    java.lang.String mMinSdkVersion -> f
    java.lang.String mMaxSdkVersion -> g
    java.lang.String mTargetSdkVersion -> h
    java.lang.String mVersionCode -> i
    java.lang.String mVersionName -> j
    java.lang.String mPackageRenamed -> k
    java.lang.String mPackageId -> l
    boolean mSharedLibrary -> m
    java.lang.String[] IGNORED_PACKAGES -> n
    java.lang.String[] ALLOWED_PACKAGES -> o
    56:820:void <init>() -> <init>
    63:67:brut.androlib.res.data.ResTable getResTable(brut.directory.ExtFile,boolean) -> a
    72:101:brut.androlib.res.data.ResPackage loadMainPkg(brut.androlib.res.data.ResTable,brut.directory.ExtFile) -> a
    106:117:brut.androlib.res.data.ResPackage selectPkgWithMostResSpecs(brut.androlib.res.data.ResPackage[]) -> a
    122:142:brut.androlib.res.data.ResPackage loadFrameworkPkg(brut.androlib.res.data.ResTable,int,java.lang.String) -> a
    148:169:void decodeManifest(brut.androlib.res.data.ResTable,brut.directory.ExtFile,java.io.File) -> a
    175:193:void adjustPackageManifest(brut.androlib.res.data.ResTable,java.lang.String) -> a
    198:229:void decodeManifestWithResources(brut.androlib.res.data.ResTable,brut.directory.ExtFile,java.io.File) -> b
    233:278:void decode(brut.androlib.res.data.ResTable,brut.directory.ExtFile,java.io.File) -> c
    281:286:void setSdkInfo(java.util.Map) -> a
    289:293:void setVersionInfo(brut.androlib.meta.VersionInfo) -> a
    296:299:void setPackageRenamed(brut.androlib.meta.PackageInfo) -> a
    302:305:void setPackageId(brut.androlib.meta.PackageInfo) -> b
    308:309:void setSharedLibrary(boolean) -> a
    312:319:java.lang.String checkTargetSdkVersionBounds() -> a
    325:442:void aaptPackage(java.io.File,java.io.File,java.io.File,java.io.File,java.io.File,java.io.File[]) -> a
    445:450:int getMinSdkVersionFromAndroidCodename(brut.androlib.meta.MetaInfo,java.lang.String) -> a
    454:462:int mapSdkShorthandToVersion(java.lang.String) -> a
    497:505:brut.util.Duo getResFileDecoder() -> b
    509:515:brut.util.Duo getManifestFileDecoder() -> c
    519:524:brut.androlib.res.util.ExtMXSerializer getResXmlSerializer() -> d
    530:550:void generateValuesFile(brut.androlib.res.data.ResValuesFile,brut.directory.Directory,brut.androlib.res.util.ExtXmlSerializer) -> a
    555:575:void generatePublicXml(brut.androlib.res.data.ResPackage,brut.directory.Directory,org.xmlpull.v1.XmlSerializer) -> a
    580:590:brut.androlib.res.data.ResPackage[] getResPackagesFromApk(brut.directory.ExtFile,brut.androlib.res.data.ResTable,boolean) -> a
    596:624:java.io.File getFrameworkApk(int,java.lang.String) -> a
    749:784:java.io.File getFrameworkDir() -> e
    804:826:void <clinit>() -> <clinit>
brut.androlib.res.data.ResConfigFlags -> a.a.d.a.a:
    short mcc -> a
    short mnc -> b
    char[] language -> c
    char[] region -> d
    byte orientation -> e
    byte touchscreen -> f
    int density -> g
    byte keyboard -> h
    byte navigation -> i
    byte inputFlags -> j
    short screenWidth -> k
    short screenHeight -> l
    short sdkVersion -> m
    byte screenLayout -> n
    byte uiMode -> o
    short smallestScreenWidthDp -> p
    short screenWidthDp -> q
    short screenHeightDp -> r
    char[] localeScript -> t
    char[] localeVariant -> u
    byte screenLayout2 -> v
    byte colorMode -> w
    boolean isInvalid -> s
    java.lang.String mQualifiers -> x
    int size -> y
    int sErrCounter -> z
    java.util.logging.Logger LOGGER -> A
    63:89:void <init>() -> <init>
    98:166:void <init>(short,short,char[],char[],byte,byte,int,byte,byte,byte,short,short,short,byte,byte,short,short,short,char[],char[],byte,byte,boolean,int) -> <init>
    169:169:java.lang.String getQualifiers() -> a
    173:418:java.lang.String generateQualifiers() -> b
    422:440:short getNaturalSdkVersionRequirement() -> c
    444:473:java.lang.String getLocaleString() -> d
    477:481:java.lang.String toUpper(char[]) -> a
    487:487:java.lang.String toString() -> toString
    492:499:boolean equals(java.lang.Object) -> equals
    504:506:int hashCode() -> hashCode
    511:644:void <clinit>() -> <clinit>
brut.androlib.res.data.ResID -> a.a.d.a.b:
    int package_ -> a
    int type -> b
    int entry -> c
    int id -> d
    34:35:void <init>(int) -> <init>
    37:42:void <init>(int,int,int,int) -> <init>
    46:46:java.lang.String toString() -> toString
    51:53:int hashCode() -> hashCode
    58:68:boolean equals(java.lang.Object) -> equals
brut.androlib.res.data.ResPackage -> a.a.d.a.c:
    brut.androlib.res.data.ResTable mResTable -> a
    int mId -> b
    java.lang.String mName -> c
    java.util.Map mResSpecs -> d
    java.util.Map mConfigs -> e
    java.util.Map mTypes -> f
    java.util.Set mSynthesizedRes -> g
    brut.androlib.res.data.value.ResValueFactory mValueFactory -> h
    java.util.logging.Logger LOGGER -> i
    35:46:void <init>(brut.androlib.res.data.ResTable,int,java.lang.String) -> <init>
    49:49:java.util.List listResSpecs() -> a
    53:53:boolean hasResSpec(brut.androlib.res.data.ResID) -> a
    57:61:brut.androlib.res.data.ResResSpec getResSpec(brut.androlib.res.data.ResID) -> b
    81:81:int getResSpecCount() -> b
    85:90:brut.androlib.res.data.ResType getOrCreateConfig(brut.androlib.res.data.ResConfigFlags) -> a
    110:118:java.util.Set listFiles() -> c
    122:138:java.util.Collection listValuesFiles() -> d
    142:142:brut.androlib.res.data.ResTable getResTable() -> e
    146:146:int getId() -> f
    150:150:java.lang.String getName() -> g
    154:154:boolean isSynthesized(brut.androlib.res.data.ResID) -> c
    158:159:void removeResSpec(brut.androlib.res.data.ResResSpec) -> a
    162:165:void addResSpec(brut.androlib.res.data.ResResSpec) -> b
    174:179:void addType(brut.androlib.res.data.ResTypeSpec) -> a
    182:182:void addResource(brut.androlib.res.data.ResResource) -> a
    188:189:void addSynthesizedRes(int) -> a
    193:193:java.lang.String toString() -> toString
    198:211:boolean equals(java.lang.Object) -> equals
    216:219:int hashCode() -> hashCode
    223:226:brut.androlib.res.data.value.ResValueFactory getValueFactory() -> h
    229:229:void <clinit>() -> <clinit>
brut.androlib.res.data.ResResSpec -> a.a.d.a.d:
    brut.androlib.res.data.ResID mId -> a
    java.lang.String mName -> b
    brut.androlib.res.data.ResPackage mPackage -> c
    brut.androlib.res.data.ResTypeSpec mType -> d
    java.util.Map mResources -> e
    32:48:void <init>(brut.androlib.res.data.ResID,java.lang.String,brut.androlib.res.data.ResPackage,brut.androlib.res.data.ResTypeSpec) -> <init>
    51:51:java.util.Set listResources() -> a
    59:63:brut.androlib.res.data.ResResource getResource(brut.androlib.res.data.ResConfigFlags) -> a
    75:75:brut.androlib.res.data.ResResource getDefaultResource() -> b
    79:79:boolean hasDefaultResource() -> c
    87:87:java.lang.String getFullName(brut.androlib.res.data.ResPackage,boolean) -> a
    91:92:java.lang.String getFullName(boolean,boolean) -> a
    96:96:brut.androlib.res.data.ResID getId() -> d
    100:100:java.lang.String getName() -> e
    104:104:brut.androlib.res.data.ResPackage getPackage() -> f
    108:108:brut.androlib.res.data.ResTypeSpec getType() -> g
    112:112:boolean isDummyResSpec() -> h
    116:117:void addResource(brut.androlib.res.data.ResResource) -> a
    120:124:void addResource(brut.androlib.res.data.ResResource,boolean) -> a
    133:133:java.lang.String toString() -> toString
brut.androlib.res.data.ResResource -> a.a.d.a.e:
    brut.androlib.res.data.ResType mConfig -> a
    brut.androlib.res.data.ResResSpec mResSpec -> b
    brut.androlib.res.data.value.ResValue mValue -> c
    30:34:void <init>(brut.androlib.res.data.ResType,brut.androlib.res.data.ResResSpec,brut.androlib.res.data.value.ResValue) -> <init>
    37:37:java.lang.String getFilePath() -> a
    41:41:brut.androlib.res.data.ResType getConfig() -> b
    45:45:brut.androlib.res.data.ResResSpec getResSpec() -> c
    49:49:brut.androlib.res.data.value.ResValue getValue() -> d
    53:56:void replace(brut.androlib.res.data.value.ResValue) -> a
    60:60:java.lang.String toString() -> toString
brut.androlib.res.data.ResTable -> a.a.d.a.f:
    brut.androlib.res.AndrolibResources mAndRes -> a
    java.util.Map mPackagesById -> b
    java.util.Map mPackagesByName -> c
    java.util.Set mMainPackages -> d
    java.util.Set mFramePackages -> e
    java.lang.String mPackageRenamed -> f
    java.lang.String mPackageOriginal -> g
    int mPackageId -> h
    boolean mAnalysisMode -> i
    boolean mSharedLibrary -> j
    java.util.Map mSdkInfo -> k
    brut.androlib.meta.VersionInfo mVersionInfo -> l
    32:48:void <init>() -> <init>
    32:52:void <init>(brut.androlib.res.AndrolibResources) -> <init>
    58:62:brut.androlib.res.data.ResResSpec getResSpec(int) -> a
    66:66:brut.androlib.res.data.ResResSpec getResSpec(brut.androlib.res.data.ResID) -> a
    70:70:java.util.Set listMainPackages() -> a
    74:74:java.util.Set listFramePackages() -> b
    78:85:brut.androlib.res.data.ResPackage getPackage(int) -> b
    89:98:brut.androlib.res.data.ResPackage getHighestSpecPackage() -> c
    102:110:brut.androlib.res.data.ResPackage getCurrentResPackage() -> d
    115:119:brut.androlib.res.data.ResPackage getPackage(java.lang.String) -> a
    135:151:void addPackage(brut.androlib.res.data.ResPackage,boolean) -> a
    154:155:void setAnalysisMode(boolean) -> a
    158:159:void setPackageRenamed(java.lang.String) -> b
    162:163:void setPackageOriginal(java.lang.String) -> c
    166:167:void setPackageId(int) -> c
    170:171:void setSharedLibrary(boolean) -> b
    174:175:void clearSdkInfo() -> e
    178:179:void addSdkInfo(java.lang.String,java.lang.String) -> a
    182:183:void setVersionName(java.lang.String) -> d
    186:187:void setVersionCode(java.lang.String) -> e
    190:190:brut.androlib.meta.VersionInfo getVersionInfo() -> f
    194:194:java.util.Map getSdkInfo() -> g
    198:198:boolean getAnalysisMode() -> h
    202:202:java.lang.String getPackageRenamed() -> i
    206:206:java.lang.String getPackageOriginal() -> j
    210:210:int getPackageId() -> k
    214:214:boolean getSharedLibrary() -> l
brut.androlib.res.data.ResType -> a.a.d.a.g:
    brut.androlib.res.data.ResConfigFlags mFlags -> a
    java.util.Map mResources -> b
    28:32:void <init>(brut.androlib.res.data.ResConfigFlags) -> <init>
    51:51:brut.androlib.res.data.ResConfigFlags getFlags() -> a
    55:56:void addResource(brut.androlib.res.data.ResResource) -> a
    64:68:void addResource(brut.androlib.res.data.ResResource,boolean) -> a
    72:72:java.lang.String toString() -> toString
brut.androlib.res.data.ResTypeSpec -> a.a.d.a.h:
    java.lang.String mName -> a
    java.util.Map mResSpecs -> b
    brut.androlib.res.data.ResTable mResTable -> c
    brut.androlib.res.data.ResPackage mPackage -> d
    int mId -> e
    int mEntryCount -> f
    28:42:void <init>(java.lang.String,brut.androlib.res.data.ResTable,brut.androlib.res.data.ResPackage,int,int) -> <init>
    45:45:java.lang.String getName() -> a
    49:49:int getId() -> b
    57:57:boolean isString() -> c
    73:73:brut.androlib.res.data.ResResSpec getResSpecUnsafe(java.lang.String) -> a
    77:78:void removeResSpec(brut.androlib.res.data.ResResSpec) -> a
    81:84:void addResSpec(brut.androlib.res.data.ResResSpec) -> b
    88:88:java.lang.String toString() -> toString
brut.androlib.res.data.ResUnknownFiles -> a.a.d.a.i:
    java.util.Map mUnknownFiles -> a
    25:27:void <init>() -> <init>
    30:31:void addUnknownFileInfo(java.lang.String,java.lang.String) -> a
    34:34:java.util.Map getUnknownFiles() -> a
brut.androlib.res.data.ResValuesFile -> a.a.d.a.j:
    brut.androlib.res.data.ResPackage mPackage -> a
    brut.androlib.res.data.ResTypeSpec mType -> b
    brut.androlib.res.data.ResType mConfig -> c
    java.util.Set mResources -> d
    29:35:void <init>(brut.androlib.res.data.ResPackage,brut.androlib.res.data.ResTypeSpec,brut.androlib.res.data.ResType) -> <init>
    38:39:java.lang.String getPath() -> a
    44:44:java.util.Set listResources() -> b
    56:56:boolean isSynthesized(brut.androlib.res.data.ResResource) -> a
    60:61:void addResource(brut.androlib.res.data.ResResource) -> b
    65:78:boolean equals(java.lang.Object) -> equals
    83:86:int hashCode() -> hashCode
brut.androlib.res.data.value.ResArrayValue -> a.a.d.a.a.a:
    brut.androlib.res.data.value.ResScalarValue[] mItems -> b
    java.lang.String[] AllowedArrayTypes -> c
    36:99:void <init>(brut.androlib.res.data.value.ResReferenceValue,brut.util.Duo[]) -> <init>
    52:72:void serializeToResValuesXml(org.xmlpull.v1.XmlSerializer,brut.androlib.res.data.ResResource) -> a
    75:95:java.lang.String getType() -> a
brut.androlib.res.data.value.ResAttr -> a.a.d.a.a.b:
    int mType -> b
    java.lang.Integer mMin -> c
    java.lang.Integer mMax -> d
    java.lang.Boolean mL10n -> e
    33:38:void <init>(brut.androlib.res.data.value.ResReferenceValue,int,java.lang.Integer,java.lang.Integer,java.lang.Boolean) -> <init>
    42:42:java.lang.String convertToResXmlFormat(brut.androlib.res.data.value.ResScalarValue) -> a
    48:66:void serializeToResValuesXml(org.xmlpull.v1.XmlSerializer,brut.androlib.res.data.ResResource) -> a
    72:114:brut.androlib.res.data.value.ResAttr factory(brut.androlib.res.data.value.ResReferenceValue,brut.util.Duo[],brut.androlib.res.data.value.ResValueFactory,brut.androlib.res.data.ResPackage) -> a
    119:119:void serializeBody(org.xmlpull.v1.XmlSerializer,brut.androlib.res.data.ResResource) -> b
    122:150:java.lang.String getTypeAsString() -> a
brut.androlib.res.data.value.ResBagValue -> a.a.d.a.a.c:
    brut.androlib.res.data.value.ResReferenceValue mParent -> a
    32:34:void <init>(brut.androlib.res.data.value.ResReferenceValue) -> <init>
    39:60:void serializeToResValuesXml(org.xmlpull.v1.XmlSerializer,brut.androlib.res.data.ResResource) -> a
brut.androlib.res.data.value.ResBoolValue -> a.a.d.a.a.d:
    boolean mValue -> a
    26:28:void <init>(boolean,int,java.lang.String) -> <init>
    36:36:java.lang.String encodeAsResXml() -> a
brut.androlib.res.data.value.ResColorValue -> a.a.d.a.a.e:
    24:25:void <init>(int,java.lang.String) -> <init>
    29:29:java.lang.String encodeAsResXml() -> a
brut.androlib.res.data.value.ResDimenValue -> a.a.d.a.a.f:
    27:28:void <init>(int,java.lang.String) -> <init>
    32:32:java.lang.String encodeAsResXml() -> a
brut.androlib.res.data.value.ResEmptyValue -> a.a.d.a.a.g:
    int mValue -> a
    int type -> b
    26:28:void <init>(int,java.lang.String,int) -> <init>
    31:35:void <init>(int,java.lang.String,java.lang.String) -> <init>
    43:43:java.lang.String encodeAsResXml() -> a
brut.androlib.res.data.value.ResEnumAttr -> a.a.d.a.a.h:
    brut.util.Duo[] mItems -> b
    java.util.Map mItemsCache -> c
    33:81:void <init>(brut.androlib.res.data.value.ResReferenceValue,int,java.lang.Integer,java.lang.Integer,java.lang.Boolean,brut.util.Duo[]) -> <init>
    40:46:java.lang.String convertToResXmlFormat(brut.androlib.res.data.value.ResScalarValue) -> a
    52:60:void serializeBody(org.xmlpull.v1.XmlSerializer,brut.androlib.res.data.ResResource) -> b
    63:77:java.lang.String decodeValue(int) -> a
brut.androlib.res.data.value.ResFileValue -> a.a.d.a.a.i:
    java.lang.String mPath -> a
    28:30:void <init>(java.lang.String,int) -> <init>
    37:43:java.lang.String getStrippedPath() -> a
    48:48:java.lang.String toString() -> toString
brut.androlib.res.data.value.ResFlagsAttr -> a.a.d.a.a.j:
    brut.androlib.res.data.value.ResFlagsAttr$FlagItem[] mItems -> b
    brut.androlib.res.data.value.ResFlagsAttr$FlagItem[] mZeroFlags -> c
    brut.androlib.res.data.value.ResFlagsAttr$FlagItem[] mFlags -> d
    33:39:void <init>(brut.androlib.res.data.value.ResReferenceValue,int,java.lang.Integer,java.lang.Integer,java.lang.Boolean,brut.util.Duo[]) -> <init>
    44:73:java.lang.String convertToResXmlFormat(brut.androlib.res.data.value.ResScalarValue) -> a
    79:88:void serializeBody(org.xmlpull.v1.XmlSerializer,brut.androlib.res.data.ResResource) -> b
    91:96:boolean isSubpartOf(int,int[]) -> a
    100:107:java.lang.String renderFlags(brut.androlib.res.data.value.ResFlagsAttr$FlagItem[]) -> a
    111:139:void loadFlags() -> b
brut.androlib.res.data.value.ResFlagsAttr$1 -> a.a.d.a.a.k:
    brut.androlib.res.data.value.ResFlagsAttr this$0 -> a
    132:132:void <init>(brut.androlib.res.data.value.ResFlagsAttr) -> <init>
    135:136:int compare(brut.androlib.res.data.value.ResFlagsAttr$FlagItem,brut.androlib.res.data.value.ResFlagsAttr$FlagItem) -> a
    132:132:int compare(java.lang.Object,java.lang.Object) -> compare
brut.androlib.res.data.value.ResFlagsAttr$FlagItem -> a.a.d.a.a.l:
    brut.androlib.res.data.value.ResReferenceValue ref -> a
    int flag -> b
    java.lang.String value -> c
    151:154:void <init>(brut.androlib.res.data.value.ResReferenceValue,int) -> <init>
    157:160:java.lang.String getValue() -> a
brut.androlib.res.data.value.ResFloatValue -> a.a.d.a.a.m:
    float mValue -> a
    26:28:void <init>(float,int,java.lang.String) -> <init>
    36:36:java.lang.String encodeAsResXml() -> a
brut.androlib.res.data.value.ResFractionValue -> a.a.d.a.a.n:
    27:28:void <init>(int,java.lang.String) -> <init>
    32:32:java.lang.String encodeAsResXml() -> a
brut.androlib.res.data.value.ResIdValue -> a.a.d.a.a.o:
    28:28:void <init>() -> <init>
    32:37:void serializeToResValuesXml(org.xmlpull.v1.XmlSerializer,brut.androlib.res.data.ResResource) -> a
brut.androlib.res.data.value.ResIntBasedValue -> a.a.d.a.a.p:
    int mRawIntValue -> a
    25:27:void <init>(int) -> <init>
    30:30:int getRawIntValue() -> b
brut.androlib.res.data.value.ResIntValue -> a.a.d.a.a.q:
    int mValue -> a
    int type -> b
    30:32:void <init>(int,java.lang.String,int) -> <init>
    35:37:void <init>(int,java.lang.String,java.lang.String) -> <init>
    40:40:int getValue() -> c
    45:45:java.lang.String encodeAsResXml() -> a
brut.androlib.res.data.value.ResPluralsValue -> a.a.d.a.a.r:
    brut.androlib.res.data.value.ResScalarValue[] mItems -> b
    java.lang.String[] QUANTITY_MAP -> c
    34:40:void <init>(brut.androlib.res.data.value.ResReferenceValue,brut.util.Duo[]) -> <init>
    45:59:void serializeToResValuesXml(org.xmlpull.v1.XmlSerializer,brut.androlib.res.data.ResResource) -> a
    65:65:void <clinit>() -> <clinit>
brut.androlib.res.data.value.ResReferenceValue -> a.a.d.a.a.s:
    brut.androlib.res.data.ResPackage mPackage -> b
    boolean mTheme -> e
    32:33:void <init>(brut.androlib.res.data.ResPackage,int,java.lang.String) -> <init>
    37:40:void <init>(brut.androlib.res.data.ResPackage,int,java.lang.String,boolean) -> <init>
    44:57:java.lang.String encodeAsResXml() -> a
    62:64:brut.androlib.res.data.ResResSpec getReferent() -> d
    69:69:boolean isNull() -> e
    73:73:boolean referentIsNull() -> f
brut.androlib.res.data.value.ResScalarValue -> a.a.d.a.a.t:
    java.lang.String mType -> c
    java.lang.String mRawValue -> d
    36:39:void <init>(java.lang.String,int,java.lang.String) -> <init>
    43:46:java.lang.String encodeAsResXmlAttr() -> g
    50:50:java.lang.String encodeAsResXmlItemValue() -> h
    55:58:java.lang.String encodeAsResXmlValue() -> i
    62:62:java.lang.String encodeAsResXmlNonEscapedItemValue() -> j
    66:66:boolean hasMultipleNonPositionalSubstitutions() -> k
    72:102:void serializeToResValuesXml(org.xmlpull.v1.XmlSerializer,brut.androlib.res.data.ResResource) -> a
    105:105:java.lang.String getType() -> l
    110:110:void serializeExtraXmlAttrs(org.xmlpull.v1.XmlSerializer,brut.androlib.res.data.ResResource) -> b
    java.lang.String encodeAsResXml() -> a
brut.androlib.res.data.value.ResStringValue -> a.a.d.a.a.u:
    java.util.regex.Pattern allDigits -> a
    33:34:void <init>(java.lang.String,int) -> <init>
    37:38:void <init>(java.lang.String,int,java.lang.String) -> <init>
    42:42:java.lang.String encodeAsResXmlAttr() -> g
    47:47:java.lang.String encodeAsResXmlItemValue() -> h
    52:52:java.lang.String encodeAsResXmlValue() -> i
    57:57:java.lang.String encodeAsResXml() -> a
    62:65:void serializeExtraXmlAttrs(org.xmlpull.v1.XmlSerializer,brut.androlib.res.data.ResResource) -> b
    68:71:java.lang.String checkIfStringIsNumeric(java.lang.String) -> a
    74:74:void <clinit>() -> <clinit>
brut.androlib.res.data.value.ResStyleValue -> a.a.d.a.a.v:
    brut.util.Duo[] mItems -> b
    java.util.logging.Logger LOGGER -> c
    35:42:void <init>(brut.androlib.res.data.value.ResReferenceValue,brut.util.Duo[],brut.androlib.res.data.value.ResValueFactory) -> <init>
    47:91:void serializeToResValuesXml(org.xmlpull.v1.XmlSerializer,brut.androlib.res.data.ResResource) -> a
    95:95:void <clinit>() -> <clinit>
brut.androlib.res.data.value.ResValue -> a.a.d.a.a.w:
    22:22:void <init>() -> <init>
brut.androlib.res.data.value.ResValueFactory -> a.a.d.a.a.x:
    brut.androlib.res.data.ResPackage mPackage -> a
    30:32:void <init>(brut.androlib.res.data.ResPackage) -> <init>
    35:70:brut.androlib.res.data.value.ResScalarValue factory(int,int,java.lang.String) -> a
    74:83:brut.androlib.res.data.value.ResIntBasedValue factory(java.lang.String,int) -> a
    87:103:brut.androlib.res.data.value.ResBagValue bagFactory(int,brut.util.Duo[]) -> a
    107:107:brut.androlib.res.data.value.ResReferenceValue newReference(int,java.lang.String) -> a
    111:111:brut.androlib.res.data.value.ResReferenceValue newReference(int,java.lang.String,boolean) -> a
brut.androlib.res.decoder.ARSCDecoder -> a.a.d.b.a:
    brut.util.ExtDataInput mIn -> a
    brut.androlib.res.data.ResTable mResTable -> b
    org.apache.commons.io.input.CountingInputStream mCountIn -> c
    java.util.List mFlagsOffsets -> d
    boolean mKeepBroken -> e
    brut.androlib.res.decoder.ARSCDecoder$Header mHeader -> f
    brut.androlib.res.decoder.StringBlock mTableStrings -> g
    brut.androlib.res.decoder.StringBlock mTypeNames -> h
    brut.androlib.res.decoder.StringBlock mSpecNames -> i
    brut.androlib.res.data.ResPackage mPkg -> j
    brut.androlib.res.data.ResTypeSpec mTypeSpec -> k
    brut.androlib.res.data.ResType mType -> l
    int mResId -> m
    boolean[] mMissingResSpecs -> n
    java.util.HashMap mResTypeSpecs -> o
    java.util.logging.Logger LOGGER -> p
    46:52:brut.androlib.res.decoder.ARSCDecoder$ARSCData decode(java.io.InputStream,boolean,boolean,brut.androlib.res.data.ResTable) -> a
    56:533:void <init>(java.io.InputStream,brut.androlib.res.data.ResTable,boolean,boolean) -> <init>
    72:82:brut.androlib.res.data.ResPackage[] readTableHeader() -> a
    86:121:brut.androlib.res.data.ResPackage readTablePackage() -> b
    125:140:void readLibraryType() -> c
    143:168:brut.androlib.res.data.ResTypeSpec readTableTypeSpec() -> d
    172:184:brut.androlib.res.data.ResTypeSpec readSingleTableTypeSpec() -> e
    188:235:brut.androlib.res.data.ResType readTableType() -> f
    239:293:void readEntry() -> g
    296:316:brut.androlib.res.data.value.ResBagValue readComplexEntry() -> h
    320:327:brut.androlib.res.data.value.ResIntBasedValue readValue() -> i
    331:425:brut.androlib.res.data.ResConfigFlags readConfigFlags() -> j
    435:444:char[] unpackLanguageOrRegion(byte,byte,char) -> a
    448:459:java.lang.String readScriptOrVariantChar(int) -> a
    463:464:void addTypeSpec(brut.androlib.res.data.ResTypeSpec) -> a
    467:493:void addMissingResSpecs() -> k
    496:500:void removeResSpec(brut.androlib.res.data.ResResSpec) -> a
    503:503:brut.androlib.res.decoder.ARSCDecoder$Header nextChunk() -> l
    507:511:void checkChunkType(int) -> b
    514:516:void nextChunkCheckType(int) -> c
    579:579:void <clinit>() -> <clinit>
brut.androlib.res.decoder.ARSCDecoder$ARSCData -> a.a.d.b.b:
    brut.androlib.res.data.ResPackage[] mPackages -> a
    brut.androlib.res.decoder.ARSCDecoder$FlagsOffset[] mFlagsOffsets -> b
    brut.androlib.res.data.ResTable mResTable -> c
    584:588:void <init>(brut.androlib.res.data.ResPackage[],brut.androlib.res.decoder.ARSCDecoder$FlagsOffset[],brut.androlib.res.data.ResTable) -> <init>
    595:595:brut.androlib.res.data.ResPackage[] getPackages() -> a
brut.androlib.res.decoder.ARSCDecoder$FlagsOffset -> a.a.d.b.c:
    int offset -> a
    int count -> b
    573:576:void <init>(int,int) -> <init>
brut.androlib.res.decoder.ARSCDecoder$Header -> a.a.d.b.d:
    short type -> a
    int headerSize -> b
    int chunkSize -> c
    int startPosition -> d
    int endPosition -> e
    546:552:void <init>(short,int,int,int) -> <init>
    556:562:brut.androlib.res.decoder.ARSCDecoder$Header read(brut.util.ExtDataInput,org.apache.commons.io.input.CountingInputStream) -> a
brut.androlib.res.decoder.AXmlResourceParser -> a.a.d.b.e:
    brut.util.ExtDataInput m_reader -> a
    brut.androlib.res.decoder.ResAttrDecoder mAttrDecoder -> b
    brut.androlib.AndrolibException mFirstError -> c
    boolean m_operational -> d
    brut.androlib.res.decoder.StringBlock m_strings -> e
    int[] m_resourceIDs -> f
    brut.androlib.res.decoder.AXmlResourceParser$NamespaceStack m_namespaces -> g
    java.lang.String android_ns -> h
    boolean m_decreaseDepth -> i
    int m_event -> j
    int m_lineNumber -> k
    int m_name -> l
    int m_namespaceUri -> m
    int[] m_attributes -> n
    int m_idAttribute -> o
    int m_classAttribute -> p
    int m_styleAttribute -> q
    java.util.logging.Logger LOGGER -> r
    50:966:void <init>() -> <init>
    60:60:brut.androlib.AndrolibException getFirstError() -> a
    64:64:brut.androlib.res.decoder.ResAttrDecoder getAttrDecoder() -> b
    68:69:void setAttrDecoder(brut.androlib.res.decoder.ResAttrDecoder) -> a
    72:79:void open(java.io.InputStream) -> a
    83:92:void close() -> close
    97:105:int next() -> next
    111:111:int nextToken() -> nextToken
    116:123:int nextTag() -> nextTag
    128:142:java.lang.String nextText() -> nextText
    149:153:void require(int,java.lang.String,java.lang.String) -> require
    157:157:int getDepth() -> getDepth
    162:162:int getEventType() -> getEventType
    167:167:int getLineNumber() -> getLineNumber
    172:175:java.lang.String getName() -> getName
    180:183:java.lang.String getText() -> getText
    188:196:char[] getTextCharacters(int[]) -> getTextCharacters
    201:201:java.lang.String getNamespace() -> getNamespace
    206:207:java.lang.String getPrefix() -> getPrefix
    212:212:java.lang.String getPositionDescription() -> getPositionDescription
    217:217:int getNamespaceCount(int) -> getNamespaceCount
    222:223:java.lang.String getNamespacePrefix(int) -> getNamespacePrefix
    228:229:java.lang.String getNamespaceUri(int) -> getNamespaceUri
    235:240:java.lang.String getClassAttribute() -> getClassAttribute
    245:250:java.lang.String getIdAttribute() -> getIdAttribute
    255:263:int getIdAttributeResourceValue(int) -> getIdAttributeResourceValue
    268:272:int getStyleAttribute() -> getStyleAttribute
    277:280:int getAttributeCount() -> getAttributeCount
    285:305:java.lang.String getAttributeNamespace(int) -> getAttributeNamespace
    310:316:java.lang.String getAttributePrefix(int) -> getAttributePrefix
    321:339:java.lang.String getAttributeName(int) -> getAttributeName
    345:350:int getAttributeNameResource(int) -> getAttributeNameResource
    355:376:java.lang.String getAttributeValue(int) -> getAttributeValue
    381:381:boolean getAttributeBooleanValue(int,boolean) -> getAttributeBooleanValue
    386:392:float getAttributeFloatValue(int,float) -> getAttributeFloatValue
    397:402:int getAttributeIntValue(int,int) -> getAttributeIntValue
    407:407:int getAttributeUnsignedIntValue(int,int) -> getAttributeUnsignedIntValue
    412:417:int getAttributeResourceValue(int,int) -> getAttributeResourceValue
    422:426:java.lang.String getAttributeValue(java.lang.String,java.lang.String) -> getAttributeValue
    431:435:boolean getAttributeBooleanValue(java.lang.String,java.lang.String,boolean) -> getAttributeBooleanValue
    440:444:float getAttributeFloatValue(java.lang.String,java.lang.String,float) -> getAttributeFloatValue
    449:453:int getAttributeIntValue(java.lang.String,java.lang.String,int) -> getAttributeIntValue
    458:462:int getAttributeUnsignedIntValue(java.lang.String,java.lang.String,int) -> getAttributeUnsignedIntValue
    467:471:int getAttributeResourceValue(java.lang.String,java.lang.String,int) -> getAttributeResourceValue
    477:477:int getAttributeListValue(int,java.lang.String[],int) -> getAttributeListValue
    483:483:int getAttributeListValue(java.lang.String,java.lang.String,java.lang.String[],int) -> getAttributeListValue
    488:488:java.lang.String getAttributeType(int) -> getAttributeType
    493:493:boolean isAttributeDefault(int) -> isAttributeDefault
    500:501:void setInput(java.io.InputStream,java.lang.String) -> setInput
    505:505:void setInput(java.io.Reader) -> setInput
    510:510:java.lang.String getInputEncoding() -> getInputEncoding
    515:515:int getColumnNumber() -> getColumnNumber
    520:520:boolean isEmptyElementTag() -> isEmptyElementTag
    525:525:boolean isWhitespace() -> isWhitespace
    531:531:void defineEntityReplacementText(java.lang.String,java.lang.String) -> defineEntityReplacementText
    536:536:java.lang.String getNamespace(java.lang.String) -> getNamespace
    541:541:java.lang.Object getProperty(java.lang.String) -> getProperty
    547:547:void setProperty(java.lang.String,java.lang.Object) -> setProperty
    552:552:boolean getFeature(java.lang.String) -> getFeature
    558:558:void setFeature(java.lang.String,boolean) -> setFeature
    790:797:int getAttributeOffset(int) -> a
    801:815:int findAttribute(java.lang.String,java.lang.String) -> a
    819:827:void resetEventInfo() -> c
    831:945:void doNext() -> d
    948:951:void setFirstError(brut.androlib.AndrolibException) -> a
    977:977:void <clinit>() -> <clinit>
brut.androlib.res.decoder.AXmlResourceParser$NamespaceStack -> a.a.d.b.f:
    int[] m_data -> a
    int m_dataLength -> b
    int m_count -> c
    int m_depth -> d
    579:581:void <init>() -> <init>
    584:587:void reset() -> a
    594:598:int getCurrentCount() -> b
    602:615:int getAccumulatedCount(int) -> a
    619:631:void push(int,int) -> a
    662:677:boolean pop() -> c
    681:681:int getPrefix(int) -> b
    685:685:int getUri(int) -> c
    689:689:int findPrefix(int) -> d
    697:697:int getDepth() -> d
    701:707:void increaseDepth() -> e
    710:721:void decreaseDepth() -> f
    724:732:void ensureDataCapacity(int) -> e
    735:755:int find(int,boolean) -> a
    759:776:int get(int,boolean) -> b
brut.androlib.res.decoder.Res9patchStreamDecoder -> a.a.d.b.g:
    34:34:void <init>() -> <init>
    42:119:void decode(java.io.InputStream,java.io.OutputStream) -> a
    124:126:brut.androlib.res.decoder.Res9patchStreamDecoder$NinePatch getNinePatch(byte[]) -> a
    132:134:brut.androlib.res.decoder.Res9patchStreamDecoder$OpticalInset getOpticalInset(byte[]) -> b
    140:157:void find9patchChunk(java.io.DataInput,int) -> a
    162:166:void drawHLine(android.graphics.Bitmap,int,int,int) -> a
    170:174:void drawVLine(android.graphics.Bitmap,int,int,int) -> b
brut.androlib.res.decoder.Res9patchStreamDecoder$NinePatch -> a.a.d.b.h:
    int padLeft -> a
    int padRight -> b
    int padTop -> c
    int padBottom -> d
    int[] xDivs -> e
    int[] yDivs -> f
    188:195:void <init>(int,int,int,int,int[],int[]) -> <init>
    199:212:brut.androlib.res.decoder.Res9patchStreamDecoder$NinePatch decode(brut.util.ExtDataInput) -> a
brut.androlib.res.decoder.Res9patchStreamDecoder$OpticalInset -> a.a.d.b.i:
    int layoutBoundsLeft -> a
    int layoutBoundsTop -> b
    int layoutBoundsRight -> c
    int layoutBoundsBottom -> d
    223:228:void <init>(int,int,int,int) -> <init>
    232:236:brut.androlib.res.decoder.Res9patchStreamDecoder$OpticalInset decode(brut.util.ExtDataInput) -> a
brut.androlib.res.decoder.ResAttrDecoder -> a.a.d.b.j:
    brut.androlib.res.data.ResPackage mCurrentPackage -> a
    29:29:void <init>() -> <init>
    32:47:java.lang.String decode(int,int,java.lang.String,int) -> a
    53:61:java.lang.String decodeManifestAttr(int) -> a
    65:68:brut.androlib.res.data.ResPackage getCurrentPackage() -> a
    72:73:void setCurrentPackage(brut.androlib.res.data.ResPackage) -> a
brut.androlib.res.decoder.ResFileDecoder -> a.a.d.b.k:
    brut.androlib.res.decoder.ResStreamDecoderContainer mDecoders -> a
    java.util.logging.Logger LOGGER -> b
    38:40:void <init>(brut.androlib.res.decoder.ResStreamDecoderContainer) -> <init>
    45:112:void decode(brut.androlib.res.data.ResResource,brut.directory.Directory,brut.directory.Directory) -> a
    117:125:void decode(brut.directory.Directory,java.lang.String,brut.directory.Directory,java.lang.String,java.lang.String) -> a
    129:133:void copyRaw(brut.directory.Directory,brut.directory.Directory,java.lang.String) -> a
    138:146:void decodeManifest(brut.directory.Directory,java.lang.String,brut.directory.Directory,java.lang.String) -> a
    148:148:void <clinit>() -> <clinit>
brut.androlib.res.decoder.ResRawStreamDecoder -> a.a.d.b.l:
    28:28:void <init>() -> <init>
    33:37:void decode(java.io.InputStream,java.io.OutputStream) -> a
brut.androlib.res.decoder.ResStreamDecoder -> a.a.d.b.m:
    void decode(java.io.InputStream,java.io.OutputStream) -> a
brut.androlib.res.decoder.ResStreamDecoderContainer -> a.a.d.b.n:
    java.util.Map mDecoders -> a
    28:29:void <init>() -> <init>
    33:34:void decode(java.io.InputStream,java.io.OutputStream,java.lang.String) -> a
    37:41:brut.androlib.res.decoder.ResStreamDecoder getDecoder(java.lang.String) -> a
    45:46:void setDecoder(java.lang.String,brut.androlib.res.decoder.ResStreamDecoder) -> a
brut.androlib.res.decoder.StringBlock -> a.a.d.b.o:
    int[] m_stringOffsets -> a
    byte[] m_strings -> b
    int[] m_styleOffsets -> c
    int[] m_styles -> d
    boolean m_isUTF8 -> e
    int[] m_stringOwns -> f
    java.nio.charset.CharsetDecoder UTF16LE_DECODER -> g
    java.nio.charset.CharsetDecoder UTF8_DECODER -> h
    java.util.logging.Logger LOGGER -> i
    44:81:brut.androlib.res.decoder.StringBlock read(brut.util.ExtDataInput) -> a
    95:110:java.lang.String getString(int) -> a
    126:186:java.lang.String getHTML(int) -> b
    190:229:void outputStyleTag(java.lang.String,java.lang.StringBuilder,boolean) -> a
    235:255:int find(java.lang.String) -> a
    258:360:void <init>() -> <init>
    267:291:int[] getStyle(int) -> c
    296:300:java.lang.String decodeString(int,int) -> a
    305:305:int getShort(byte[],int) -> a
    318:336:int[] getUtf8(byte[],int) -> b
    340:349:int[] getUtf16(byte[],int) -> c
    361:361:void <clinit>() -> <clinit>
brut.androlib.res.decoder.XmlPullStreamDecoder -> a.a.d.b.p:
    org.xmlpull.v1.XmlPullParser mParser -> a
    brut.androlib.res.util.ExtXmlSerializer mSerial -> b
    java.util.logging.Logger LOGGER -> c
    40:43:void <init>(org.xmlpull.v1.XmlPullParser,brut.androlib.res.util.ExtXmlSerializer) -> <init>
    49:149:void decode(java.io.InputStream,java.io.OutputStream) -> a
    153:154:void decodeManifest(java.io.InputStream,java.io.OutputStream) -> b
    159:159:void <clinit>() -> <clinit>
brut.androlib.res.decoder.XmlPullStreamDecoder$1 -> a.a.d.b.q:
    boolean hideSdkInfo -> a
    boolean hidePackageInfo -> b
    brut.androlib.res.data.ResTable val$resTable -> c
    brut.androlib.res.decoder.XmlPullStreamDecoder this$0 -> d
    53:55:void <init>(brut.androlib.res.decoder.XmlPullStreamDecoder,org.xmlpull.v1.XmlSerializer,org.xmlpull.v1.wrapper.XmlPullWrapperFactory,brut.androlib.res.data.ResTable) -> <init>
    60:84:void event(org.xmlpull.v1.XmlPullParser) -> event
    91:102:boolean parseManifest(org.xmlpull.v1.XmlPullParser) -> a
    107:133:boolean parseAttr(org.xmlpull.v1.XmlPullParser) -> b
brut.androlib.res.util.ExtMXSerializer -> a.a.d.c.a:
    java.lang.String mDefaultEncoding -> J
    boolean mIsDisabledAttrEscape -> K
    25:76:void <init>() -> <init>
    29:31:void startDocument(java.lang.String,java.lang.Boolean) -> startDocument
    35:40:void writeAttributeValue(java.lang.String,java.io.Writer) -> a
    44:45:void setOutput(java.io.OutputStream,java.lang.String) -> setOutput
    49:52:java.lang.Object getProperty(java.lang.String) -> getProperty
    57:62:void setProperty(java.lang.String,java.lang.Object) -> setProperty
    66:67:brut.androlib.res.util.ExtXmlSerializer newLine() -> a
    72:73:void setDisabledAttrEscape(boolean) -> a
brut.androlib.res.util.ExtXmlSerializer -> a.a.d.c.b:
    brut.androlib.res.util.ExtXmlSerializer newLine() -> a
brut.androlib.res.xml.ResValuesXmlSerializable -> a.a.d.d.a:
    void serializeToResValuesXml(org.xmlpull.v1.XmlSerializer,brut.androlib.res.data.ResResource) -> a
brut.androlib.res.xml.ResXmlEncoders -> a.a.d.d.b:
    32:32:java.lang.String escapeXmlChars(java.lang.String) -> a
    36:70:java.lang.String encodeAsResXmlAttr(java.lang.String) -> b
    74:141:java.lang.String encodeAsXmlValue(java.lang.String) -> c
    145:146:boolean hasMultipleNonPositionalSubstitutions(java.lang.String) -> d
    150:165:java.lang.String enumerateNonPositionalSubstitutionsIfRequired(java.lang.String) -> e
    174:212:brut.util.Duo findSubstitutions(java.lang.String,int) -> a
    216:217:boolean isPrintableChar(char) -> a
brut.androlib.res.xml.ResXmlPatcher -> a.a.d.d.c:
    java.util.logging.Logger LOGGER -> a
    49:49:void <init>() -> <init>
    58:77:void removeApplicationDebugTag(java.io.File) -> a
    92:143:void fixingPublicAttrsInProviderAttributes(java.io.File) -> b
    155:162:boolean isSaved(java.io.File,boolean,org.w3c.dom.Node) -> a
    174:197:java.lang.String pullValueFromStrings(java.io.File,java.lang.String) -> a
    207:226:void removeManifestVersions(java.io.File) -> c
    237:250:void renameManifestPackage(java.io.File,java.lang.String) -> b
    263:281:org.w3c.dom.Document loadDocument(java.io.File) -> d
    297:302:void saveDocument(java.io.File,org.w3c.dom.Document) -> a
    309:309:void <clinit>() -> <clinit>
brut.androlib.src.SmaliBuilder -> a.a.e.a:
    brut.directory.ExtFile mSmaliDir -> a
    java.io.File mDexFile -> b
    int mApiLevel -> c
    java.util.logging.Logger LOGGER -> d
    36:37:void build(brut.directory.ExtFile,java.io.File,int) -> a
    43:88:void <init>(brut.directory.ExtFile,java.io.File,int) -> <init>
    52:65:void build() -> a
    69:84:void buildFile(java.lang.String,org.jf.dexlib2.writer.builder.DexBuilder) -> a
    90:90:void <clinit>() -> <clinit>
brut.androlib.src.SmaliDecoder -> a.a.e.b:
    java.io.File mApkFile -> a
    java.io.File mOutDir -> b
    java.lang.String mDexFile -> c
    boolean mBakDeb -> d
    int mApi -> e
    38:39:void decode(java.io.File,java.io.File,java.lang.String,boolean,int) -> a
    41:47:void <init>(java.io.File,java.io.File,java.lang.String,boolean,int) -> <init>
    51:87:void decode() -> a
brut.common.BrutException -> a.b.a:
    24:25:void <init>(java.lang.Throwable) -> <init>
    28:29:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    32:33:void <init>(java.lang.String) -> <init>
    35:36:void <init>() -> <init>
brut.common.InvalidUnknownFileException -> a.b.b:
    21:22:void <init>(java.lang.String) -> <init>
brut.common.RootUnknownFileException -> a.b.c:
    21:22:void <init>(java.lang.String) -> <init>
brut.common.TraversalUnknownFileException -> a.b.d:
    21:22:void <init>(java.lang.String) -> <init>
brut.directory.AbstractDirectory -> a.c.a:
    java.util.Set mFiles -> a
    java.util.Set mFilesRecursive -> b
    java.util.Map mDirs -> c
    28:28:void <init>() -> <init>
    35:35:java.util.Set getFiles() -> a
    40:54:java.util.Set getFiles(boolean) -> a
    61:69:boolean containsFile(java.lang.String) -> a
    76:84:boolean containsDir(java.lang.String) -> b
    90:90:java.util.Map getDirs() -> b
    96:96:java.util.Map getDirs(boolean) -> b
    101:108:java.io.InputStream getFileInput(java.lang.String) -> c
    113:126:java.io.OutputStream getFileOutput(java.lang.String) -> d
    131:138:brut.directory.Directory getDir(java.lang.String) -> e
    143:160:brut.directory.Directory createDir(java.lang.String) -> f
    167:180:boolean removeFile(java.lang.String) -> g
    184:185:void copyToDir(brut.directory.Directory) -> a
    198:199:void copyToDir(java.io.File) -> a
    203:204:void copyToDir(java.io.File,java.lang.String[]) -> a
    208:209:void copyToDir(java.io.File,java.lang.String) -> a
    213:213:int getCompressionLevel(java.lang.String) -> h
    217:217:java.util.Map getAbstractDirs() -> c
    221:236:java.util.Map getAbstractDirs(boolean) -> c
    242:242:void close() -> d
    245:252:brut.directory.AbstractDirectory$SubPath getSubPath(java.lang.String) -> m
    256:260:brut.directory.AbstractDirectory$ParsedPath parsePath(java.lang.String) -> n
    void loadFiles() -> e
    void loadDirs() -> f
    java.io.InputStream getFileInputLocal(java.lang.String) -> i
    java.io.OutputStream getFileOutputLocal(java.lang.String) -> j
    brut.directory.AbstractDirectory createDirLocal(java.lang.String) -> k
    void removeFileLocal(java.lang.String) -> l
brut.directory.AbstractDirectory$ParsedPath -> a.c.b:
    java.lang.String dir -> a
    java.lang.String subpath -> b
    brut.directory.AbstractDirectory this$0 -> c
    277:280:void <init>(brut.directory.AbstractDirectory,java.lang.String,java.lang.String) -> <init>
brut.directory.AbstractDirectory$SubPath -> a.c.c:
    brut.directory.AbstractDirectory dir -> a
    java.lang.String path -> b
    brut.directory.AbstractDirectory this$0 -> c
    287:290:void <init>(brut.directory.AbstractDirectory,brut.directory.AbstractDirectory,java.lang.String) -> <init>
brut.directory.DirUtil -> a.c.d:
    30:33:void copyToDir(brut.directory.Directory,brut.directory.Directory) -> a
    45:56:void copyToDir(brut.directory.Directory,brut.directory.Directory,java.lang.String) -> a
    60:63:void copyToDir(brut.directory.Directory,java.io.File) -> a
    67:70:void copyToDir(brut.directory.Directory,java.io.File,java.lang.String[]) -> a
    75:94:void copyToDir(brut.directory.Directory,java.io.File,java.lang.String) -> a
brut.directory.Directory -> a.c.e:
    java.util.Set getFiles(boolean) -> a
    java.util.Map getDirs() -> b
    boolean containsFile(java.lang.String) -> a
    boolean containsDir(java.lang.String) -> b
    java.io.InputStream getFileInput(java.lang.String) -> c
    java.io.OutputStream getFileOutput(java.lang.String) -> d
    brut.directory.Directory getDir(java.lang.String) -> e
    brut.directory.Directory createDir(java.lang.String) -> f
    boolean removeFile(java.lang.String) -> g
    void copyToDir(brut.directory.Directory) -> a
    void copyToDir(java.io.File) -> a
    void copyToDir(java.io.File,java.lang.String[]) -> a
    void copyToDir(java.io.File,java.lang.String) -> a
    int getCompressionLevel(java.lang.String) -> h
    void close() -> d
brut.directory.DirectoryException -> a.c.f:
    25:26:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    29:30:void <init>(java.lang.String) -> <init>
    33:34:void <init>(java.lang.Throwable) -> <init>
    37:38:void <init>() -> <init>
brut.directory.ExtFile -> a.c.g:
    brut.directory.Directory mDirectory -> a
    28:29:void <init>(java.io.File) -> <init>
    36:37:void <init>(java.io.File,java.lang.String) -> <init>
    48:55:brut.directory.Directory getDirectory() -> a
    59:62:void close() -> b
brut.directory.FileDirectory -> a.c.h:
    java.io.File mDir -> d
    36:41:void <init>(java.io.File) -> <init>
    45:47:brut.directory.AbstractDirectory createDirLocal(java.lang.String) -> k
    53:55:java.io.InputStream getFileInputLocal(java.lang.String) -> i
    62:64:java.io.OutputStream getFileOutputLocal(java.lang.String) -> j
    70:71:void loadDirs() -> f
    75:76:void loadFiles() -> e
    80:81:void removeFileLocal(java.lang.String) -> l
    84:84:java.lang.String generatePath(java.lang.String) -> m
    88:103:void loadAll() -> g
    106:106:java.io.File getDir() -> h
brut.directory.PathAlreadyExists -> a.c.i:
    20:21:void <init>() -> <init>
    28:29:void <init>(java.lang.String) -> <init>
brut.directory.PathNotExist -> a.c.j:
    21:22:void <init>() -> <init>
    25:26:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    29:30:void <init>(java.lang.String) -> <init>
brut.directory.ZipRODirectory -> a.c.k:
    java.util.zip.ZipFile mZipFile -> d
    java.lang.String mPath -> e
    38:39:void <init>(java.io.File) -> <init>
    51:58:void <init>(java.io.File,java.lang.String) -> <init>
    61:64:void <init>(java.util.zip.ZipFile,java.lang.String) -> <init>
    69:69:brut.directory.AbstractDirectory createDirLocal(java.lang.String) -> k
    76:78:java.io.InputStream getFileInputLocal(java.lang.String) -> i
    85:85:java.io.OutputStream getFileOutputLocal(java.lang.String) -> j
    90:91:void loadDirs() -> f
    95:96:void loadFiles() -> e
    100:100:void removeFileLocal(java.lang.String) -> l
    106:110:int getCompressionLevel(java.lang.String) -> h
    114:144:void loadAll() -> g
    147:147:java.lang.String getPath() -> h
    151:151:java.util.zip.ZipFile getZipFile() -> i
    156:157:void close() -> d
brut.util.BrutIO -> a.d.a:
    38:43:void copyAndClose(java.io.InputStream,java.io.OutputStream) -> a
    46:53:long recursiveModifiedTime(java.io.File[]) -> a
    57:67:long recursiveModifiedTime(java.io.File) -> a
    71:77:java.util.zip.CRC32 calculateCrc(java.io.InputStream) -> a
    81:97:java.lang.String sanitizeUnknownFile(java.io.File,java.lang.String) -> a
    101:106:void copy(java.io.File,java.util.zip.ZipOutputStream) -> a
    109:114:void copy(java.util.zip.ZipFile,java.util.zip.ZipOutputStream,java.util.zip.ZipEntry) -> a
brut.util.DataInputDelegate -> a.d.b:
    java.io.DataInput mDelegate -> a
    28:30:void <init>(java.io.DataInput) -> <init>
    33:33:int skipBytes(int) -> skipBytes
    37:37:int readUnsignedShort() -> readUnsignedShort
    41:41:int readUnsignedByte() -> readUnsignedByte
    45:45:java.lang.String readUTF() -> readUTF
    49:49:short readShort() -> readShort
    53:53:long readLong() -> readLong
    57:57:java.lang.String readLine() -> readLine
    61:61:int readInt() -> readInt
    65:66:void readFully(byte[],int,int) -> readFully
    69:70:void readFully(byte[]) -> readFully
    73:73:float readFloat() -> readFloat
    77:77:double readDouble() -> readDouble
    81:81:char readChar() -> readChar
    85:85:byte readByte() -> readByte
    89:89:boolean readBoolean() -> readBoolean
brut.util.Duo -> a.d.c:
    java.lang.Object m1 -> a
    java.lang.Object m2 -> b
    26:29:void <init>(java.lang.Object,java.lang.Object) -> <init>
    33:46:boolean equals(java.lang.Object) -> equals
    51:54:int hashCode() -> hashCode
brut.util.ExtDataInput -> a.d.d:
    26:27:void <init>(java.io.InputStream) -> <init>
    30:31:void <init>(java.io.DataInput) -> <init>
    34:38:int[] readIntArray(int) -> a
    42:43:void skipInt() -> a
    46:51:void skipCheckInt(int) -> b
    54:59:void skipCheckShort(short) -> a
    62:67:void skipCheckByte(byte) -> a
    70:77:void skipCheckChunkTypeInt(int,int) -> a
    85:92:int skipBytes(int) -> skipBytes
    97:109:java.lang.String readNullEndedString(int,boolean) -> a
brut.util.OS -> a.d.e:
    java.util.logging.Logger LOGGER -> a
    34:47:void rmdir(java.io.File) -> a
    59:79:void cpdir(java.io.File,java.io.File) -> a
    86:101:void exec(java.lang.String[]) -> a
    29:29:java.util.logging.Logger access$000() -> a
    31:31:void <clinit>() -> <clinit>
brut.util.OS$StreamForwarder -> a.d.f:
    java.io.InputStream mIn -> a
    java.lang.String mType -> b
    120:123:void <init>(java.io.InputStream,java.lang.String) -> <init>
    128:140:void run() -> run
com.a4455jkjh.apktool.App -> com.a4455jkjh.apktool.App:
    java.lang.String pk8 -> a
    java.lang.String x509 -> b
    18:18:void <init>() -> <init>
    25:37:void onCreate() -> onCreate
    40:46:void copyData() -> a
    50:65:void copy_aapt(android.content.res.AssetManager,java.io.File) -> a
    68:86:void copyKey(android.content.res.AssetManager,java.io.File) -> b
    89:97:void copyFramework(android.content.res.AssetManager,java.io.File) -> c
com.a4455jkjh.apktool.MainActivity -> com.a4455jkjh.apktool.MainActivity:
    java.util.List FileList -> a
    java.io.File cur_dir -> b
    com.a4455jkjh.apktool.MainActivity$Adapter adapter -> c
    com.a4455jkjh.apktool.util.Settings settings -> d
    android.widget.TextView path -> e
    java.lang.String[] formats -> f
    java.lang.String theme -> g
    java.lang.String theme_key -> h
    int theme_id -> i
    48:48:void <init>() -> <init>
    60:89:void onCreate(android.os.Bundle) -> onCreate
    91:100:void refresh(java.io.File) -> a
    103:104:void refresh() -> a
    107:112:int compare(java.io.File,java.io.File) -> a
    117:117:boolean accept(java.io.File,java.lang.String) -> accept
    122:126:void onBackPressed() -> onBackPressed
    130:135:void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    138:148:void processFile(java.io.File) -> b
    150:184:void processApk(java.io.File,android.app.AlertDialog$Builder) -> a
    186:218:void showInfo(java.io.File,android.app.AlertDialog$Builder) -> b
    220:223:void decode(brut.androlib.ApkDecoder) -> a
    225:239:void build(java.io.File,brut.androlib.ApkOptions) -> a
    242:270:void getPassword(brut.androlib.ApkOptions) -> a
    274:275:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    280:297:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    302:308:void onResume() -> onResume
    310:316:void setKeystore(java.lang.String) -> a
    318:335:void generateDone(boolean,java.lang.String) -> a
    338:340:void onStop() -> onStop
    407:408:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    411:413:void help() -> b
    48:48:int compare(java.lang.Object,java.lang.Object) -> compare
    48:48:com.a4455jkjh.apktool.util.Settings access$000(com.a4455jkjh.apktool.MainActivity) -> a
    48:48:void access$100(com.a4455jkjh.apktool.MainActivity,brut.androlib.ApkOptions) -> a
    48:48:void access$200(com.a4455jkjh.apktool.MainActivity,java.io.File,brut.androlib.ApkOptions) -> a
    48:48:void access$300(com.a4455jkjh.apktool.MainActivity,brut.androlib.ApkDecoder) -> a
    48:48:void access$400(com.a4455jkjh.apktool.MainActivity,java.io.File,android.app.AlertDialog$Builder) -> a
    48:48:int access$500(com.a4455jkjh.apktool.MainActivity) -> b
    48:48:void access$600(com.a4455jkjh.apktool.MainActivity,java.lang.String) -> a
    48:48:java.lang.String[] access$700(com.a4455jkjh.apktool.MainActivity) -> c
    48:48:java.util.List access$800(com.a4455jkjh.apktool.MainActivity) -> d
    51:51:void <clinit>() -> <clinit>
com.a4455jkjh.apktool.MainActivity$1 -> com.a4455jkjh.apktool.a:
    java.io.File val$apk -> a
    com.a4455jkjh.apktool.MainActivity this$0 -> b
    150:150:void <init>(com.a4455jkjh.apktool.MainActivity,java.io.File) -> <init>
    153:180:void onClick(android.content.DialogInterface,int) -> onClick
com.a4455jkjh.apktool.MainActivity$2 -> com.a4455jkjh.apktool.b:
    android.widget.EditText val$store -> a
    java.io.File val$keyStore -> b
    android.app.AlertDialog$Builder val$builder -> c
    android.widget.EditText val$key -> d
    com.a4455jkjh.apktool.MainActivity this$0 -> e
    192:192:void <init>(com.a4455jkjh.apktool.MainActivity,android.widget.EditText,java.io.File,android.app.AlertDialog$Builder,android.widget.EditText) -> <init>
    195:210:void onClick(android.content.DialogInterface,int) -> onClick
com.a4455jkjh.apktool.MainActivity$3 -> com.a4455jkjh.apktool.c:
    android.widget.EditText val$store -> a
    brut.androlib.ApkOptions val$option -> b
    android.widget.EditText val$key -> c
    android.widget.EditText val$alias -> d
    com.a4455jkjh.apktool.MainActivity this$0 -> e
    247:247:void <init>(com.a4455jkjh.apktool.MainActivity,android.widget.EditText,brut.androlib.ApkOptions,android.widget.EditText,android.widget.EditText) -> <init>
    250:262:void onClick(android.content.DialogInterface,int) -> onClick
com.a4455jkjh.apktool.MainActivity$4 -> com.a4455jkjh.apktool.d:
    java.lang.String val$msg -> a
    com.a4455jkjh.apktool.MainActivity this$0 -> b
    323:323:void <init>(com.a4455jkjh.apktool.MainActivity,java.lang.String) -> <init>
    326:327:void onClick(android.content.DialogInterface,int) -> onClick
com.a4455jkjh.apktool.MainActivity$Adapter -> com.a4455jkjh.apktool.e:
    com.a4455jkjh.apktool.MainActivity this$0 -> a
    371:371:void <init>(com.a4455jkjh.apktool.MainActivity) -> <init>
    375:375:int getCount() -> getCount
    380:380:java.io.File getItem(int) -> a
    385:385:long getItemId(int) -> getItemId
    390:401:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    371:371:java.lang.Object getItem(int) -> getItem
com.a4455jkjh.apktool.MainActivity$FormatAdapter -> com.a4455jkjh.apktool.f:
    com.a4455jkjh.apktool.MainActivity this$0 -> a
    342:342:void <init>(com.a4455jkjh.apktool.MainActivity) -> <init>
    346:346:int getCount() -> getCount
    351:351:java.lang.String getItem(int) -> a
    356:356:long getItemId(int) -> getItemId
    361:368:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    342:342:java.lang.Object getItem(int) -> getItem
com.a4455jkjh.apktool.SettingsActivity -> com.a4455jkjh.apktool.SettingsActivity:
    11:11:void <init>() -> <init>
    17:34:void onCreate(android.os.Bundle) -> onCreate
com.a4455jkjh.apktool.dialog.BuildDialog -> com.a4455jkjh.apktool.a.a:
    java.util.logging.Logger LOGGER -> a
    21:22:void <init>(com.a4455jkjh.apktool.MainActivity,int) -> <init>
    26:28:void show() -> show
    32:63:void start() -> a
    64:64:void <clinit>() -> <clinit>
com.a4455jkjh.apktool.dialog.BuildException -> com.a4455jkjh.apktool.a.b:
    5:5:void <init>() -> <init>
    6:6:void <init>(java.lang.String) -> <init>
    7:7:void <init>(java.lang.Exception) -> <init>
com.a4455jkjh.apktool.dialog.DecodeDialog -> com.a4455jkjh.apktool.a.c:
    java.util.logging.Logger LOGGER -> a
    13:14:void <init>(com.a4455jkjh.apktool.MainActivity,int) -> <init>
    19:21:void show() -> show
    27:41:void start() -> a
    43:43:void <clinit>() -> <clinit>
com.a4455jkjh.apktool.dialog.DialogCommon -> com.a4455jkjh.apktool.a.d:
    java.lang.String time -> a
    java.lang.Object input -> b
    java.text.SimpleDateFormat sdf -> f
    com.a4455jkjh.apktool.MainActivity main -> c
    android.widget.TextView out -> d
    java.util.logging.Logger LOGGER -> e
    void start() -> a
    25:124:void <init>(com.a4455jkjh.apktool.MainActivity,int) -> <init>
    34:35:void setInput(java.lang.Object) -> a
    38:39:void onCreate1(android.os.Bundle) -> a
    43:49:void onCreate(android.os.Bundle) -> onCreate
    54:57:void show() -> show
    60:61:void show1() -> b
    64:74:void Done() -> c
    78:80:void setTitle(java.lang.CharSequence) -> setTitle
    85:95:void Err() -> d
    100:119:void run() -> run
    122:123:void long2time(long) -> a
    14:14:java.lang.String access$000(com.a4455jkjh.apktool.dialog.DialogCommon) -> a
    19:19:void <clinit>() -> <clinit>
com.a4455jkjh.apktool.dialog.DialogCommon$1 -> com.a4455jkjh.apktool.a.e:
    com.a4455jkjh.apktool.dialog.DialogCommon this$0 -> a
    64:64:void <init>(com.a4455jkjh.apktool.dialog.DialogCommon) -> <init>
    68:72:void run() -> run
com.a4455jkjh.apktool.dialog.DialogCommon$2 -> com.a4455jkjh.apktool.a.f:
    com.a4455jkjh.apktool.dialog.DialogCommon this$0 -> a
    85:85:void <init>(com.a4455jkjh.apktool.dialog.DialogCommon) -> <init>
    89:93:void run() -> run
com.a4455jkjh.apktool.dialog.HelpDialog -> com.a4455jkjh.apktool.a.g:
    android.app.Activity activity -> a
    22:24:void <init>(android.app.Activity,int) -> <init>
    28:50:void onCreate(android.os.Bundle) -> onCreate
    54:55:void onClick(android.view.View) -> onClick
com.a4455jkjh.apktool.dialog.KeyDialog -> com.a4455jkjh.apktool.a.h:
    android.widget.EditText path -> a
    android.widget.EditText alias -> f
    android.widget.EditText storePass -> g
    android.widget.EditText keyPass -> h
    android.widget.EditText commonName -> i
    android.widget.EditText organizationUnit -> j
    android.widget.EditText organizationName -> k
    android.widget.EditText localityName -> l
    android.widget.EditText stateName -> m
    android.widget.EditText country -> n
    android.widget.EditText date -> o
    android.widget.Spinner format -> p
    android.widget.BaseAdapter adapter -> q
    int type -> r
    34:37:void <init>(com.a4455jkjh.apktool.MainActivity,int,android.widget.BaseAdapter) -> <init>
    39:42:void onCreate(android.os.Bundle) -> onCreate
    46:48:void show() -> show
    52:75:void init() -> e
    77:77:android.widget.EditText getEditText(int) -> a
    81:81:void start() -> a
    85:151:void onClick(android.view.View) -> onClick
    155:156:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    160:161:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    165:177:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    181:182:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
    186:186:void empty() -> f
    190:241:void afterTextChanged(android.text.Editable) -> afterTextChanged
com.a4455jkjh.apktool.dialog.KeystoreDialog -> com.a4455jkjh.apktool.a.i:
    19:20:void <init>(com.a4455jkjh.apktool.MainActivity,int) -> <init>
    23:23:void start() -> a
    25:63:void show() -> show
com.a4455jkjh.apktool.dialog.KeystoreDialog$KeyStoreParam -> com.a4455jkjh.apktool.a.j:
    java.lang.String path -> a
    char[] storePass -> b
    char[] keyPass -> c
    64:64:void <init>() -> <init>
com.a4455jkjh.apktool.util.ApkFile -> com.a4455jkjh.apktool.b.a:
    java.security.MessageDigest sha1 -> a
    java.security.PrivateKey prik -> b
    java.util.List certs -> c
    java.util.logging.Logger LOGGER -> d
    sun1.misc.BASE64Encoder encoder -> e
    48:48:void <init>() -> <init>
    66:68:void reset() -> a
    72:93:void init_kety_from_keystore(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    95:96:void init_kety_from_keyfile(java.lang.String,java.lang.String) -> a
    99:108:void init_kety_from_keyfile(java.io.File,java.io.File) -> a
    110:131:void build(java.lang.String,java.lang.String) -> b
    135:167:java.util.jar.Manifest writeSf(java.util.jar.Manifest,java.util.jar.JarOutputStream) -> a
    171:199:void writeKey(java.util.jar.JarOutputStream,java.util.jar.Manifest) -> a
    201:223:void copyFile(java.util.jar.JarOutputStream,java.util.zip.ZipFile,java.util.Map) -> a
    225:229:byte[] readFully(java.io.File) -> a
    232:237:void drain(java.io.InputStream,java.io.OutputStream) -> a
    52:64:void <clinit>() -> <clinit>
com.a4455jkjh.apktool.util.CertAndKeyGen -> com.a4455jkjh.apktool.b.b:
    java.security.SecureRandom prng -> a
    java.lang.String sigAlg -> b
    java.security.KeyPairGenerator keyGen -> c
    java.security.PublicKey publicKey -> d
    java.security.PrivateKey privateKey -> e
    51:54:void <init>(java.lang.String,java.lang.String) -> <init>
    91:92:void setRandom(java.security.SecureRandom) -> a
    118:137:void generate(int) -> a
    165:165:java.security.PublicKey getPublicKeyAnyway() -> a
    177:177:java.security.PrivateKey getPrivateKey() -> b
    213:268:void generate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,char[],char[],int) -> a
    277:302:java.security.cert.X509Certificate getSelfCertificate(sun1.security.x509.X500Name,java.util.Date,java.util.Date,sun1.security.x509.CertificateExtensions) -> a
com.a4455jkjh.apktool.util.PrintHandler -> com.a4455jkjh.apktool.b.c:
    android.widget.TextView out -> a
    android.widget.ScrollView scroll -> b
    com.a4455jkjh.apktool.util.PrintHandler handler -> c
    14:14:void <init>() -> <init>
    22:25:void init() -> a
    28:30:void setOut(android.widget.TextView,android.widget.ScrollView) -> a
    33:34:void reset() -> b
    39:40:void run() -> run
    44:45:void post1(java.lang.Runnable) -> a
    49:54:void handleMessage(android.os.Message) -> handleMessage
    57:111:void setupLogging(com.a4455jkjh.apktool.util.PrintHandler$Verbosity) -> a
    14:14:com.a4455jkjh.apktool.util.PrintHandler access$000() -> c
    16:17:void <clinit>() -> <clinit>
com.a4455jkjh.apktool.util.PrintHandler$1 -> com.a4455jkjh.apktool.b.d:
    69:69:void <init>() -> <init>
    73:82:void publish(java.util.logging.LogRecord) -> publish
    85:85:void close() -> close
    88:88:void flush() -> flush
com.a4455jkjh.apktool.util.PrintHandler$2 -> com.a4455jkjh.apktool.b.e:
    100:100:void <init>() -> <init>
    104:106:java.lang.String format(java.util.logging.LogRecord) -> format
com.a4455jkjh.apktool.util.PrintHandler$Verbosity -> com.a4455jkjh.apktool.b.f:
    com.a4455jkjh.apktool.util.PrintHandler$Verbosity NORMAL -> a
    com.a4455jkjh.apktool.util.PrintHandler$Verbosity VERBOSE -> b
    com.a4455jkjh.apktool.util.PrintHandler$Verbosity QUIET -> c
    com.a4455jkjh.apktool.util.PrintHandler$Verbosity[] $VALUES -> d
    112:112:com.a4455jkjh.apktool.util.PrintHandler$Verbosity[] values() -> values
    112:112:com.a4455jkjh.apktool.util.PrintHandler$Verbosity valueOf(java.lang.String) -> valueOf
    112:112:void <init>(java.lang.String,int) -> <init>
    112:114:void <clinit>() -> <clinit>
com.a4455jkjh.apktool.util.Settings -> com.a4455jkjh.apktool.b.g:
    boolean Build_forceBuildAll -> c
    boolean Build_debugMode -> d
    boolean Build_verbose -> e
    boolean Build_copyOriginalFiles -> f
    java.lang.String keystore -> g
    java.lang.String pk8 -> h
    java.lang.String x509 -> i
    java.lang.String mFrameworkDirectory -> a
    java.lang.String aapt -> b
    boolean mKeepBrokenResources -> j
    boolean mBakDeb -> k
    int mApi -> l
    java.lang.String no_debug_key -> m
    java.lang.String keep_broken_key -> n
    java.lang.String keystore_key -> o
    14:36:void <init>(android.content.Context) -> <init>
    38:48:brut.androlib.ApkOptions buildApkOptions() -> a
    51:52:void setDecoder(brut.androlib.ApkDecoder,java.io.File) -> a
    54:55:void setDecoderSource(brut.androlib.ApkDecoder,java.io.File) -> b
    57:58:void setDecoderResources(brut.androlib.ApkDecoder,java.io.File) -> c
    60:81:void setDecoder(brut.androlib.ApkDecoder,java.io.File,boolean,boolean,boolean) -> a
    83:98:void update(android.content.SharedPreferences) -> a
com.google.common.base.Ascii -> com.a.a.a.a:
    438:451:java.lang.String toLowerCase(java.lang.String) -> a
    547:547:boolean isUpperCase(char) -> a
com.google.common.base.Equivalence -> com.a.a.a.b:
    44:44:void <init>() -> <init>
    65:71:boolean equivalent(java.lang.Object,java.lang.Object) -> a
    boolean doEquivalent(java.lang.Object,java.lang.Object) -> b
    101:104:int hash(java.lang.Object) -> a
    int doHash(java.lang.Object) -> b
    306:306:com.google.common.base.Equivalence equals() -> a
    318:318:com.google.common.base.Equivalence identity() -> b
com.google.common.base.Equivalence$Equals -> com.a.a.a.c:
    com.google.common.base.Equivalence$Equals INSTANCE -> a
    321:321:void <init>() -> <init>
    327:327:boolean doEquivalent(java.lang.Object,java.lang.Object) -> b
    330:330:int doHash(java.lang.Object) -> b
    324:324:void <clinit>() -> <clinit>
com.google.common.base.Equivalence$Identity -> com.a.a.a.d:
    com.google.common.base.Equivalence$Identity INSTANCE -> a
    339:339:void <init>() -> <init>
    345:345:boolean doEquivalent(java.lang.Object,java.lang.Object) -> b
    349:349:int doHash(java.lang.Object) -> b
    342:342:void <clinit>() -> <clinit>
com.google.common.base.Function -> com.a.a.a.e:
    java.lang.Object apply(java.lang.Object) -> a
com.google.common.base.Functions -> com.a.a.a.f:
    56:56:com.google.common.base.Function toStringFunction() -> a
com.google.common.base.Functions$ToStringFunction -> com.a.a.a.g:
    com.google.common.base.Functions$ToStringFunction INSTANCE -> a
    com.google.common.base.Functions$ToStringFunction[] $VALUES -> b
    60:60:com.google.common.base.Functions$ToStringFunction[] values() -> values
    60:60:com.google.common.base.Functions$ToStringFunction valueOf(java.lang.String) -> valueOf
    60:60:void <init>(java.lang.String,int) -> <init>
    65:66:java.lang.String apply(java.lang.Object) -> b
    70:70:java.lang.String toString() -> toString
    60:60:java.lang.Object apply(java.lang.Object) -> a
    60:61:void <clinit>() -> <clinit>
com.google.common.base.Joiner -> com.a.a.a.h:
    java.lang.String separator -> a
    71:71:com.google.common.base.Joiner on(java.lang.String) -> a
    78:78:com.google.common.base.Joiner on(char) -> a
    83:85:void <init>(java.lang.String) -> <init>
    87:89:void <init>(com.google.common.base.Joiner) -> <init>
    106:114:java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator) -> a
    152:156:java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Iterator) -> a
    183:183:java.lang.String join(java.lang.Iterable) -> a
    193:193:java.lang.String join(java.util.Iterator) -> a
    218:219:com.google.common.base.Joiner useForNull(java.lang.String) -> b
    278:278:com.google.common.base.Joiner$MapJoiner withKeyValueSeparator(java.lang.String) -> c
    433:434:java.lang.CharSequence toString(java.lang.Object) -> a
    66:66:void <init>(com.google.common.base.Joiner,com.google.common.base.Joiner$1) -> <init>
    66:66:java.lang.String access$100(com.google.common.base.Joiner) -> a
com.google.common.base.Joiner$1 -> com.a.a.a.i:
    java.lang.String val$nullText -> a
    com.google.common.base.Joiner this$0 -> b
    219:219:void <init>(com.google.common.base.Joiner,com.google.common.base.Joiner,java.lang.String) -> <init>
    221:221:java.lang.CharSequence toString(java.lang.Object) -> a
    225:225:com.google.common.base.Joiner useForNull(java.lang.String) -> b
com.google.common.base.Joiner$MapJoiner -> com.a.a.a.j:
    com.google.common.base.Joiner joiner -> a
    java.lang.String keyValueSeparator -> b
    303:306:void <init>(com.google.common.base.Joiner,java.lang.String) -> <init>
    322:322:java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Map) -> a
    354:368:java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator) -> a
    380:380:java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Iterable) -> a
    393:397:java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Iterator) -> a
    299:299:void <init>(com.google.common.base.Joiner,java.lang.String,com.google.common.base.Joiner$1) -> <init>
com.google.common.base.MoreObjects -> com.a.a.a.k:
    52:52:java.lang.Object firstNonNull(java.lang.Object,java.lang.Object) -> a
    95:95:com.google.common.base.MoreObjects$ToStringHelper toStringHelper(java.lang.Object) -> a
    130:144:java.lang.String simpleName(java.lang.Class) -> a
com.google.common.base.MoreObjects$1 -> com.a.a.a.l:
com.google.common.base.MoreObjects$ToStringHelper -> com.a.a.a.m:
    java.lang.String className -> a
    com.google.common.base.MoreObjects$ToStringHelper$ValueHolder holderHead -> b
    com.google.common.base.MoreObjects$ToStringHelper$ValueHolder holderTail -> c
    boolean omitNullValues -> d
    155:164:void <init>(java.lang.String) -> <init>
    185:185:com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,java.lang.Object) -> a
    235:235:com.google.common.base.MoreObjects$ToStringHelper add(java.lang.String,int) -> a
    257:257:com.google.common.base.MoreObjects$ToStringHelper addValue(java.lang.Object) -> a
    346:362:java.lang.String toString() -> toString
    366:368:com.google.common.base.MoreObjects$ToStringHelper$ValueHolder addHolder() -> a
    372:374:com.google.common.base.MoreObjects$ToStringHelper addHolder(java.lang.Object) -> b
    378:381:com.google.common.base.MoreObjects$ToStringHelper addHolder(java.lang.String,java.lang.Object) -> b
    153:153:void <init>(java.lang.String,com.google.common.base.MoreObjects$1) -> <init>
com.google.common.base.MoreObjects$ToStringHelper$ValueHolder -> com.a.a.a.n:
    java.lang.String name -> a
    java.lang.Object value -> b
    com.google.common.base.MoreObjects$ToStringHelper$ValueHolder next -> c
    384:384:void <init>() -> <init>
    384:384:void <init>(com.google.common.base.MoreObjects$1) -> <init>
com.google.common.base.Objects -> com.a.a.a.o:
    60:60:boolean equal(java.lang.Object,java.lang.Object) -> a
    84:84:int hashCode(java.lang.Object[]) -> a
com.google.common.base.Platform -> com.a.a.a.p:
    34:34:long systemNanoTime() -> a
com.google.common.base.Preconditions -> com.a.a.a.q:
    107:110:void checkArgument(boolean) -> a
    121:124:void checkArgument(boolean,java.lang.Object) -> a
    144:147:void checkArgument(boolean,java.lang.String,java.lang.Object[]) -> a
    157:160:void checkState(boolean) -> b
    172:175:void checkState(boolean,java.lang.Object) -> b
    209:212:java.lang.Object checkNotNull(java.lang.Object) -> a
    225:228:java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> a
    292:292:int checkElementIndex(int,int) -> a
    309:312:int checkElementIndex(int,int,java.lang.String) -> a
    316:321:java.lang.String badElementIndex(int,int,java.lang.String) -> c
    336:336:int checkPositionIndex(int,int) -> b
    352:355:int checkPositionIndex(int,int,java.lang.String) -> b
    359:364:java.lang.String badPositionIndex(int,int,java.lang.String) -> d
    382:385:void checkPositionIndexes(int,int,int) -> a
    388:395:java.lang.String badPositionIndexes(int,int,int) -> b
    410:438:java.lang.String format(java.lang.String,java.lang.Object[]) -> a
com.google.common.base.Predicate -> com.a.a.a.r:
    boolean apply(java.lang.Object) -> a
com.google.common.base.Predicates -> com.a.a.a.s:
    com.google.common.base.Joiner COMMA_JOINER -> a
    76:76:com.google.common.base.Predicate isNull() -> a
    179:179:com.google.common.base.Predicate equalTo(java.lang.Object) -> a
    231:231:com.google.common.base.Predicate in(java.util.Collection) -> a
    346:346:void <clinit>() -> <clinit>
com.google.common.base.Predicates$1 -> com.a.a.a.t:
com.google.common.base.Predicates$InPredicate -> com.a.a.a.u:
    java.util.Collection target -> a
    506:508:void <init>(java.util.Collection) -> <init>
    513:517:boolean apply(java.lang.Object) -> a
    522:526:boolean equals(java.lang.Object) -> equals
    530:530:int hashCode() -> hashCode
    534:534:java.lang.String toString() -> toString
    503:503:void <init>(java.util.Collection,com.google.common.base.Predicates$1) -> <init>
com.google.common.base.Predicates$IsEqualToPredicate -> com.a.a.a.v:
    java.lang.Object target -> a
    421:423:void <init>(java.lang.Object) -> <init>
    426:426:boolean apply(java.lang.Object) -> a
    429:429:int hashCode() -> hashCode
    432:436:boolean equals(java.lang.Object) -> equals
    439:439:java.lang.String toString() -> toString
    417:417:void <init>(java.lang.Object,com.google.common.base.Predicates$1) -> <init>
com.google.common.base.Predicates$ObjectPredicate -> com.a.a.a.w:
    com.google.common.base.Predicates$ObjectPredicate ALWAYS_TRUE -> a
    com.google.common.base.Predicates$ObjectPredicate ALWAYS_FALSE -> b
    com.google.common.base.Predicates$ObjectPredicate IS_NULL -> c
    com.google.common.base.Predicates$ObjectPredicate NOT_NULL -> d
    com.google.common.base.Predicates$ObjectPredicate[] $VALUES -> e
    275:275:com.google.common.base.Predicates$ObjectPredicate[] values() -> values
    275:275:com.google.common.base.Predicates$ObjectPredicate valueOf(java.lang.String) -> valueOf
    275:275:void <init>(java.lang.String,int) -> <init>
    315:315:com.google.common.base.Predicate withNarrowedType() -> a
    275:275:void <init>(java.lang.String,int,com.google.common.base.Predicates$1) -> <init>
    275:304:void <clinit>() -> <clinit>
com.google.common.base.Predicates$ObjectPredicate$1 -> com.a.a.a.x:
    277:277:void <init>(java.lang.String,int) -> <init>
    279:279:boolean apply(java.lang.Object) -> a
    282:282:java.lang.String toString() -> toString
com.google.common.base.Predicates$ObjectPredicate$2 -> com.a.a.a.y:
    286:286:void <init>(java.lang.String,int) -> <init>
    288:288:boolean apply(java.lang.Object) -> a
    291:291:java.lang.String toString() -> toString
com.google.common.base.Predicates$ObjectPredicate$3 -> com.a.a.a.z:
    295:295:void <init>(java.lang.String,int) -> <init>
    297:297:boolean apply(java.lang.Object) -> a
    300:300:java.lang.String toString() -> toString
com.google.common.base.Predicates$ObjectPredicate$4 -> com.a.a.a.aa:
    304:304:void <init>(java.lang.String,int) -> <init>
    306:306:boolean apply(java.lang.Object) -> a
    309:309:java.lang.String toString() -> toString
com.google.common.base.Strings -> com.a.a.a.ab:
    76:76:boolean isNullOrEmpty(java.lang.String) -> a
    155:178:java.lang.String repeat(java.lang.String,int) -> a
com.google.common.base.Supplier -> com.a.a.a.ac:
    java.lang.Object get() -> a
com.google.common.base.Ticker -> com.a.a.a.ad:
    com.google.common.base.Ticker SYSTEM_TICKER -> a
    40:40:void <init>() -> <init>
    long read() -> a
    54:54:com.google.common.base.Ticker systemTicker() -> b
    57:57:void <clinit>() -> <clinit>
com.google.common.base.Ticker$1 -> com.a.a.a.ae:
    57:57:void <init>() -> <init>
    60:60:long read() -> a
com.google.common.cache.LoadingCache -> com.a.a.b.a:
    java.lang.Object getUnchecked(java.lang.Object) -> b
com.google.common.collect.AbstractIndexedListIterator -> com.a.a.c.a:
    int size -> a
    int position -> b
    java.lang.Object get(int) -> a
    68:72:void <init>(int,int) -> <init>
    76:76:boolean hasNext() -> hasNext
    81:84:java.lang.Object next() -> next
    89:89:int nextIndex() -> nextIndex
    94:94:boolean hasPrevious() -> hasPrevious
    99:102:java.lang.Object previous() -> previous
    107:107:int previousIndex() -> previousIndex
com.google.common.collect.AbstractIterator -> com.a.a.c.b:
    com.google.common.collect.AbstractIterator$State state -> a
    java.lang.Object next -> b
    65:68:void <init>() -> <init>
    java.lang.Object computeNext() -> a
    124:125:java.lang.Object endOfData() -> b
    130:138:boolean hasNext() -> hasNext
    142:148:boolean tryToComputeNext() -> c
    153:159:java.lang.Object next() -> next
com.google.common.collect.AbstractIterator$1 -> com.a.a.c.c:
    int[] $SwitchMap$com$google$common$collect$AbstractIterator$State -> a
    131:131:void <clinit>() -> <clinit>
com.google.common.collect.AbstractIterator$State -> com.a.a.c.d:
    com.google.common.collect.AbstractIterator$State READY -> a
    com.google.common.collect.AbstractIterator$State NOT_READY -> b
    com.google.common.collect.AbstractIterator$State DONE -> c
    com.google.common.collect.AbstractIterator$State FAILED -> d
    com.google.common.collect.AbstractIterator$State[] $VALUES -> e
    70:70:com.google.common.collect.AbstractIterator$State[] values() -> values
    70:70:com.google.common.collect.AbstractIterator$State valueOf(java.lang.String) -> valueOf
    70:70:void <init>(java.lang.String,int) -> <init>
    70:81:void <clinit>() -> <clinit>
com.google.common.collect.AbstractListMultimap -> com.a.a.c.e:
    46:47:void <init>(java.util.Map) -> <init>
    java.util.List createCollection() -> a
    66:66:java.util.List get(java.lang.Object) -> a
    110:110:java.util.Map asMap() -> b
    121:121:boolean equals(java.lang.Object) -> equals
    36:36:java.util.Collection get(java.lang.Object) -> b
    36:36:java.util.Collection createCollection() -> c
com.google.common.collect.AbstractMapBasedMultimap -> com.a.a.c.f:
    java.util.Map map -> a
    int totalSize -> b
    122:125:void <init>(java.util.Map) -> <init>
    java.util.Collection createCollection() -> c
    169:169:java.util.Collection createCollection(java.lang.Object) -> c
    288:293:void clear() -> d
    304:308:java.util.Collection get(java.lang.Object) -> b
    319:326:java.util.Collection wrapCollection(java.lang.Object,java.util.Collection) -> a
    332:332:java.util.List wrapList(java.lang.Object,java.util.List,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> a
    595:595:java.util.Iterator iteratorOrListIterator(java.util.Collection) -> a
    915:915:java.util.Set createKeySet() -> e
    1111:1119:int removeValuesForKey(java.lang.Object) -> a
    1226:1226:java.util.Map createAsMap() -> f
    91:91:java.util.Map access$000(com.google.common.collect.AbstractMapBasedMultimap) -> a
    91:91:java.util.Iterator access$100(com.google.common.collect.AbstractMapBasedMultimap,java.util.Collection) -> a
    91:91:int access$210(com.google.common.collect.AbstractMapBasedMultimap) -> b
    91:91:int access$208(com.google.common.collect.AbstractMapBasedMultimap) -> c
    91:91:int access$212(com.google.common.collect.AbstractMapBasedMultimap,int) -> a
    91:91:int access$220(com.google.common.collect.AbstractMapBasedMultimap,int) -> b
    91:91:java.util.List access$300(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.List,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> a
    91:91:int access$400(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object) -> a
com.google.common.collect.AbstractMapBasedMultimap$AsMap -> com.a.a.c.g:
    java.util.Map submap -> a
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> b
    1237:1239:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.Map) -> <init>
    1243:1243:java.util.Set createEntrySet() -> a
    1249:1249:boolean containsKey(java.lang.Object) -> containsKey
    1253:1259:java.util.Collection get(java.lang.Object) -> a
    1263:1263:java.util.Set keySet() -> keySet
    1268:1268:int size() -> size
    1272:1281:java.util.Collection remove(java.lang.Object) -> b
    1285:1285:boolean equals(java.lang.Object) -> equals
    1289:1289:int hashCode() -> hashCode
    1293:1293:java.lang.String toString() -> toString
    1298:1303:void clear() -> clear
    1306:1307:java.util.Map$Entry wrapEntry(java.util.Map$Entry) -> a
    1230:1230:java.lang.Object remove(java.lang.Object) -> remove
    1230:1230:java.lang.Object get(java.lang.Object) -> get
com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries -> com.a.a.c.h:
    com.google.common.collect.AbstractMapBasedMultimap$AsMap this$1 -> a
    1310:1310:void <init>(com.google.common.collect.AbstractMapBasedMultimap$AsMap) -> <init>
    1313:1313:java.util.Map map() -> a
    1317:1317:java.util.Iterator iterator() -> iterator
    1323:1323:boolean contains(java.lang.Object) -> contains
    1327:1332:boolean remove(java.lang.Object) -> remove
com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator -> com.a.a.c.i:
    java.util.Iterator delegateIterator -> a
    java.util.Collection collection -> b
    com.google.common.collect.AbstractMapBasedMultimap$AsMap this$1 -> c
    1337:1338:void <init>(com.google.common.collect.AbstractMapBasedMultimap$AsMap) -> <init>
    1344:1344:boolean hasNext() -> hasNext
    1349:1351:java.util.Map$Entry next() -> a
    1356:1359:void remove() -> remove
    1337:1337:java.lang.Object next() -> next
com.google.common.collect.AbstractMapBasedMultimap$KeySet -> com.a.a.c.j:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> a
    920:922:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.Map) -> <init>
    925:927:java.util.Iterator iterator() -> iterator
    953:960:boolean remove(java.lang.Object) -> remove
    965:966:void clear() -> clear
    969:969:boolean containsAll(java.util.Collection) -> containsAll
    973:973:boolean equals(java.lang.Object) -> equals
    977:977:int hashCode() -> hashCode
com.google.common.collect.AbstractMapBasedMultimap$KeySet$1 -> com.a.a.c.k:
    java.util.Map$Entry entry -> a
    java.util.Iterator val$entryIterator -> b
    com.google.common.collect.AbstractMapBasedMultimap$KeySet this$1 -> c
    927:927:void <init>(com.google.common.collect.AbstractMapBasedMultimap$KeySet,java.util.Iterator) -> <init>
    932:932:boolean hasNext() -> hasNext
    936:937:java.lang.Object next() -> next
    941:946:void remove() -> remove
com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList -> com.a.a.c.l:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> a
    906:908:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.List,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> <init>
com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap -> com.a.a.c.m:
    java.util.SortedSet sortedKeySet -> c
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> d
    1365:1367:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.SortedMap) -> <init>
    1370:1370:java.util.SortedMap sortedMap() -> b
    1375:1375:java.util.Comparator comparator() -> comparator
    1380:1380:java.lang.Object firstKey() -> firstKey
    1385:1385:java.lang.Object lastKey() -> lastKey
    1390:1390:java.util.SortedMap headMap(java.lang.Object) -> headMap
    1395:1395:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    1400:1400:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    1408:1409:java.util.SortedSet keySet() -> c
    1414:1414:java.util.SortedSet createKeySet() -> d
    1363:1363:java.util.Set keySet() -> keySet
    1363:1363:java.util.Set createKeySet() -> e
com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet -> com.a.a.c.n:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> b
    983:985:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.util.SortedMap) -> <init>
    988:988:java.util.SortedMap sortedMap() -> a
    993:993:java.util.Comparator comparator() -> comparator
    998:998:java.lang.Object first() -> first
    1003:1003:java.util.SortedSet headSet(java.lang.Object) -> headSet
    1008:1008:java.lang.Object last() -> last
    1013:1013:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    1018:1018:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection -> com.a.a.c.o:
    java.lang.Object key -> b
    java.util.Collection delegate -> c
    com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection ancestor -> d
    java.util.Collection ancestorDelegate -> e
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> f
    361:367:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.Collection,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> <init>
    377:388:void refreshIfEmpty() -> a
    395:400:void removeIfEmpty() -> b
    403:403:java.lang.Object getKey() -> c
    414:419:void addToMap() -> d
    422:423:int size() -> size
    427:431:boolean equals(java.lang.Object) -> equals
    435:436:int hashCode() -> hashCode
    440:441:java.lang.String toString() -> toString
    445:445:java.util.Collection getDelegate() -> e
    449:450:java.util.Iterator iterator() -> iterator
    503:512:boolean add(java.lang.Object) -> add
    516:516:com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection getAncestor() -> f
    522:534:boolean addAll(java.util.Collection) -> addAll
    538:539:boolean contains(java.lang.Object) -> contains
    543:544:boolean containsAll(java.util.Collection) -> containsAll
    548:555:void clear() -> clear
    558:564:boolean remove(java.lang.Object) -> remove
    568:578:boolean removeAll(java.util.Collection) -> removeAll
    582:590:boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator -> com.a.a.c.p:
    java.util.Iterator delegateIterator -> a
    java.util.Collection originalDelegate -> b
    com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection this$1 -> c
    456:460:void <init>(com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> <init>
    456:464:void <init>(com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection,java.util.Iterator) -> <init>
    471:475:void validateIterator() -> a
    479:480:boolean hasNext() -> hasNext
    485:486:java.lang.Object next() -> next
    491:494:void remove() -> remove
    497:498:java.util.Iterator getDelegateIterator() -> b
com.google.common.collect.AbstractMapBasedMultimap$WrappedList -> com.a.a.c.q:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> g
    760:762:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.List,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> <init>
    765:765:java.util.List getListDelegate() -> g
    770:782:boolean addAll(int,java.util.Collection) -> addAll
    787:788:java.lang.Object get(int) -> get
    793:794:java.lang.Object set(int,java.lang.Object) -> set
    799:806:void add(int,java.lang.Object) -> add
    810:814:java.lang.Object remove(int) -> remove
    819:820:int indexOf(java.lang.Object) -> indexOf
    825:826:int lastIndexOf(java.lang.Object) -> lastIndexOf
    831:832:java.util.ListIterator listIterator() -> listIterator
    837:838:java.util.ListIterator listIterator(int) -> listIterator
    843:844:java.util.List subList(int,int) -> subList
com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator -> com.a.a.c.r:
    com.google.common.collect.AbstractMapBasedMultimap$WrappedList this$1 -> d
    852:852:void <init>(com.google.common.collect.AbstractMapBasedMultimap$WrappedList) -> <init>
    854:856:void <init>(com.google.common.collect.AbstractMapBasedMultimap$WrappedList,int) -> <init>
    859:859:java.util.ListIterator getDelegateListIterator() -> c
    864:864:boolean hasPrevious() -> hasPrevious
    869:869:java.lang.Object previous() -> previous
    874:874:int nextIndex() -> nextIndex
    879:879:int previousIndex() -> previousIndex
    884:885:void set(java.lang.Object) -> set
    889:895:void add(java.lang.Object) -> add
com.google.common.collect.AbstractMapBasedMultimap$WrappedSet -> com.a.a.c.s:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> a
    602:604:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.Set) -> <init>
    608:622:boolean removeAll(java.util.Collection) -> removeAll
com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet -> com.a.a.c.t:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> a
    632:634:void <init>(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.SortedSet,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> <init>
    637:637:java.util.SortedSet getSortedSetDelegate() -> g
    642:642:java.util.Comparator comparator() -> comparator
    647:648:java.lang.Object first() -> first
    653:654:java.lang.Object last() -> last
    659:660:java.util.SortedSet headSet(java.lang.Object) -> headSet
    667:668:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    675:676:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.AbstractMapEntry -> com.a.a.c.u:
    33:33:void <init>() -> <init>
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    43:43:java.lang.Object setValue(java.lang.Object) -> setValue
    47:52:boolean equals(java.lang.Object) -> equals
    56:58:int hashCode() -> hashCode
    65:65:java.lang.String toString() -> toString
com.google.common.collect.AbstractMultimap -> com.a.a.c.v:
    java.util.Set keySet -> a
    java.util.Map asMap -> b
    38:181:void <init>() -> <init>
    149:150:java.util.Set keySet() -> g
    154:154:java.util.Set createKeySet() -> e
    207:208:java.util.Map asMap() -> b
    java.util.Map createAsMap() -> f
    216:216:boolean equals(java.lang.Object) -> equals
    228:228:int hashCode() -> hashCode
    239:239:java.lang.String toString() -> toString
com.google.common.collect.AbstractNavigableMap -> com.a.a.c.w:
    35:186:void <init>() -> <init>
    44:44:java.util.Map$Entry firstEntry() -> firstEntry
    50:50:java.util.Map$Entry lastEntry() -> lastEntry
    56:56:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    62:62:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    67:71:java.lang.Object firstKey() -> firstKey
    77:81:java.lang.Object lastKey() -> lastKey
    88:88:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    94:94:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    100:100:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    106:106:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    111:111:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    116:116:java.lang.Object floorKey(java.lang.Object) -> floorKey
    121:121:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    126:126:java.lang.Object higherKey(java.lang.Object) -> higherKey
    java.util.Iterator entryIterator() -> a
    java.util.Iterator descendingEntryIterator() -> b
    135:135:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    140:140:java.util.SortedMap headMap(java.lang.Object) -> headMap
    145:145:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    150:150:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    155:155:java.util.Set keySet() -> keySet
    163:163:java.util.Set entrySet() -> entrySet
    178:178:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    183:183:java.util.NavigableMap descendingMap() -> descendingMap
com.google.common.collect.AbstractNavigableMap$1 -> com.a.a.c.x:
    com.google.common.collect.AbstractNavigableMap this$0 -> a
    163:163:void <init>(com.google.common.collect.AbstractNavigableMap) -> <init>
    166:166:java.util.Map map() -> a
    171:171:java.util.Iterator iterator() -> iterator
com.google.common.collect.AbstractNavigableMap$DescendingMap -> com.a.a.c.y:
    com.google.common.collect.AbstractNavigableMap this$0 -> a
    186:186:void <init>(com.google.common.collect.AbstractNavigableMap) -> <init>
    189:189:java.util.NavigableMap forward() -> a
    194:194:java.util.Iterator entryIterator() -> a_
    186:186:void <init>(com.google.common.collect.AbstractNavigableMap,com.google.common.collect.AbstractNavigableMap$1) -> <init>
com.google.common.collect.AbstractRangeSet -> com.a.a.c.z:
    25:25:void <init>() -> <init>
    42:42:void add(com.google.common.collect.Range) -> a
    47:47:void remove(com.google.common.collect.Range) -> b
    84:90:boolean equals(java.lang.Object) -> equals
    95:95:int hashCode() -> hashCode
    100:100:java.lang.String toString() -> toString
com.google.common.collect.AbstractSequentialIterator -> com.a.a.c.aa:
    java.lang.Object nextOrNull -> a
    52:54:void <init>(java.lang.Object) -> <init>
    java.lang.Object computeNext(java.lang.Object) -> a
    66:66:boolean hasNext() -> hasNext
    71:77:java.lang.Object next() -> next
com.google.common.collect.ArrayListMultimap -> com.a.a.c.ab:
    int expectedValuesPerKey -> a
    78:78:com.google.common.collect.ArrayListMultimap create() -> h
    107:109:void <init>() -> <init>
    130:130:java.util.List createCollection() -> a
    66:66:boolean equals(java.lang.Object) -> equals
    66:66:java.util.Map asMap() -> b
    66:66:java.util.List get(java.lang.Object) -> a
    66:66:void clear() -> d
    66:66:java.util.Collection createCollection() -> c
    66:66:java.lang.String toString() -> toString
    66:66:int hashCode() -> hashCode
    66:66:java.util.Set keySet() -> g
com.google.common.collect.BiMap -> com.a.a.c.ac:
com.google.common.collect.BoundType -> com.a.a.c.ad:
    com.google.common.collect.BoundType OPEN -> a
    com.google.common.collect.BoundType CLOSED -> b
    com.google.common.collect.BoundType[] $VALUES -> c
    26:26:com.google.common.collect.BoundType[] values() -> values
    26:26:com.google.common.collect.BoundType valueOf(java.lang.String) -> valueOf
    27:27:void <init>(java.lang.String,int) -> <init>
    51:51:com.google.common.collect.BoundType forBoolean(boolean) -> a
    27:27:void <init>(java.lang.String,int,com.google.common.collect.BoundType$1) -> <init>
    26:40:void <clinit>() -> <clinit>
com.google.common.collect.BoundType$1 -> com.a.a.c.ae:
    31:31:void <init>(java.lang.String,int) -> <init>
com.google.common.collect.BoundType$2 -> com.a.a.c.af:
    40:40:void <init>(java.lang.String,int) -> <init>
com.google.common.collect.CollectPreconditions -> com.a.a.c.ag:
    38:41:int checkNonnegative(int,java.lang.String) -> a
    49:50:void checkRemove(boolean) -> a
com.google.common.collect.Collections2 -> com.a.a.c.ah:
    com.google.common.base.Joiner STANDARD_JOINER -> a
    108:114:boolean safeContains(java.util.Collection,java.lang.Object) -> a
    312:313:java.lang.StringBuilder newStringBuilderForCollection(int) -> a
    320:320:java.util.Collection cast(java.lang.Iterable) -> a
    323:323:void <clinit>() -> <clinit>
com.google.common.collect.ComparatorOrdering -> com.a.a.c.ai:
    java.util.Comparator comparator -> a
    33:35:void <init>(java.util.Comparator) -> <init>
    38:38:int compare(java.lang.Object,java.lang.Object) -> compare
    42:49:boolean equals(java.lang.Object) -> equals
    53:53:int hashCode() -> hashCode
    57:57:java.lang.String toString() -> toString
com.google.common.collect.ComparisonChain -> com.a.a.c.aj:
    com.google.common.collect.ComparisonChain ACTIVE -> a
    com.google.common.collect.ComparisonChain LESS -> b
    com.google.common.collect.ComparisonChain GREATER -> c
    62:62:void <init>() -> <init>
    69:69:com.google.common.collect.ComparisonChain start() -> a
    com.google.common.collect.ComparisonChain compare(java.lang.Comparable,java.lang.Comparable) -> a
    int result() -> b
    61:61:void <init>(com.google.common.collect.ComparisonChain$1) -> <init>
    61:61:com.google.common.collect.ComparisonChain access$100() -> c
    61:61:com.google.common.collect.ComparisonChain access$200() -> d
    61:61:com.google.common.collect.ComparisonChain access$300() -> e
    72:110:void <clinit>() -> <clinit>
com.google.common.collect.ComparisonChain$1 -> com.a.a.c.ak:
    72:72:void <init>() -> <init>
    76:76:com.google.common.collect.ComparisonChain compare(java.lang.Comparable,java.lang.Comparable) -> a
    101:101:com.google.common.collect.ComparisonChain classify(int) -> a
    104:104:int result() -> b
com.google.common.collect.ComparisonChain$InactiveComparisonChain -> com.a.a.c.al:
    int result -> a
    115:117:void <init>(int) -> <init>
    120:120:com.google.common.collect.ComparisonChain compare(java.lang.Comparable,java.lang.Comparable) -> a
    145:145:int result() -> b
com.google.common.collect.Cut -> com.a.a.c.am:
    java.lang.Comparable endpoint -> a
    40:42:void <init>(java.lang.Comparable) -> <init>
    boolean isLessThan(java.lang.Comparable) -> a
    com.google.common.collect.BoundType typeAsLowerBound() -> a
    com.google.common.collect.BoundType typeAsUpperBound() -> b
    void describeAsLowerBound(java.lang.StringBuilder) -> a
    void describeAsUpperBound(java.lang.StringBuilder) -> b
    69:80:int compareTo(com.google.common.collect.Cut) -> a
    85:85:java.lang.Comparable endpoint() -> c
    90:99:boolean equals(java.lang.Object) -> equals
    108:108:com.google.common.collect.Cut belowAll() -> d
    179:179:com.google.common.collect.Cut aboveAll() -> e
    235:235:com.google.common.collect.Cut belowValue(java.lang.Comparable) -> b
    296:296:com.google.common.collect.Cut aboveValue(java.lang.Comparable) -> c
    36:36:int compareTo(java.lang.Object) -> compareTo
com.google.common.collect.Cut$AboveAll -> com.a.a.c.an:
    com.google.common.collect.Cut$AboveAll INSTANCE -> b
    186:187:void <init>() -> <init>
    189:189:java.lang.Comparable endpoint() -> c
    192:192:boolean isLessThan(java.lang.Comparable) -> a
    195:195:com.google.common.collect.BoundType typeAsLowerBound() -> a
    198:198:com.google.common.collect.BoundType typeAsUpperBound() -> b
    209:209:void describeAsLowerBound(java.lang.StringBuilder) -> a
    212:213:void describeAsUpperBound(java.lang.StringBuilder) -> b
    223:223:int compareTo(com.google.common.collect.Cut) -> a
    226:226:java.lang.String toString() -> toString
    182:182:int compareTo(java.lang.Object) -> compareTo
    182:182:com.google.common.collect.Cut$AboveAll access$100() -> f
    183:183:void <clinit>() -> <clinit>
com.google.common.collect.Cut$AboveValue -> com.a.a.c.ao:
    301:302:void <init>(java.lang.Comparable) -> <init>
    305:305:boolean isLessThan(java.lang.Comparable) -> a
    308:308:com.google.common.collect.BoundType typeAsLowerBound() -> a
    311:311:com.google.common.collect.BoundType typeAsUpperBound() -> b
    336:337:void describeAsLowerBound(java.lang.StringBuilder) -> a
    339:340:void describeAsUpperBound(java.lang.StringBuilder) -> b
    352:352:int hashCode() -> hashCode
    355:355:java.lang.String toString() -> toString
    299:299:int compareTo(java.lang.Object) -> compareTo
com.google.common.collect.Cut$BelowAll -> com.a.a.c.ap:
    com.google.common.collect.Cut$BelowAll INSTANCE -> b
    117:118:void <init>() -> <init>
    120:120:java.lang.Comparable endpoint() -> c
    123:123:boolean isLessThan(java.lang.Comparable) -> a
    126:126:com.google.common.collect.BoundType typeAsLowerBound() -> a
    129:129:com.google.common.collect.BoundType typeAsUpperBound() -> b
    140:141:void describeAsLowerBound(java.lang.StringBuilder) -> a
    143:143:void describeAsUpperBound(java.lang.StringBuilder) -> b
    162:162:int compareTo(com.google.common.collect.Cut) -> a
    165:165:java.lang.String toString() -> toString
    113:113:int compareTo(java.lang.Object) -> compareTo
    113:113:com.google.common.collect.Cut$BelowAll access$000() -> f
    114:114:void <clinit>() -> <clinit>
com.google.common.collect.Cut$BelowValue -> com.a.a.c.aq:
    240:241:void <init>(java.lang.Comparable) -> <init>
    244:244:boolean isLessThan(java.lang.Comparable) -> a
    247:247:com.google.common.collect.BoundType typeAsLowerBound() -> a
    250:250:com.google.common.collect.BoundType typeAsUpperBound() -> b
    275:276:void describeAsLowerBound(java.lang.StringBuilder) -> a
    278:279:void describeAsUpperBound(java.lang.StringBuilder) -> b
    287:287:int hashCode() -> hashCode
    290:290:java.lang.String toString() -> toString
    238:238:int compareTo(java.lang.Object) -> compareTo
com.google.common.collect.DescendingImmutableSortedSet -> com.a.a.c.ar:
    com.google.common.collect.ImmutableSortedSet forward -> c
    32:34:void <init>(com.google.common.collect.ImmutableSortedSet) -> <init>
    38:38:int size() -> size
    43:43:com.google.common.collect.UnmodifiableIterator iterator() -> a
    48:48:com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> a
    54:54:com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> a
    59:59:com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> b
    65:65:com.google.common.collect.ImmutableSortedSet descendingSet() -> b_
    71:71:com.google.common.collect.UnmodifiableIterator descendingIterator() -> c
    77:77:com.google.common.collect.ImmutableSortedSet createDescendingSet() -> d
    82:82:java.lang.Object lower(java.lang.Object) -> lower
    87:87:java.lang.Object floor(java.lang.Object) -> floor
    92:92:java.lang.Object ceiling(java.lang.Object) -> ceiling
    97:97:java.lang.Object higher(java.lang.Object) -> higher
    102:106:int indexOf(java.lang.Object) -> a
    112:112:boolean isPartialView() -> e
    28:28:java.util.Iterator descendingIterator() -> descendingIterator
    28:28:java.util.NavigableSet descendingSet() -> descendingSet
    28:28:java.util.Iterator iterator() -> iterator
com.google.common.collect.EmptyImmutableBiMap -> com.a.a.c.as:
    com.google.common.collect.EmptyImmutableBiMap INSTANCE -> a
    33:33:void <init>() -> <init>
    36:36:com.google.common.collect.ImmutableBiMap inverse() -> a
    41:41:int size() -> size
    46:46:boolean isEmpty() -> isEmpty
    51:51:java.lang.Object get(java.lang.Object) -> get
    56:56:com.google.common.collect.ImmutableSet entrySet() -> b
    61:61:com.google.common.collect.ImmutableSet createEntrySet() -> c
    71:71:com.google.common.collect.ImmutableSet keySet() -> d
    76:76:boolean isPartialView() -> e
    28:28:java.util.Set entrySet() -> entrySet
    28:28:java.util.Set keySet() -> keySet
    31:31:void <clinit>() -> <clinit>
com.google.common.collect.EmptyImmutableSet -> com.a.a.c.at:
    com.google.common.collect.EmptyImmutableSet INSTANCE -> a
    35:35:void <init>() -> <init>
    39:39:int size() -> size
    43:43:boolean isEmpty() -> isEmpty
    47:47:boolean contains(java.lang.Object) -> contains
    51:51:boolean containsAll(java.util.Collection) -> containsAll
    55:55:com.google.common.collect.UnmodifiableIterator iterator() -> a
    59:59:boolean isPartialView() -> e
    64:64:int copyIntoArray(java.lang.Object[],int) -> a
    69:69:com.google.common.collect.ImmutableList asList() -> b
    73:77:boolean equals(java.lang.Object) -> equals
    81:81:int hashCode() -> hashCode
    85:85:boolean isHashCodeFast() -> c_
    89:89:java.lang.String toString() -> toString
    31:31:java.util.Iterator iterator() -> iterator
    33:33:void <clinit>() -> <clinit>
com.google.common.collect.EmptyImmutableSortedMap -> com.a.a.c.au:
    com.google.common.collect.ImmutableSortedSet keySet -> a
    36:38:void <init>(java.util.Comparator) -> <init>
    42:44:void <init>(java.util.Comparator,com.google.common.collect.ImmutableSortedMap) -> <init>
    48:48:java.lang.Object get(java.lang.Object) -> get
    53:53:com.google.common.collect.ImmutableSortedSet keySet() -> a
    58:58:int size() -> size
    63:63:boolean isEmpty() -> isEmpty
    68:68:com.google.common.collect.ImmutableCollection values() -> f
    73:73:java.lang.String toString() -> toString
    78:78:boolean isPartialView() -> e
    83:83:com.google.common.collect.ImmutableSet entrySet() -> b
    88:88:com.google.common.collect.ImmutableSet createEntrySet() -> c
    98:99:com.google.common.collect.ImmutableSortedMap headMap(java.lang.Object,boolean) -> a
    104:105:com.google.common.collect.ImmutableSortedMap tailMap(java.lang.Object,boolean) -> b
    110:110:com.google.common.collect.ImmutableSortedMap createDescendingMap() -> g
    31:31:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    31:31:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    31:31:java.util.Set entrySet() -> entrySet
    31:31:java.util.Collection values() -> values
    31:31:java.util.Set keySet() -> keySet
    31:31:com.google.common.collect.ImmutableSet keySet() -> d
com.google.common.collect.EmptyImmutableSortedSet -> com.a.a.c.av:
    38:39:void <init>(java.util.Comparator) -> <init>
    43:43:int size() -> size
    47:47:boolean isEmpty() -> isEmpty
    51:51:boolean contains(java.lang.Object) -> contains
    55:55:boolean containsAll(java.util.Collection) -> containsAll
    59:59:com.google.common.collect.UnmodifiableIterator iterator() -> a
    64:64:com.google.common.collect.UnmodifiableIterator descendingIterator() -> c
    68:68:boolean isPartialView() -> e
    72:72:com.google.common.collect.ImmutableList asList() -> b
    77:77:int copyIntoArray(java.lang.Object[],int) -> a
    81:85:boolean equals(java.lang.Object) -> equals
    89:89:int hashCode() -> hashCode
    93:93:java.lang.String toString() -> toString
    98:98:java.lang.Object first() -> first
    103:103:java.lang.Object last() -> last
    108:108:com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> a
    114:114:com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> a
    119:119:com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> b
    123:123:int indexOf(java.lang.Object) -> a
    128:128:com.google.common.collect.ImmutableSortedSet createDescendingSet() -> d
    34:34:java.util.Iterator descendingIterator() -> descendingIterator
    34:34:java.util.Iterator iterator() -> iterator
com.google.common.collect.FluentIterable -> com.a.a.c.aw:
    java.lang.Iterable iterable -> a
    79:81:void <init>() -> <init>
    83:85:void <init>(java.lang.Iterable) -> <init>
    92:92:com.google.common.collect.FluentIterable from(java.lang.Iterable) -> a
    130:130:java.lang.String toString() -> toString
    248:248:com.google.common.collect.FluentIterable transform(com.google.common.base.Function) -> a
    356:356:com.google.common.collect.FluentIterable limit(int) -> a
com.google.common.collect.FluentIterable$1 -> com.a.a.c.ax:
    java.lang.Iterable val$iterable -> a
    93:93:void <init>(java.lang.Iterable,java.lang.Iterable) -> <init>
    96:96:java.util.Iterator iterator() -> iterator
com.google.common.collect.ForwardingCollection -> com.a.a.c.ay:
    53:53:void <init>() -> <init>
    java.util.Collection delegate() -> a
    59:59:java.util.Iterator iterator() -> iterator
    64:64:int size() -> size
    69:69:boolean removeAll(java.util.Collection) -> removeAll
    74:74:boolean isEmpty() -> isEmpty
    79:79:boolean contains(java.lang.Object) -> contains
    84:84:boolean add(java.lang.Object) -> add
    89:89:boolean remove(java.lang.Object) -> remove
    94:94:boolean containsAll(java.util.Collection) -> containsAll
    99:99:boolean addAll(java.util.Collection) -> addAll
    104:104:boolean retainAll(java.util.Collection) -> retainAll
    109:110:void clear() -> clear
    114:114:java.lang.Object[] toArray() -> toArray
    119:119:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    47:47:java.lang.Object delegate() -> b
com.google.common.collect.ForwardingMap -> com.a.a.c.az:
    64:64:void <init>() -> <init>
    java.util.Map delegate() -> c
    70:70:int size() -> size
    75:75:boolean isEmpty() -> isEmpty
    80:80:java.lang.Object remove(java.lang.Object) -> remove
    85:86:void clear() -> clear
    90:90:boolean containsKey(java.lang.Object) -> containsKey
    95:95:boolean containsValue(java.lang.Object) -> containsValue
    100:100:java.lang.Object get(java.lang.Object) -> get
    105:105:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    110:111:void putAll(java.util.Map) -> putAll
    115:115:java.util.Set keySet() -> keySet
    120:120:java.util.Collection values() -> values
    125:125:java.util.Set entrySet() -> entrySet
    129:129:boolean equals(java.lang.Object) -> equals
    133:133:int hashCode() -> hashCode
    307:307:java.lang.String standardToString() -> d
    58:58:java.lang.Object delegate() -> b
com.google.common.collect.ForwardingObject -> com.a.a.c.ba:
    56:56:void <init>() -> <init>
    java.lang.Object delegate() -> b
    72:72:java.lang.String toString() -> toString
com.google.common.collect.GenericMapMaker -> com.a.a.c.bb:
    com.google.common.collect.MapMaker$RemovalListener removalListener -> a
    64:64:void <init>() -> <init>
    131:131:com.google.common.collect.MapMaker$RemovalListener getRemovalListener() -> a
com.google.common.collect.GenericMapMaker$NullListener -> com.a.a.c.bc:
    com.google.common.collect.GenericMapMaker$NullListener INSTANCE -> a
    com.google.common.collect.GenericMapMaker$NullListener[] $VALUES -> b
    51:51:com.google.common.collect.GenericMapMaker$NullListener[] values() -> values
    51:51:com.google.common.collect.GenericMapMaker$NullListener valueOf(java.lang.String) -> valueOf
    52:52:void <init>(java.lang.String,int) -> <init>
    56:56:void onRemoval(com.google.common.collect.MapMaker$RemovalNotification) -> a
    51:53:void <clinit>() -> <clinit>
com.google.common.collect.Hashing -> com.a.a.c.bd:
    int MAX_TABLE_SIZE -> a
    47:47:int smear(int) -> a
    54:54:void <clinit>() -> <clinit>
com.google.common.collect.ImmutableAsList -> com.a.a.c.be:
    35:62:void <init>() -> <init>
    com.google.common.collect.ImmutableCollection delegateCollection() -> c
    41:41:boolean contains(java.lang.Object) -> contains
    46:46:int size() -> size
    51:51:boolean isEmpty() -> isEmpty
    56:56:boolean isPartialView() -> e
com.google.common.collect.ImmutableBiMap -> com.a.a.c.bf:
    java.util.Map$Entry[] EMPTY_ENTRY_ARRAY -> a
    50:50:com.google.common.collect.ImmutableBiMap of() -> g
    216:216:void <init>() -> <init>
    com.google.common.collect.ImmutableBiMap inverse() -> a
    232:232:com.google.common.collect.ImmutableSet values() -> h
    40:40:com.google.common.collect.ImmutableCollection values() -> f
    40:40:java.util.Collection values() -> values
    214:214:void <clinit>() -> <clinit>
com.google.common.collect.ImmutableCollection -> com.a.a.c.bg:
    com.google.common.collect.ImmutableList asList -> a
    50:50:void <init>() -> <init>
    com.google.common.collect.UnmodifiableIterator iterator() -> a
    60:66:java.lang.Object[] toArray() -> toArray
    71:79:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    84:84:boolean contains(java.lang.Object) -> contains
    96:96:boolean add(java.lang.Object) -> add
    108:108:boolean remove(java.lang.Object) -> remove
    120:120:boolean addAll(java.util.Collection) -> addAll
    132:132:boolean removeAll(java.util.Collection) -> removeAll
    144:144:boolean retainAll(java.util.Collection) -> retainAll
    156:156:void clear() -> clear
    171:172:com.google.common.collect.ImmutableList asList() -> b
    176:182:com.google.common.collect.ImmutableList createAsList() -> f
    boolean isPartialView() -> e
    199:202:int copyIntoArray(java.lang.Object[],int) -> a
    45:45:java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableCollection$ArrayBasedBuilder -> com.a.a.c.bh:
    java.lang.Object[] contents -> a
    int size -> b
    320:324:void <init>(int) -> <init>
    331:335:void ensureCapacity(int) -> a
    339:342:com.google.common.collect.ImmutableCollection$ArrayBasedBuilder add(java.lang.Object) -> a
    316:316:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> b
com.google.common.collect.ImmutableCollection$Builder -> com.a.a.c.bi:
    219:231:int expandedCapacity(int,int) -> a
    234:235:void <init>() -> <init>
    com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> b
    300:303:com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator) -> a
com.google.common.collect.ImmutableEntry -> com.a.a.c.bj:
    java.lang.Object key -> a
    java.lang.Object value -> b
    34:37:void <init>(java.lang.Object,java.lang.Object) -> <init>
    40:40:java.lang.Object getKey() -> getKey
    44:44:java.lang.Object getValue() -> getValue
    48:48:java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.ImmutableEnumSet -> com.a.a.c.bk:
    java.util.EnumSet delegate -> a
    int hashCode -> b
    35:41:com.google.common.collect.ImmutableSet asImmutable(java.util.EnumSet) -> a
    55:57:void <init>(java.util.EnumSet) -> <init>
    60:60:boolean isPartialView() -> e
    64:64:com.google.common.collect.UnmodifiableIterator iterator() -> a
    69:69:int size() -> size
    73:73:boolean contains(java.lang.Object) -> contains
    77:77:boolean containsAll(java.util.Collection) -> containsAll
    81:81:boolean isEmpty() -> isEmpty
    85:85:boolean equals(java.lang.Object) -> equals
    91:92:int hashCode() -> hashCode
    96:96:java.lang.String toString() -> toString
    31:31:java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableList -> com.a.a.c.bl:
    com.google.common.collect.ImmutableList EMPTY -> a
    77:77:com.google.common.collect.ImmutableList of() -> d
    89:89:com.google.common.collect.ImmutableList of(java.lang.Object) -> a
    98:98:com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object) -> a
    225:226:com.google.common.collect.ImmutableList copyOf(java.lang.Iterable) -> a
    251:258:com.google.common.collect.ImmutableList copyOf(java.util.Collection) -> a
    268:275:com.google.common.collect.ImmutableList copyOf(java.util.Iterator) -> a
    303:303:com.google.common.collect.ImmutableList construct(java.lang.Object[]) -> b
    312:312:com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[]) -> a
    320:331:com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[],int) -> b
    335:335:void <init>() -> <init>
    340:340:com.google.common.collect.UnmodifiableIterator iterator() -> a
    344:344:com.google.common.collect.UnmodifiableListIterator listIterator() -> g
    348:348:com.google.common.collect.UnmodifiableListIterator listIterator(int) -> a
    358:358:int indexOf(java.lang.Object) -> indexOf
    363:363:int lastIndexOf(java.lang.Object) -> lastIndexOf
    368:368:boolean contains(java.lang.Object) -> contains
    381:389:com.google.common.collect.ImmutableList subList(int,int) -> a
    399:399:com.google.common.collect.ImmutableList subListUnchecked(int,int) -> b
    443:443:boolean addAll(int,java.util.Collection) -> addAll
    455:455:java.lang.Object set(int,java.lang.Object) -> set
    467:467:void add(int,java.lang.Object) -> add
    479:479:java.lang.Object remove(int) -> remove
    488:488:com.google.common.collect.ImmutableList asList() -> b
    494:498:int copyIntoArray(java.lang.Object[],int) -> a
    510:510:com.google.common.collect.ImmutableList reverse() -> h
    567:567:boolean equals(java.lang.Object) -> equals
    571:579:int hashCode() -> hashCode
    61:61:java.util.Iterator iterator() -> iterator
    61:61:java.util.List subList(int,int) -> subList
    61:61:java.util.ListIterator listIterator(int) -> listIterator
    61:61:java.util.ListIterator listIterator() -> listIterator
    66:66:void <clinit>() -> <clinit>
com.google.common.collect.ImmutableList$1 -> com.a.a.c.bm:
    com.google.common.collect.ImmutableList this$0 -> a
    348:348:void <init>(com.google.common.collect.ImmutableList,int,int) -> <init>
    351:351:java.lang.Object get(int) -> a
com.google.common.collect.ImmutableList$Builder -> com.a.a.c.bn:
    636:637:void <init>() -> <init>
    641:642:void <init>(int) -> <init>
    652:653:com.google.common.collect.ImmutableList$Builder add(java.lang.Object) -> c
    691:692:com.google.common.collect.ImmutableList$Builder addAll(java.util.Iterator) -> b
    700:700:com.google.common.collect.ImmutableList build() -> a
    630:630:com.google.common.collect.ImmutableCollection$ArrayBasedBuilder add(java.lang.Object) -> a
    630:630:com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator) -> a
    630:630:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> b
com.google.common.collect.ImmutableList$ReverseImmutableList -> com.a.a.c.bo:
    com.google.common.collect.ImmutableList forwardList -> a
    516:518:void <init>(com.google.common.collect.ImmutableList) -> <init>
    521:521:int reverseIndex(int) -> b
    525:525:int reversePosition(int) -> c
    529:529:com.google.common.collect.ImmutableList reverse() -> h
    533:533:boolean contains(java.lang.Object) -> contains
    537:538:int indexOf(java.lang.Object) -> indexOf
    542:543:int lastIndexOf(java.lang.Object) -> lastIndexOf
    547:548:com.google.common.collect.ImmutableList subList(int,int) -> a
    553:554:java.lang.Object get(int) -> get
    558:558:int size() -> size
    562:562:boolean isPartialView() -> e
    513:513:java.util.List subList(int,int) -> subList
    513:513:java.util.ListIterator listIterator(int) -> listIterator
    513:513:java.util.ListIterator listIterator() -> listIterator
    513:513:java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableList$SubList -> com.a.a.c.bp:
    int offset -> a
    int length -> b
    com.google.common.collect.ImmutableList this$0 -> c
    406:409:void <init>(com.google.common.collect.ImmutableList,int,int) -> <init>
    413:413:int size() -> size
    418:419:java.lang.Object get(int) -> get
    424:425:com.google.common.collect.ImmutableList subList(int,int) -> a
    430:430:boolean isPartialView() -> e
    402:402:java.util.List subList(int,int) -> subList
    402:402:java.util.ListIterator listIterator(int) -> listIterator
    402:402:java.util.ListIterator listIterator() -> listIterator
    402:402:java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableMap -> com.a.a.c.bq:
    java.util.Map$Entry[] EMPTY_ENTRY_ARRAY -> a
    com.google.common.collect.ImmutableSet entrySet -> b
    com.google.common.collect.ImmutableSet keySet -> c
    com.google.common.collect.ImmutableCollection values -> d
    70:70:com.google.common.collect.ImmutableMap of() -> i
    315:315:void <init>() -> <init>
    326:326:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    338:338:java.lang.Object remove(java.lang.Object) -> remove
    350:350:void putAll(java.util.Map) -> putAll
    362:362:void clear() -> clear
    367:367:boolean isEmpty() -> isEmpty
    372:372:boolean containsKey(java.lang.Object) -> containsKey
    377:377:boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    392:393:com.google.common.collect.ImmutableSet entrySet() -> b
    com.google.common.collect.ImmutableSet createEntrySet() -> c
    406:407:com.google.common.collect.ImmutableSet keySet() -> d
    411:411:com.google.common.collect.ImmutableSet createKeySet() -> j
    422:423:com.google.common.collect.ImmutableCollection values() -> f
    507:507:boolean equals(java.lang.Object) -> equals
    boolean isPartialView() -> e
    515:515:int hashCode() -> hashCode
    519:519:java.lang.String toString() -> toString
    60:60:java.util.Set entrySet() -> entrySet
    60:60:java.util.Collection values() -> values
    60:60:java.util.Set keySet() -> keySet
    313:313:void <clinit>() -> <clinit>
com.google.common.collect.ImmutableMapEntrySet -> com.a.a.c.br:
    35:35:void <init>() -> <init>
    com.google.common.collect.ImmutableMap map() -> d
    41:41:int size() -> size
    46:51:boolean contains(java.lang.Object) -> contains
    56:56:boolean isPartialView() -> e
com.google.common.collect.ImmutableMapKeySet -> com.a.a.c.bs:
    com.google.common.collect.ImmutableMap map -> a
    37:39:void <init>(com.google.common.collect.ImmutableMap) -> <init>
    43:43:int size() -> size
    48:48:com.google.common.collect.UnmodifiableIterator iterator() -> a
    53:53:boolean contains(java.lang.Object) -> contains
    58:59:com.google.common.collect.ImmutableList createAsList() -> f
    76:76:boolean isPartialView() -> e
    33:33:java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableMapKeySet$1 -> com.a.a.c.bt:
    com.google.common.collect.ImmutableList val$entryList -> a
    com.google.common.collect.ImmutableMapKeySet this$0 -> b
    59:59:void <init>(com.google.common.collect.ImmutableMapKeySet,com.google.common.collect.ImmutableList) -> <init>
    63:63:java.lang.Object get(int) -> get
    68:68:com.google.common.collect.ImmutableCollection delegateCollection() -> c
com.google.common.collect.ImmutableMapValues -> com.a.a.c.bu:
    com.google.common.collect.ImmutableMap map -> a
    37:39:void <init>(com.google.common.collect.ImmutableMap) -> <init>
    43:43:int size() -> size
    48:48:com.google.common.collect.UnmodifiableIterator iterator() -> a
    53:53:boolean contains(java.lang.Object) -> contains
    58:58:boolean isPartialView() -> e
    63:64:com.google.common.collect.ImmutableList createAsList() -> f
    33:33:java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableMapValues$1 -> com.a.a.c.bv:
    com.google.common.collect.ImmutableList val$entryList -> a
    com.google.common.collect.ImmutableMapValues this$0 -> b
    64:64:void <init>(com.google.common.collect.ImmutableMapValues,com.google.common.collect.ImmutableList) -> <init>
    67:67:java.lang.Object get(int) -> get
    72:72:com.google.common.collect.ImmutableCollection delegateCollection() -> c
com.google.common.collect.ImmutableRangeMap -> com.a.a.c.bw:
    com.google.common.collect.ImmutableRangeMap EMPTY -> a
    com.google.common.collect.ImmutableList ranges -> b
    com.google.common.collect.ImmutableList values -> c
    84:84:com.google.common.collect.ImmutableRangeMap$Builder builder() -> a
    157:160:void <init>(com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableList) -> <init>
    165:171:java.lang.Object get(java.lang.Comparable) -> a
    200:200:void put(com.google.common.collect.Range,java.lang.Object) -> a
    220:225:com.google.common.collect.ImmutableMap asMapOfRanges() -> b
    283:283:int hashCode() -> hashCode
    288:292:boolean equals(java.lang.Object) -> equals
    297:297:java.lang.String toString() -> toString
    40:40:java.util.Map asMapOfRanges() -> c
    44:44:void <clinit>() -> <clinit>
com.google.common.collect.ImmutableRangeMap$Builder -> com.a.a.c.bx:
    com.google.common.collect.RangeSet keyRanges -> a
    com.google.common.collect.RangeMap rangeMap -> b
    94:97:void <init>() -> <init>
    106:121:com.google.common.collect.ImmutableRangeMap$Builder put(com.google.common.collect.Range,java.lang.Object) -> a
    142:150:com.google.common.collect.ImmutableRangeMap build() -> a
com.google.common.collect.ImmutableSet -> com.a.a.c.by:
    84:84:com.google.common.collect.ImmutableSet of() -> g
    94:94:com.google.common.collect.ImmutableSet of(java.lang.Object) -> b
    179:225:com.google.common.collect.ImmutableSet construct(int,java.lang.Object[]) -> b
    249:260:int chooseTableSize(int) -> a
    314:321:com.google.common.collect.ImmutableSet copyOf(java.util.Iterator) -> a
    364:375:com.google.common.collect.ImmutableSet copyOf(java.util.Collection) -> a
    380:380:com.google.common.collect.ImmutableSet copyOfEnumSet(java.util.EnumSet) -> a
    383:383:void <init>() -> <init>
    387:387:boolean isHashCodeFast() -> c_
    391:399:boolean equals(java.lang.Object) -> equals
    403:403:int hashCode() -> hashCode
    com.google.common.collect.UnmodifiableIterator iterator() -> a
    72:72:java.util.Iterator iterator() -> iterator
    74:74:com.google.common.collect.ImmutableSet access$000(int,java.lang.Object[]) -> a
com.google.common.collect.ImmutableSet$Builder -> com.a.a.c.bz:
    463:464:void <init>() -> <init>
    467:468:void <init>(int) -> <init>
    480:481:com.google.common.collect.ImmutableSet$Builder add(java.lang.Object) -> c
    522:523:com.google.common.collect.ImmutableSet$Builder addAll(java.util.Iterator) -> b
    531:535:com.google.common.collect.ImmutableSet build() -> a
    456:456:com.google.common.collect.ImmutableCollection$ArrayBasedBuilder add(java.lang.Object) -> a
    456:456:com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator) -> a
    456:456:com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> b
com.google.common.collect.ImmutableSortedAsList -> com.a.a.c.ca:
    36:37:void <init>(com.google.common.collect.ImmutableSortedSet,com.google.common.collect.ImmutableList) -> <init>
    41:41:com.google.common.collect.ImmutableSortedSet delegateCollection() -> i
    45:45:java.util.Comparator comparator() -> comparator
    53:60:int indexOf(java.lang.Object) -> indexOf
    65:65:int lastIndexOf(java.lang.Object) -> lastIndexOf
    71:71:boolean contains(java.lang.Object) -> contains
    82:82:com.google.common.collect.ImmutableList subListUnchecked(int,int) -> b
    30:30:com.google.common.collect.ImmutableCollection delegateCollection() -> c
com.google.common.collect.ImmutableSortedMap -> com.a.a.c.cb:
    java.util.Comparator NATURAL_ORDER -> a
    com.google.common.collect.ImmutableSortedMap NATURAL_EMPTY_MAP -> b
    com.google.common.collect.ImmutableSortedMap descendingMap -> c
    71:74:com.google.common.collect.ImmutableSortedMap emptyMap(java.util.Comparator) -> a
    101:104:com.google.common.collect.ImmutableSortedMap from(com.google.common.collect.ImmutableSortedSet,com.google.common.collect.ImmutableList) -> a
    117:117:com.google.common.collect.ImmutableSortedMap of() -> h
    412:413:void <init>() -> <init>
    415:417:void <init>(com.google.common.collect.ImmutableSortedMap) -> <init>
    421:421:int size() -> size
    425:425:boolean containsValue(java.lang.Object) -> containsValue
    429:429:boolean isPartialView() -> e
    437:437:com.google.common.collect.ImmutableSet entrySet() -> b
    com.google.common.collect.ImmutableSortedSet keySet() -> a
    com.google.common.collect.ImmutableCollection values() -> f
    459:459:java.util.Comparator comparator() -> comparator
    464:464:java.lang.Object firstKey() -> firstKey
    469:469:java.lang.Object lastKey() -> lastKey
    484:484:com.google.common.collect.ImmutableSortedMap headMap(java.lang.Object) -> a
    com.google.common.collect.ImmutableSortedMap headMap(java.lang.Object,boolean) -> a
    517:517:com.google.common.collect.ImmutableSortedMap subMap(java.lang.Object,java.lang.Object) -> a
    538:542:com.google.common.collect.ImmutableSortedMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> a
    557:557:com.google.common.collect.ImmutableSortedMap tailMap(java.lang.Object) -> b
    com.google.common.collect.ImmutableSortedMap tailMap(java.lang.Object,boolean) -> b
    578:578:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    583:583:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    588:588:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    593:593:java.lang.Object floorKey(java.lang.Object) -> floorKey
    598:598:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    603:603:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    608:608:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    613:613:java.lang.Object higherKey(java.lang.Object) -> higherKey
    618:618:java.util.Map$Entry firstEntry() -> firstEntry
    623:623:java.util.Map$Entry lastEntry() -> lastEntry
    635:635:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    647:647:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    654:658:com.google.common.collect.ImmutableSortedMap descendingMap() -> k
    com.google.common.collect.ImmutableSortedMap createDescendingMap() -> g
    665:665:com.google.common.collect.ImmutableSortedSet navigableKeySet() -> l
    670:670:com.google.common.collect.ImmutableSortedSet descendingKeySet() -> m
    58:58:com.google.common.collect.ImmutableSet keySet() -> d
    58:58:java.util.Set entrySet() -> entrySet
    58:58:java.util.Collection values() -> values
    58:58:java.util.Set keySet() -> keySet
    58:58:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    58:58:java.util.SortedMap headMap(java.lang.Object) -> headMap
    58:58:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    58:58:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    58:58:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    58:58:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    58:58:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    58:58:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    58:58:java.util.NavigableMap descendingMap() -> descendingMap
    65:67:void <clinit>() -> <clinit>
com.google.common.collect.ImmutableSortedMapFauxverideShim -> com.a.a.c.cc:
    26:26:void <init>() -> <init>
com.google.common.collect.ImmutableSortedSet -> com.a.a.c.cd:
    java.util.Comparator NATURAL_ORDER -> c
    com.google.common.collect.ImmutableSortedSet NATURAL_EMPTY_SET -> d
    java.util.Comparator comparator -> a
    com.google.common.collect.ImmutableSortedSet descendingSet -> b
    105:105:com.google.common.collect.ImmutableSortedSet emptySet() -> h
    110:113:com.google.common.collect.ImmutableSortedSet emptySet(java.util.Comparator) -> a
    253:254:com.google.common.collect.ImmutableSortedSet copyOf(java.lang.Iterable) -> a
    291:292:com.google.common.collect.ImmutableSortedSet copyOf(java.util.Collection) -> b
    344:357:com.google.common.collect.ImmutableSortedSet copyOf(java.util.Comparator,java.lang.Iterable) -> a
    380:380:com.google.common.collect.ImmutableSortedSet copyOf(java.util.Comparator,java.util.Collection) -> a
    424:438:com.google.common.collect.ImmutableSortedSet construct(java.util.Comparator,int,java.lang.Object[]) -> a
    569:569:int unsafeCompare(java.lang.Object,java.lang.Object) -> a
    578:579:int unsafeCompare(java.util.Comparator,java.lang.Object,java.lang.Object) -> a
    584:586:void <init>(java.util.Comparator) -> <init>
    597:597:java.util.Comparator comparator() -> comparator
    com.google.common.collect.UnmodifiableIterator iterator() -> a
    616:616:com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object) -> c
    625:625:com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object,boolean) -> c
    643:643:com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object,java.lang.Object) -> b
    653:656:com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> b
    672:672:com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object) -> d
    681:681:com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object,boolean) -> d
    com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> a
    com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> a
    com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> b
    701:701:java.lang.Object lower(java.lang.Object) -> lower
    710:710:java.lang.Object floor(java.lang.Object) -> floor
    719:719:java.lang.Object ceiling(java.lang.Object) -> ceiling
    728:728:java.lang.Object higher(java.lang.Object) -> higher
    733:733:java.lang.Object first() -> first
    738:738:java.lang.Object last() -> last
    752:752:java.lang.Object pollFirst() -> pollFirst
    766:766:java.lang.Object pollLast() -> pollLast
    779:784:com.google.common.collect.ImmutableSortedSet descendingSet() -> b_
    789:789:com.google.common.collect.ImmutableSortedSet createDescendingSet() -> d
    com.google.common.collect.UnmodifiableIterator descendingIterator() -> c
    int indexOf(java.lang.Object) -> a
    92:92:java.util.Iterator iterator() -> iterator
    92:92:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    92:92:java.util.SortedSet headSet(java.lang.Object) -> headSet
    92:92:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    92:92:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    92:92:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    92:92:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    92:92:java.util.Iterator descendingIterator() -> descendingIterator
    92:92:java.util.NavigableSet descendingSet() -> descendingSet
    97:100:void <clinit>() -> <clinit>
com.google.common.collect.ImmutableSortedSetFauxverideShim -> com.a.a.c.ce:
    35:35:void <init>() -> <init>
com.google.common.collect.Iterables -> com.a.a.c.cf:
    108:108:int size(java.lang.Iterable) -> a
    259:266:boolean elementsEqual(java.lang.Iterable,java.lang.Iterable) -> a
    278:278:java.lang.String toString(java.lang.Iterable) -> b
    289:289:java.lang.Object getOnlyElement(java.lang.Iterable) -> c
    328:328:java.lang.Object[] toArray(java.lang.Iterable) -> d
    337:337:java.util.Collection toCollection(java.lang.Iterable) -> h
    350:354:boolean addAll(java.util.Collection,java.lang.Iterable) -> a
    435:435:java.lang.Iterable concat(java.lang.Iterable,java.lang.Iterable) -> b
    494:495:java.lang.Iterable concat(java.lang.Iterable) -> e
    508:508:java.util.Iterator iterators(java.lang.Iterable) -> i
    584:586:java.lang.Iterable filter(java.lang.Iterable,com.google.common.base.Predicate) -> a
    623:623:boolean any(java.lang.Iterable,com.google.common.base.Predicate) -> b
    708:710:java.lang.Iterable transform(java.lang.Iterable,com.google.common.base.Function) -> a
    775:775:java.lang.Object getFirst(java.lang.Iterable,java.lang.Object) -> a
    911:913:java.lang.Iterable limit(java.lang.Iterable,int) -> a
    998:1001:boolean isEmpty(java.lang.Iterable) -> f
    60:60:java.util.Iterator access$100(java.lang.Iterable) -> g
com.google.common.collect.Iterables$11 -> com.a.a.c.cg:
    java.lang.Iterable val$iterable -> a
    int val$limitSize -> b
    913:913:void <init>(java.lang.Iterable,int) -> <init>
    916:916:java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$2 -> com.a.a.c.ch:
    java.lang.Iterable val$inputs -> a
    495:495:void <init>(java.lang.Iterable) -> <init>
    498:498:java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$3 -> com.a.a.c.ci:
    509:509:void <init>(java.util.Iterator) -> <init>
    512:512:java.util.Iterator transform(java.lang.Iterable) -> a
    509:509:java.lang.Object transform(java.lang.Object) -> a
com.google.common.collect.Iterables$6 -> com.a.a.c.cj:
    java.lang.Iterable val$unfiltered -> a
    com.google.common.base.Predicate val$predicate -> b
    586:586:void <init>(java.lang.Iterable,com.google.common.base.Predicate) -> <init>
    589:589:java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$8 -> com.a.a.c.ck:
    java.lang.Iterable val$fromIterable -> a
    com.google.common.base.Function val$function -> b
    710:710:void <init>(java.lang.Iterable,com.google.common.base.Function) -> <init>
    713:713:java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterators -> com.a.a.c.cl:
    com.google.common.collect.UnmodifiableListIterator EMPTY_LIST_ITERATOR -> a
    java.util.Iterator EMPTY_MODIFIABLE_ITERATOR -> b
    112:112:com.google.common.collect.UnmodifiableIterator emptyIterator() -> a
    124:124:com.google.common.collect.UnmodifiableListIterator emptyListIterator() -> b
    157:161:com.google.common.collect.UnmodifiableIterator unmodifiableIterator(java.util.Iterator) -> a
    190:195:int size(java.util.Iterator) -> b
    202:202:boolean contains(java.util.Iterator,java.lang.Object) -> a
    216:216:boolean removeAll(java.util.Iterator,java.util.Collection) -> a
    232:240:boolean removeIf(java.util.Iterator,com.google.common.base.Predicate) -> a
    269:279:boolean elementsEqual(java.util.Iterator,java.util.Iterator) -> a
    288:288:java.lang.String toString(java.util.Iterator) -> c
    302:317:java.lang.Object getOnlyElement(java.util.Iterator) -> d
    358:364:boolean addAll(java.util.Collection,java.util.Iterator) -> a
    531:532:java.util.Iterator concat(java.util.Iterator) -> e
    646:648:com.google.common.collect.UnmodifiableIterator filter(java.util.Iterator,com.google.common.base.Predicate) -> b
    684:684:boolean any(java.util.Iterator,com.google.common.base.Predicate) -> c
    775:782:int indexOf(java.util.Iterator,com.google.common.base.Predicate) -> d
    795:796:java.util.Iterator transform(java.util.Iterator,com.google.common.base.Function) -> a
    865:865:java.lang.Object getNext(java.util.Iterator,java.lang.Object) -> b
    928:930:java.util.Iterator limit(java.util.Iterator,int) -> a
    995:1000:java.lang.Object pollNext(java.util.Iterator) -> f
    1010:1015:void clear(java.util.Iterator) -> g
    1031:1031:com.google.common.collect.UnmodifiableIterator forArray(java.lang.Object[]) -> a
    1043:1058:com.google.common.collect.UnmodifiableListIterator forArray(java.lang.Object[],int,int,int) -> a
    1073:1073:com.google.common.collect.UnmodifiableIterator singletonIterator(java.lang.Object) -> a
    1219:1226:com.google.common.collect.PeekingIterator peekingIterator(java.util.Iterator) -> h
    1257:1260:com.google.common.collect.UnmodifiableIterator mergeSorted(java.lang.Iterable,java.util.Comparator) -> a
    1316:1316:java.util.ListIterator cast(java.util.Iterator) -> i
    72:127:void <clinit>() -> <clinit>
com.google.common.collect.Iterators$1 -> com.a.a.c.cm:
    73:73:void <init>() -> <init>
    76:76:boolean hasNext() -> hasNext
    80:80:java.lang.Object next() -> next
    84:84:boolean hasPrevious() -> hasPrevious
    88:88:java.lang.Object previous() -> previous
    92:92:int nextIndex() -> nextIndex
    96:96:int previousIndex() -> previousIndex
com.google.common.collect.Iterators$11 -> com.a.a.c.cn:
    java.lang.Object[] val$array -> a
    int val$offset -> b
    1058:1058:void <init>(int,int,java.lang.Object[],int) -> <init>
    1060:1060:java.lang.Object get(int) -> a
com.google.common.collect.Iterators$12 -> com.a.a.c.co:
    boolean done -> a
    java.lang.Object val$value -> b
    1073:1073:void <init>(java.lang.Object) -> <init>
    1077:1077:boolean hasNext() -> hasNext
    1081:1085:java.lang.Object next() -> next
com.google.common.collect.Iterators$2 -> com.a.a.c.cp:
    128:128:void <init>() -> <init>
    130:130:boolean hasNext() -> hasNext
    134:134:java.lang.Object next() -> next
    138:139:void remove() -> remove
com.google.common.collect.Iterators$3 -> com.a.a.c.cq:
    java.util.Iterator val$iterator -> a
    161:161:void <init>(java.util.Iterator) -> <init>
    164:164:boolean hasNext() -> hasNext
    168:168:java.lang.Object next() -> next
com.google.common.collect.Iterators$5 -> com.a.a.c.cr:
    java.util.Iterator current -> a
    java.util.Iterator removeFrom -> b
    java.util.Iterator val$inputs -> c
    532:533:void <init>(java.util.Iterator) -> <init>
    547:550:boolean hasNext() -> hasNext
    554:558:java.lang.Object next() -> next
    562:565:void remove() -> remove
com.google.common.collect.Iterators$7 -> com.a.a.c.cs:
    java.util.Iterator val$unfiltered -> a
    com.google.common.base.Predicate val$predicate -> b
    648:648:void <init>(java.util.Iterator,com.google.common.base.Predicate) -> <init>
    650:656:java.lang.Object computeNext() -> a
com.google.common.collect.Iterators$8 -> com.a.a.c.ct:
    com.google.common.base.Function val$function -> a
    796:796:void <init>(java.util.Iterator,com.google.common.base.Function) -> <init>
    799:799:java.lang.Object transform(java.lang.Object) -> a
com.google.common.collect.Iterators$9 -> com.a.a.c.cu:
    int count -> c
    int val$limitSize -> a
    java.util.Iterator val$iterator -> b
    930:930:void <init>(int,java.util.Iterator) -> <init>
    935:935:boolean hasNext() -> hasNext
    940:944:java.lang.Object next() -> next
    949:950:void remove() -> remove
com.google.common.collect.Iterators$MergingIterator -> com.a.a.c.cv:
    java.util.Queue queue -> a
    1276:1294:void <init>(java.lang.Iterable,java.util.Comparator) -> <init>
    1298:1298:boolean hasNext() -> hasNext
    1303:1308:java.lang.Object next() -> next
com.google.common.collect.Iterators$MergingIterator$1 -> com.a.a.c.cw:
    java.util.Comparator val$itemComparator -> a
    com.google.common.collect.Iterators$MergingIterator this$0 -> b
    1280:1280:void <init>(com.google.common.collect.Iterators$MergingIterator,java.util.Comparator) -> <init>
    1283:1283:int compare(com.google.common.collect.PeekingIterator,com.google.common.collect.PeekingIterator) -> a
    1280:1280:int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.collect.Iterators$PeekingImpl -> com.a.a.c.cx:
    java.util.Iterator iterator -> a
    boolean hasPeeked -> b
    java.lang.Object peekedElement -> c
    1143:1145:void <init>(java.util.Iterator) -> <init>
    1149:1149:boolean hasNext() -> hasNext
    1154:1160:java.lang.Object next() -> next
    1165:1167:void remove() -> remove
    1171:1175:java.lang.Object peek() -> a
com.google.common.collect.ListMultimap -> com.a.a.c.cy:
com.google.common.collect.Lists -> com.a.a.c.cz:
    88:88:java.util.ArrayList newArrayList() -> a
    110:115:java.util.ArrayList newArrayList(java.lang.Object[]) -> a
    119:122:int computeArrayListCapacity(int) -> a
    142:144:java.util.ArrayList newArrayList(java.lang.Iterable) -> a
    159:161:java.util.ArrayList newArrayList(java.util.Iterator) -> a
    543:543:java.util.List transform(java.util.List,com.google.common.base.Function) -> a
    787:794:java.util.List reverse(java.util.List) -> a
    944:953:boolean equalsImpl(java.util.List,java.lang.Object) -> a
    975:981:int indexOfImpl(java.util.List,java.lang.Object) -> b
    988:994:int lastIndexOfImpl(java.util.List,java.lang.Object) -> c
com.google.common.collect.Lists$RandomAccessReverseList -> com.a.a.c.da:
    921:922:void <init>(java.util.List) -> <init>
com.google.common.collect.Lists$ReverseList -> com.a.a.c.db:
    java.util.List forwardList -> a
    801:803:void <init>(java.util.List) -> <init>
    806:806:java.util.List getForwardList() -> a
    810:812:int reverseIndex(int) -> a
    816:818:int reversePosition(int) -> b
    822:823:void add(int,java.lang.Object) -> add
    826:827:void clear() -> clear
    830:830:java.lang.Object remove(int) -> remove
    834:835:void removeRange(int,int) -> removeRange
    838:838:java.lang.Object set(int,java.lang.Object) -> set
    842:842:java.lang.Object get(int) -> get
    846:846:int size() -> size
    850:851:java.util.List subList(int,int) -> subList
    856:856:java.util.Iterator iterator() -> iterator
    860:862:java.util.ListIterator listIterator(int) -> listIterator
    798:798:int access$000(com.google.common.collect.Lists$ReverseList,int) -> a
com.google.common.collect.Lists$ReverseList$1 -> com.a.a.c.dc:
    boolean canRemoveOrSet -> a
    java.util.ListIterator val$forwardIterator -> b
    com.google.common.collect.Lists$ReverseList this$0 -> c
    862:862:void <init>(com.google.common.collect.Lists$ReverseList,java.util.ListIterator) -> <init>
    867:870:void add(java.lang.Object) -> add
    873:873:boolean hasNext() -> hasNext
    877:877:boolean hasPrevious() -> hasPrevious
    881:885:java.lang.Object next() -> next
    889:889:int nextIndex() -> nextIndex
    893:897:java.lang.Object previous() -> previous
    901:901:int previousIndex() -> previousIndex
    905:908:void remove() -> remove
    911:913:void set(java.lang.Object) -> set
com.google.common.collect.Lists$TransformingRandomAccessList -> com.a.a.c.dd:
    java.util.List fromList -> a
    com.google.common.base.Function function -> b
    600:603:void <init>(java.util.List,com.google.common.base.Function) -> <init>
    605:606:void clear() -> clear
    608:608:java.lang.Object get(int) -> get
    611:611:java.util.Iterator iterator() -> iterator
    614:614:java.util.ListIterator listIterator(int) -> listIterator
    622:622:boolean isEmpty() -> isEmpty
    625:625:java.lang.Object remove(int) -> remove
    628:628:int size() -> size
com.google.common.collect.Lists$TransformingRandomAccessList$1 -> com.a.a.c.de:
    com.google.common.collect.Lists$TransformingRandomAccessList this$0 -> a
    614:614:void <init>(com.google.common.collect.Lists$TransformingRandomAccessList,java.util.ListIterator) -> <init>
    617:617:java.lang.Object transform(java.lang.Object) -> a
com.google.common.collect.Lists$TransformingSequentialList -> com.a.a.c.df:
    java.util.List fromList -> a
    com.google.common.base.Function function -> b
    559:562:void <init>(java.util.List,com.google.common.base.Function) -> <init>
    569:570:void clear() -> clear
    572:572:int size() -> size
    575:575:java.util.ListIterator listIterator(int) -> listIterator
com.google.common.collect.Lists$TransformingSequentialList$1 -> com.a.a.c.dg:
    com.google.common.collect.Lists$TransformingSequentialList this$0 -> a
    575:575:void <init>(com.google.common.collect.Lists$TransformingSequentialList,java.util.ListIterator) -> <init>
    578:578:java.lang.Object transform(java.lang.Object) -> a
com.google.common.collect.MapMaker -> com.a.a.c.dh:
    boolean useCustomMap -> b
    int initialCapacity -> c
    int concurrencyLevel -> d
    int maximumSize -> e
    com.google.common.collect.MapMakerInternalMap$Strength keyStrength -> f
    com.google.common.collect.MapMakerInternalMap$Strength valueStrength -> g
    long expireAfterWriteNanos -> h
    long expireAfterAccessNanos -> i
    com.google.common.collect.MapMaker$RemovalCause nullRemovalCause -> j
    com.google.common.base.Equivalence keyEquivalence -> k
    com.google.common.base.Ticker ticker -> l
    116:136:void <init>() -> <init>
    155:155:com.google.common.base.Equivalence getKeyEquivalence() -> b
    178:178:int getInitialCapacity() -> c
    248:248:int getConcurrencyLevel() -> d
    280:280:com.google.common.collect.MapMakerInternalMap$Strength getKeyStrength() -> e
    349:349:com.google.common.collect.MapMakerInternalMap$Strength getValueStrength() -> f
    399:399:long getExpireAfterWriteNanos() -> g
    442:442:long getExpireAfterAccessNanos() -> h
    447:447:com.google.common.base.Ticker getTicker() -> i
    506:509:java.util.concurrent.ConcurrentMap makeMap() -> j
    596:624:java.lang.String toString() -> toString
com.google.common.collect.MapMaker$1 -> com.a.a.c.di:
com.google.common.collect.MapMaker$NullConcurrentMap -> com.a.a.c.dj:
    com.google.common.collect.MapMaker$RemovalListener removalListener -> a
    com.google.common.collect.MapMaker$RemovalCause removalCause -> b
    758:761:void <init>(com.google.common.collect.MapMaker) -> <init>
    767:767:boolean containsKey(java.lang.Object) -> containsKey
    772:772:boolean containsValue(java.lang.Object) -> containsValue
    777:777:java.lang.Object get(java.lang.Object) -> get
    781:784:void notifyRemoval(java.lang.Object,java.lang.Object) -> a
    788:791:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    796:796:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    801:801:java.lang.Object remove(java.lang.Object) -> remove
    806:806:boolean remove(java.lang.Object,java.lang.Object) -> remove
    811:813:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    818:820:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    825:825:java.util.Set entrySet() -> entrySet
com.google.common.collect.MapMaker$RemovalCause -> com.a.a.c.dk:
    com.google.common.collect.MapMaker$RemovalCause EXPLICIT -> a
    com.google.common.collect.MapMaker$RemovalCause REPLACED -> b
    com.google.common.collect.MapMaker$RemovalCause COLLECTED -> c
    com.google.common.collect.MapMaker$RemovalCause EXPIRED -> d
    com.google.common.collect.MapMaker$RemovalCause SIZE -> e
    com.google.common.collect.MapMaker$RemovalCause[] $VALUES -> f
    685:685:com.google.common.collect.MapMaker$RemovalCause[] values() -> values
    685:685:com.google.common.collect.MapMaker$RemovalCause valueOf(java.lang.String) -> valueOf
    685:685:void <init>(java.lang.String,int) -> <init>
    685:685:void <init>(java.lang.String,int,com.google.common.collect.MapMaker$1) -> <init>
    685:736:void <clinit>() -> <clinit>
com.google.common.collect.MapMaker$RemovalCause$1 -> com.a.a.c.dl:
    690:690:void <init>(java.lang.String,int) -> <init>
com.google.common.collect.MapMaker$RemovalCause$2 -> com.a.a.c.dm:
    703:703:void <init>(java.lang.String,int) -> <init>
com.google.common.collect.MapMaker$RemovalCause$3 -> com.a.a.c.dn:
    714:714:void <init>(java.lang.String,int) -> <init>
com.google.common.collect.MapMaker$RemovalCause$4 -> com.a.a.c.do:
    725:725:void <init>(java.lang.String,int) -> <init>
com.google.common.collect.MapMaker$RemovalCause$5 -> com.a.a.c.dp:
    736:736:void <init>(java.lang.String,int) -> <init>
com.google.common.collect.MapMaker$RemovalListener -> com.a.a.c.dq:
    void onRemoval(com.google.common.collect.MapMaker$RemovalNotification) -> a
com.google.common.collect.MapMaker$RemovalNotification -> com.a.a.c.dr:
    com.google.common.collect.MapMaker$RemovalCause cause -> c
    662:664:void <init>(java.lang.Object,java.lang.Object,com.google.common.collect.MapMaker$RemovalCause) -> <init>
com.google.common.collect.MapMakerInternalMap -> com.a.a.c.ds:
    java.util.logging.Logger logger -> u
    int segmentMask -> a
    int segmentShift -> b
    com.google.common.collect.MapMakerInternalMap$Segment[] segments -> c
    int concurrencyLevel -> d
    com.google.common.base.Equivalence keyEquivalence -> e
    com.google.common.base.Equivalence valueEquivalence -> f
    com.google.common.collect.MapMakerInternalMap$Strength keyStrength -> g
    com.google.common.collect.MapMakerInternalMap$Strength valueStrength -> h
    int maximumSize -> i
    long expireAfterAccessNanos -> j
    long expireAfterWriteNanos -> k
    java.util.Queue removalNotificationQueue -> l
    com.google.common.collect.MapMaker$RemovalListener removalListener -> m
    com.google.common.collect.MapMakerInternalMap$EntryFactory entryFactory -> n
    com.google.common.base.Ticker ticker -> o
    com.google.common.collect.MapMakerInternalMap$ValueReference UNSET -> p
    java.util.Queue DISCARDING_QUEUE -> q
    java.util.Set keySet -> r
    java.util.Collection values -> s
    java.util.Set entrySet -> t
    195:263:void <init>(com.google.common.collect.MapMaker) -> <init>
    266:266:boolean evictsBySize() -> a
    270:270:boolean expires() -> b
    274:274:boolean expiresAfterWrite() -> c
    278:278:boolean expiresAfterAccess() -> d
    282:282:boolean usesKeyReferences() -> e
    286:286:boolean usesValueReferences() -> f
    614:614:com.google.common.collect.MapMakerInternalMap$ValueReference unset() -> g
    865:865:com.google.common.collect.MapMakerInternalMap$ReferenceEntry nullEntry() -> h
    900:900:java.util.Queue discardingQueue() -> i
    1813:1818:int rehash(int) -> a
    1851:1852:int hash(java.lang.Object) -> a
    1856:1859:void reclaimValue(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
    1862:1864:void reclaimKey(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    1883:1883:com.google.common.collect.MapMakerInternalMap$Segment segmentFor(int) -> b
    1887:1887:com.google.common.collect.MapMakerInternalMap$Segment createSegment(int,int) -> a
    1896:1907:java.lang.Object getLiveValue(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
    1916:1916:boolean isExpired(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> c
    1924:1924:boolean isExpired(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,long) -> a
    1929:1931:void connectExpirables(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    1935:1938:void nullifyExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> d
    1949:1956:void processPendingNotifications() -> j
    1961:1963:void connectEvictables(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
    1967:1970:void nullifyEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> e
    1974:1974:com.google.common.collect.MapMakerInternalMap$Segment[] newSegmentArray(int) -> c
    3395:3415:boolean isEmpty() -> isEmpty
    3420:3425:int size() -> size
    3430:3434:java.lang.Object get(java.lang.Object) -> get
    3451:3455:boolean containsKey(java.lang.Object) -> containsKey
    3460:3494:boolean containsValue(java.lang.Object) -> containsValue
    3499:3502:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    3507:3510:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    3515:3518:void putAll(java.util.Map) -> putAll
    3522:3526:java.lang.Object remove(java.lang.Object) -> remove
    3531:3535:boolean remove(java.lang.Object,java.lang.Object) -> remove
    3540:3546:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    3551:3554:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    3559:3562:void clear() -> clear
    3568:3569:java.util.Set keySet() -> keySet
    3576:3577:java.util.Collection values() -> values
    3584:3585:java.util.Set entrySet() -> entrySet
    135:868:void <clinit>() -> <clinit>
com.google.common.collect.MapMakerInternalMap$1 -> com.a.a.c.dt:
    578:578:void <init>() -> <init>
    581:581:java.lang.Object get() -> get
    586:586:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry() -> a
    592:592:com.google.common.collect.MapMakerInternalMap$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    597:597:boolean isComputingReference() -> b
    606:606:void clear(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
com.google.common.collect.MapMakerInternalMap$2 -> com.a.a.c.du:
    868:868:void <init>() -> <init>
    871:871:boolean offer(java.lang.Object) -> offer
    876:876:java.lang.Object peek() -> peek
    881:881:java.lang.Object poll() -> poll
    886:886:int size() -> size
    891:891:java.util.Iterator iterator() -> iterator
com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry -> com.a.a.c.dv:
    786:786:void <init>() -> <init>
    789:789:com.google.common.collect.MapMakerInternalMap$ValueReference getValueReference() -> a
    794:794:void setValueReference(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
    799:799:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNext() -> b
    804:804:int getHash() -> c
    809:809:java.lang.Object getKey() -> d
    814:814:long getExpirationTime() -> e
    819:819:void setExpirationTime(long) -> a
    824:824:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> f
    829:829:void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    834:834:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> g
    839:839:void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
    844:844:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> h
    849:849:void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> c
    854:854:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> i
    859:859:void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> d
com.google.common.collect.MapMakerInternalMap$EntryFactory -> com.a.a.c.dw:
    com.google.common.collect.MapMakerInternalMap$EntryFactory STRONG -> a
    com.google.common.collect.MapMakerInternalMap$EntryFactory STRONG_EXPIRABLE -> b
    com.google.common.collect.MapMakerInternalMap$EntryFactory STRONG_EVICTABLE -> c
    com.google.common.collect.MapMakerInternalMap$EntryFactory STRONG_EXPIRABLE_EVICTABLE -> d
    com.google.common.collect.MapMakerInternalMap$EntryFactory WEAK -> e
    com.google.common.collect.MapMakerInternalMap$EntryFactory WEAK_EXPIRABLE -> f
    com.google.common.collect.MapMakerInternalMap$EntryFactory WEAK_EVICTABLE -> g
    com.google.common.collect.MapMakerInternalMap$EntryFactory WEAK_EXPIRABLE_EVICTABLE -> h
    com.google.common.collect.MapMakerInternalMap$EntryFactory[][] factories -> i
    com.google.common.collect.MapMakerInternalMap$EntryFactory[] $VALUES -> j
    351:351:com.google.common.collect.MapMakerInternalMap$EntryFactory[] values() -> values
    351:351:com.google.common.collect.MapMakerInternalMap$EntryFactory valueOf(java.lang.String) -> valueOf
    351:351:void <init>(java.lang.String,int) -> <init>
    478:479:com.google.common.collect.MapMakerInternalMap$EntryFactory getFactory(com.google.common.collect.MapMakerInternalMap$Strength,boolean,boolean) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    502:502:com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    509:515:void copyExpirableEntry(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    521:525:void copyEvictableEntry(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
    351:351:void <init>(java.lang.String,int,com.google.common.collect.MapMakerInternalMap$1) -> <init>
    351:470:void <clinit>() -> <clinit>
com.google.common.collect.MapMakerInternalMap$EntryFactory$1 -> com.a.a.c.dx:
    352:352:void <init>(java.lang.String,int) -> <init>
    356:356:com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
com.google.common.collect.MapMakerInternalMap$EntryFactory$2 -> com.a.a.c.dy:
    359:359:void <init>(java.lang.String,int) -> <init>
    363:363:com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    369:371:com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
com.google.common.collect.MapMakerInternalMap$EntryFactory$3 -> com.a.a.c.dz:
    374:374:void <init>(java.lang.String,int) -> <init>
    378:378:com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    384:386:com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
com.google.common.collect.MapMakerInternalMap$EntryFactory$4 -> com.a.a.c.ea:
    389:389:void <init>(java.lang.String,int) -> <init>
    393:393:com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    399:402:com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
com.google.common.collect.MapMakerInternalMap$EntryFactory$5 -> com.a.a.c.eb:
    406:406:void <init>(java.lang.String,int) -> <init>
    410:410:com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
com.google.common.collect.MapMakerInternalMap$EntryFactory$6 -> com.a.a.c.ec:
    413:413:void <init>(java.lang.String,int) -> <init>
    417:417:com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    423:425:com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
com.google.common.collect.MapMakerInternalMap$EntryFactory$7 -> com.a.a.c.ed:
    428:428:void <init>(java.lang.String,int) -> <init>
    432:432:com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    438:440:com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
com.google.common.collect.MapMakerInternalMap$EntryFactory$8 -> com.a.a.c.ee:
    443:443:void <init>(java.lang.String,int) -> <init>
    447:447:com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    453:456:com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
com.google.common.collect.MapMakerInternalMap$EntryIterator -> com.a.a.c.ef:
    com.google.common.collect.MapMakerInternalMap this$0 -> a
    3765:3765:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    3769:3769:java.util.Map$Entry next() -> a
    3765:3765:java.lang.Object next() -> next
com.google.common.collect.MapMakerInternalMap$EntrySet -> com.a.a.c.eg:
    com.google.common.collect.MapMakerInternalMap this$0 -> a
    3834:3834:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    3838:3838:java.util.Iterator iterator() -> iterator
    3843:3853:boolean contains(java.lang.Object) -> contains
    3858:3863:boolean remove(java.lang.Object) -> remove
    3868:3868:int size() -> size
    3873:3873:boolean isEmpty() -> isEmpty
    3878:3879:void clear() -> clear
com.google.common.collect.MapMakerInternalMap$EvictionQueue -> com.a.a.c.eh:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry head -> a
    3111:3112:void <init>() -> <init>
    3144:3150:boolean offer(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    3155:3156:com.google.common.collect.MapMakerInternalMap$ReferenceEntry peek() -> a
    3161:3167:com.google.common.collect.MapMakerInternalMap$ReferenceEntry poll() -> b
    3173:3179:boolean remove(java.lang.Object) -> remove
    3185:3186:boolean contains(java.lang.Object) -> contains
    3191:3191:boolean isEmpty() -> isEmpty
    3196:3200:int size() -> size
    3205:3214:void clear() -> clear
    3218:3218:java.util.Iterator iterator() -> iterator
    3111:3111:java.lang.Object peek() -> peek
    3111:3111:java.lang.Object poll() -> poll
    3111:3111:boolean offer(java.lang.Object) -> offer
com.google.common.collect.MapMakerInternalMap$EvictionQueue$1 -> com.a.a.c.ei:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextEvictable -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousEvictable -> b
    com.google.common.collect.MapMakerInternalMap$EvictionQueue this$0 -> c
    3112:3126:void <init>(com.google.common.collect.MapMakerInternalMap$EvictionQueue) -> <init>
    3118:3118:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> h
    3123:3124:void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> c
    3130:3130:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> i
    3135:3136:void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> d
com.google.common.collect.MapMakerInternalMap$EvictionQueue$2 -> com.a.a.c.ej:
    com.google.common.collect.MapMakerInternalMap$EvictionQueue this$0 -> a
    3218:3218:void <init>(com.google.common.collect.MapMakerInternalMap$EvictionQueue,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    3221:3222:com.google.common.collect.MapMakerInternalMap$ReferenceEntry computeNext(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    3218:3218:java.lang.Object computeNext(java.lang.Object) -> a
com.google.common.collect.MapMakerInternalMap$ExpirationQueue -> com.a.a.c.ek:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry head -> a
    3239:3240:void <init>() -> <init>
    3280:3286:boolean offer(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    3291:3292:com.google.common.collect.MapMakerInternalMap$ReferenceEntry peek() -> a
    3297:3303:com.google.common.collect.MapMakerInternalMap$ReferenceEntry poll() -> b
    3309:3315:boolean remove(java.lang.Object) -> remove
    3321:3322:boolean contains(java.lang.Object) -> contains
    3327:3327:boolean isEmpty() -> isEmpty
    3332:3336:int size() -> size
    3341:3350:void clear() -> clear
    3354:3354:java.util.Iterator iterator() -> iterator
    3239:3239:java.lang.Object peek() -> peek
    3239:3239:java.lang.Object poll() -> poll
    3239:3239:boolean offer(java.lang.Object) -> offer
com.google.common.collect.MapMakerInternalMap$ExpirationQueue$1 -> com.a.a.c.el:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextExpirable -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousExpirable -> b
    com.google.common.collect.MapMakerInternalMap$ExpirationQueue this$0 -> c
    3240:3262:void <init>(com.google.common.collect.MapMakerInternalMap$ExpirationQueue) -> <init>
    3244:3244:long getExpirationTime() -> e
    3248:3248:void setExpirationTime(long) -> a
    3254:3254:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> f
    3259:3260:void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    3266:3266:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> g
    3271:3272:void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
com.google.common.collect.MapMakerInternalMap$ExpirationQueue$2 -> com.a.a.c.em:
    com.google.common.collect.MapMakerInternalMap$ExpirationQueue this$0 -> a
    3354:3354:void <init>(com.google.common.collect.MapMakerInternalMap$ExpirationQueue,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    3357:3358:com.google.common.collect.MapMakerInternalMap$ReferenceEntry computeNext(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    3354:3354:java.lang.Object computeNext(java.lang.Object) -> a
com.google.common.collect.MapMakerInternalMap$HashIterator -> com.a.a.c.en:
    int nextSegmentIndex -> b
    int nextTableIndex -> c
    com.google.common.collect.MapMakerInternalMap$Segment currentSegment -> d
    java.util.concurrent.atomic.AtomicReferenceArray currentTable -> e
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextEntry -> f
    com.google.common.collect.MapMakerInternalMap$WriteThroughEntry nextExternal -> g
    com.google.common.collect.MapMakerInternalMap$WriteThroughEntry lastReturned -> h
    com.google.common.collect.MapMakerInternalMap this$0 -> i
    3600:3604:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    3610:3630:void advance() -> b
    3636:3643:boolean nextInChain() -> c
    3650:3657:boolean nextInTable() -> d
    3666:3676:boolean advanceTo(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    3682:3682:boolean hasNext() -> hasNext
    3686:3691:com.google.common.collect.MapMakerInternalMap$WriteThroughEntry nextEntry() -> e
    3696:3699:void remove() -> remove
com.google.common.collect.MapMakerInternalMap$KeyIterator -> com.a.a.c.eo:
    com.google.common.collect.MapMakerInternalMap this$0 -> a
    3702:3702:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    3706:3706:java.lang.Object next() -> next
com.google.common.collect.MapMakerInternalMap$KeySet -> com.a.a.c.ep:
    com.google.common.collect.MapMakerInternalMap this$0 -> a
    3773:3773:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    3777:3777:java.util.Iterator iterator() -> iterator
    3782:3782:int size() -> size
    3787:3787:boolean isEmpty() -> isEmpty
    3792:3792:boolean contains(java.lang.Object) -> contains
    3797:3797:boolean remove(java.lang.Object) -> remove
    3802:3803:void clear() -> clear
com.google.common.collect.MapMakerInternalMap$NullEntry -> com.a.a.c.eq:
    com.google.common.collect.MapMakerInternalMap$NullEntry INSTANCE -> a
    com.google.common.collect.MapMakerInternalMap$NullEntry[] $VALUES -> b
    719:719:com.google.common.collect.MapMakerInternalMap$NullEntry[] values() -> values
    719:719:com.google.common.collect.MapMakerInternalMap$NullEntry valueOf(java.lang.String) -> valueOf
    719:719:void <init>(java.lang.String,int) -> <init>
    724:724:com.google.common.collect.MapMakerInternalMap$ValueReference getValueReference() -> a
    728:728:void setValueReference(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
    732:732:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNext() -> b
    737:737:int getHash() -> c
    742:742:java.lang.Object getKey() -> d
    747:747:long getExpirationTime() -> e
    751:751:void setExpirationTime(long) -> a
    755:755:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> f
    759:759:void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    763:763:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> g
    767:767:void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
    771:771:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> h
    775:775:void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> c
    779:779:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> i
    783:783:void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> d
    719:720:void <clinit>() -> <clinit>
com.google.common.collect.MapMakerInternalMap$ReferenceEntry -> com.a.a.c.er:
    com.google.common.collect.MapMakerInternalMap$ValueReference getValueReference() -> a
    void setValueReference(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNext() -> b
    int getHash() -> c
    java.lang.Object getKey() -> d
    long getExpirationTime() -> e
    void setExpirationTime(long) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> f
    void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> g
    void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> h
    void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> c
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> i
    void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> d
com.google.common.collect.MapMakerInternalMap$Segment -> com.a.a.c.es:
    com.google.common.collect.MapMakerInternalMap map -> a
    int count -> b
    int modCount -> c
    int threshold -> d
    java.util.concurrent.atomic.AtomicReferenceArray table -> e
    int maxSegmentSize -> f
    java.lang.ref.ReferenceQueue keyReferenceQueue -> g
    java.lang.ref.ReferenceQueue valueReferenceQueue -> h
    java.util.Queue recencyQueue -> i
    java.util.concurrent.atomic.AtomicInteger readCount -> j
    java.util.Queue evictionQueue -> k
    java.util.Queue expirationQueue -> l
    2074:2112:void <init>(com.google.common.collect.MapMakerInternalMap,int,int) -> <init>
    2115:2115:java.util.concurrent.atomic.AtomicReferenceArray newEntryArray(int) -> a
    2119:2125:void initTable(java.util.concurrent.atomic.AtomicReferenceArray) -> a
    2129:2129:com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    2138:2152:com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    2160:2163:void setValue(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,java.lang.Object) -> a
    2171:2178:void tryDrainReferenceQueues() -> a
    2186:2192:void drainReferenceQueues() -> b
    2197:2206:void drainKeyReferenceQueue() -> c
    2211:2220:void drainValueReferenceQueue() -> d
    2226:2232:void clearReferenceQueues() -> e
    2235:2236:void clearKeyReferenceQueue() -> f
    2239:2240:void clearValueReferenceQueue() -> g
    2252:2256:void recordRead(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    2267:2272:void recordLockedRead(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
    2281:2292:void recordWrite(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> c
    2303:2315:void drainRecencyQueue() -> h
    2321:2322:void recordExpirationTime(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,long) -> a
    2328:2336:void tryExpireEntries() -> i
    2340:2354:void expireEntries() -> j
    2359:2360:void enqueueNotification(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMaker$RemovalCause) -> a
    2363:2367:void enqueueNotification(java.lang.Object,int,java.lang.Object,com.google.common.collect.MapMaker$RemovalCause) -> a
    2377:2386:boolean evictEntries() -> k
    2394:2395:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getFirst(int) -> b
    2401:2419:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry(java.lang.Object,int) -> a
    2423:2430:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getLiveEntry(java.lang.Object,int) -> b
    2435:2448:java.lang.Object get(java.lang.Object,int) -> c
    2454:2464:boolean containsKey(java.lang.Object,int) -> d
    2498:2561:java.lang.Object put(java.lang.Object,int,java.lang.Object,boolean) -> a
    2570:2635:void expand() -> l
    2638:2684:boolean replace(java.lang.Object,int,java.lang.Object,java.lang.Object) -> a
    2689:2728:java.lang.Object replace(java.lang.Object,int,java.lang.Object) -> a
    2733:2771:java.lang.Object remove(java.lang.Object,int) -> e
    2776:2814:boolean remove(java.lang.Object,int,java.lang.Object) -> b
    2819:2848:void clear() -> m
    2864:2879:com.google.common.collect.MapMakerInternalMap$ReferenceEntry removeFromChain(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
    2883:2886:void removeCollectedEntry(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> d
    2892:2915:boolean reclaimKey(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,int) -> a
    2923:2952:boolean reclaimValue(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
    2990:3007:boolean removeEntry(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,int,com.google.common.collect.MapMaker$RemovalCause) -> a
    3015:3018:boolean isCollected(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
    3026:3040:java.lang.Object getLiveValue(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> e
    3049:3052:void postReadCleanup() -> n
    3062:3063:void preWriteCleanup() -> o
    3069:3070:void postWriteCleanup() -> p
    3073:3075:void runCleanup() -> q
    3078:3087:void runLockedCleanup() -> r
    3091:3094:void runUnlockedCleanup() -> s
com.google.common.collect.MapMakerInternalMap$SoftValueReference -> com.a.a.c.et:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry entry -> a
    1730:1732:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    1736:1736:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry() -> a
    1741:1742:void clear(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
    1747:1747:com.google.common.collect.MapMakerInternalMap$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    1752:1752:boolean isComputingReference() -> b
com.google.common.collect.MapMakerInternalMap$Strength -> com.a.a.c.eu:
    com.google.common.collect.MapMakerInternalMap$Strength STRONG -> a
    com.google.common.collect.MapMakerInternalMap$Strength SOFT -> b
    com.google.common.collect.MapMakerInternalMap$Strength WEAK -> c
    com.google.common.collect.MapMakerInternalMap$Strength[] $VALUES -> d
    289:289:com.google.common.collect.MapMakerInternalMap$Strength[] values() -> values
    289:289:com.google.common.collect.MapMakerInternalMap$Strength valueOf(java.lang.String) -> valueOf
    289:289:void <init>(java.lang.String,int) -> <init>
    com.google.common.collect.MapMakerInternalMap$ValueReference referenceValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,java.lang.Object) -> a
    com.google.common.base.Equivalence defaultEquivalence() -> a
    289:289:void <init>(java.lang.String,int,com.google.common.collect.MapMakerInternalMap$1) -> <init>
    289:321:void <clinit>() -> <clinit>
com.google.common.collect.MapMakerInternalMap$Strength$1 -> com.a.a.c.ev:
    295:295:void <init>(java.lang.String,int) -> <init>
    299:299:com.google.common.collect.MapMakerInternalMap$ValueReference referenceValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,java.lang.Object) -> a
    304:304:com.google.common.base.Equivalence defaultEquivalence() -> a
com.google.common.collect.MapMakerInternalMap$Strength$2 -> com.a.a.c.ew:
    308:308:void <init>(java.lang.String,int) -> <init>
    312:312:com.google.common.collect.MapMakerInternalMap$ValueReference referenceValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,java.lang.Object) -> a
    317:317:com.google.common.base.Equivalence defaultEquivalence() -> a
com.google.common.collect.MapMakerInternalMap$Strength$3 -> com.a.a.c.ex:
    321:321:void <init>(java.lang.String,int) -> <init>
    325:325:com.google.common.collect.MapMakerInternalMap$ValueReference referenceValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,java.lang.Object) -> a
    330:330:com.google.common.base.Equivalence defaultEquivalence() -> a
com.google.common.collect.MapMakerInternalMap$StrongEntry -> com.a.a.c.ey:
    java.lang.Object key -> a
    int hash -> b
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry next -> c
    com.google.common.collect.MapMakerInternalMap$ValueReference valueReference -> d
    917:986:void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    925:925:java.lang.Object getKey() -> d
    932:932:long getExpirationTime() -> e
    937:937:void setExpirationTime(long) -> a
    942:942:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> f
    947:947:void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    952:952:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> g
    957:957:void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
    964:964:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> h
    969:969:void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> c
    974:974:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> i
    979:979:void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> d
    990:990:com.google.common.collect.MapMakerInternalMap$ValueReference getValueReference() -> a
    995:998:void setValueReference(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
    1002:1002:int getHash() -> c
    1007:1007:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNext() -> b
com.google.common.collect.MapMakerInternalMap$StrongEvictableEntry -> com.a.a.c.ez:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextEvictable -> e
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousEvictable -> f
    1061:1080:void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    1071:1071:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> h
    1076:1077:void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> c
    1084:1084:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> i
    1089:1090:void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> d
com.google.common.collect.MapMakerInternalMap$StrongExpirableEntry -> com.a.a.c.fa:
    long time -> e
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextExpirable -> f
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousExpirable -> g
    1014:1045:void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    1023:1023:long getExpirationTime() -> e
    1028:1029:void setExpirationTime(long) -> a
    1036:1036:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> f
    1041:1042:void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    1049:1049:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> g
    1054:1055:void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
com.google.common.collect.MapMakerInternalMap$StrongExpirableEvictableEntry -> com.a.a.c.fb:
    long time -> e
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextExpirable -> f
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousExpirable -> g
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextEvictable -> h
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousEvictable -> i
    1096:1155:void <init>(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    1105:1105:long getExpirationTime() -> e
    1110:1111:void setExpirationTime(long) -> a
    1118:1118:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> f
    1123:1124:void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    1131:1131:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> g
    1136:1137:void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
    1146:1146:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> h
    1151:1152:void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> c
    1159:1159:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> i
    1164:1165:void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> d
com.google.common.collect.MapMakerInternalMap$StrongValueReference -> com.a.a.c.fc:
    java.lang.Object referent -> a
    1767:1769:void <init>(java.lang.Object) -> <init>
    1773:1773:java.lang.Object get() -> get
    1778:1778:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry() -> a
    1784:1784:com.google.common.collect.MapMakerInternalMap$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    1789:1789:boolean isComputingReference() -> b
    1798:1798:void clear(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
com.google.common.collect.MapMakerInternalMap$ValueIterator -> com.a.a.c.fd:
    com.google.common.collect.MapMakerInternalMap this$0 -> a
    3710:3710:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    3714:3714:java.lang.Object next() -> next
com.google.common.collect.MapMakerInternalMap$ValueReference -> com.a.a.c.fe:
    java.lang.Object get() -> get
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry() -> a
    com.google.common.collect.MapMakerInternalMap$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    void clear(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
    boolean isComputingReference() -> b
com.google.common.collect.MapMakerInternalMap$Values -> com.a.a.c.ff:
    com.google.common.collect.MapMakerInternalMap this$0 -> a
    3806:3806:void <init>(com.google.common.collect.MapMakerInternalMap) -> <init>
    3810:3810:java.util.Iterator iterator() -> iterator
    3815:3815:int size() -> size
    3820:3820:boolean isEmpty() -> isEmpty
    3825:3825:boolean contains(java.lang.Object) -> contains
    3830:3831:void clear() -> clear
com.google.common.collect.MapMakerInternalMap$WeakEntry -> com.a.a.c.fg:
    int hash -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry next -> b
    com.google.common.collect.MapMakerInternalMap$ValueReference valueReference -> c
    1430:1498:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    1437:1437:java.lang.Object getKey() -> d
    1444:1444:long getExpirationTime() -> e
    1449:1449:void setExpirationTime(long) -> a
    1454:1454:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> f
    1459:1459:void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    1464:1464:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> g
    1469:1469:void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
    1476:1476:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> h
    1481:1481:void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> c
    1486:1486:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> i
    1491:1491:void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> d
    1502:1502:com.google.common.collect.MapMakerInternalMap$ValueReference getValueReference() -> a
    1507:1510:void setValueReference(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
    1514:1514:int getHash() -> c
    1519:1519:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNext() -> b
com.google.common.collect.MapMakerInternalMap$WeakEvictableEntry -> com.a.a.c.fh:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextEvictable -> d
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousEvictable -> e
    1575:1594:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    1585:1585:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> h
    1590:1591:void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> c
    1598:1598:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> i
    1603:1604:void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> d
com.google.common.collect.MapMakerInternalMap$WeakExpirableEntry -> com.a.a.c.fi:
    long time -> d
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextExpirable -> e
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousExpirable -> f
    1527:1558:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    1536:1536:long getExpirationTime() -> e
    1541:1542:void setExpirationTime(long) -> a
    1549:1549:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> f
    1554:1555:void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    1562:1562:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> g
    1567:1568:void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
com.google.common.collect.MapMakerInternalMap$WeakExpirableEvictableEntry -> com.a.a.c.fj:
    long time -> d
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextExpirable -> e
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousExpirable -> f
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextEvictable -> g
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousEvictable -> h
    1611:1670:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    1620:1620:long getExpirationTime() -> e
    1625:1626:void setExpirationTime(long) -> a
    1633:1633:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> f
    1638:1639:void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    1646:1646:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> g
    1651:1652:void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
    1661:1661:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> h
    1666:1667:void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> c
    1674:1674:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> i
    1679:1680:void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> d
com.google.common.collect.MapMakerInternalMap$WeakValueReference -> com.a.a.c.fk:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry entry -> a
    1691:1693:void <init>(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> <init>
    1697:1697:com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry() -> a
    1702:1703:void clear(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
    1708:1708:com.google.common.collect.MapMakerInternalMap$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    1713:1713:boolean isComputingReference() -> b
com.google.common.collect.MapMakerInternalMap$WriteThroughEntry -> com.a.a.c.fl:
    java.lang.Object key -> a
    java.lang.Object value -> b
    com.google.common.collect.MapMakerInternalMap this$0 -> c
    3726:3729:void <init>(com.google.common.collect.MapMakerInternalMap,java.lang.Object,java.lang.Object) -> <init>
    3733:3733:java.lang.Object getKey() -> getKey
    3738:3738:java.lang.Object getValue() -> getValue
    3744:3748:boolean equals(java.lang.Object) -> equals
    3754:3754:int hashCode() -> hashCode
    3759:3761:java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.Maps -> com.a.a.c.fm:
    com.google.common.base.Joiner$MapJoiner STANDARD_JOINER -> a
    104:104:com.google.common.base.Function keyFunction() -> a
    109:109:com.google.common.base.Function valueFunction() -> b
    113:113:java.util.Iterator keyIterator(java.util.Iterator) -> a
    117:117:java.util.Iterator valueIterator(java.util.Iterator) -> b
    122:122:com.google.common.collect.UnmodifiableIterator valueIterator(com.google.common.collect.UnmodifiableIterator) -> a
    177:177:java.util.HashMap newHashMap() -> c
    204:211:int capacity(int) -> a
    278:278:java.util.concurrent.ConcurrentMap newConcurrentMap() -> d
    291:291:java.util.TreeMap newTreeMap() -> e
    1207:1207:java.util.Map$Entry immutableEntry(java.lang.Object,java.lang.Object) -> a
    3351:3357:java.lang.Object safeGet(java.util.Map,java.lang.Object) -> a
    3366:3372:boolean safeContainsKey(java.util.Map,java.lang.Object) -> b
    3381:3387:java.lang.Object safeRemove(java.util.Map,java.lang.Object) -> c
    3449:3455:boolean equalsImpl(java.util.Map,java.lang.Object) -> d
    3465:3468:java.lang.String toStringImpl(java.util.Map) -> a
    3523:3523:java.lang.Object keyOrNull(java.util.Map$Entry) -> a
    3458:3458:void <clinit>() -> <clinit>
com.google.common.collect.Maps$1 -> com.a.a.c.fn:
    com.google.common.collect.UnmodifiableIterator val$entryIterator -> a
    122:122:void <init>(com.google.common.collect.UnmodifiableIterator) -> <init>
    125:125:boolean hasNext() -> hasNext
    130:130:java.lang.Object next() -> next
com.google.common.collect.Maps$DescendingMap -> com.a.a.c.fo:
    java.util.Comparator comparator -> a
    java.util.Set entrySet -> b
    java.util.NavigableSet navigableKeySet -> c
    3794:3794:void <init>() -> <init>
    java.util.NavigableMap forward() -> a
    3801:3801:java.util.Map delegate() -> c
    3809:3817:java.util.Comparator comparator() -> comparator
    3822:3822:com.google.common.collect.Ordering reverse(java.util.Comparator) -> a
    3827:3827:java.lang.Object firstKey() -> firstKey
    3832:3832:java.lang.Object lastKey() -> lastKey
    3837:3837:java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    3842:3842:java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    3847:3847:java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    3852:3852:java.lang.Object floorKey(java.lang.Object) -> floorKey
    3857:3857:java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    3862:3862:java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    3867:3867:java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    3872:3872:java.lang.Object higherKey(java.lang.Object) -> higherKey
    3877:3877:java.util.Map$Entry firstEntry() -> firstEntry
    3882:3882:java.util.Map$Entry lastEntry() -> lastEntry
    3887:3887:java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    3892:3892:java.util.Map$Entry pollLastEntry() -> pollLastEntry
    3897:3897:java.util.NavigableMap descendingMap() -> descendingMap
    3904:3905:java.util.Set entrySet() -> entrySet
    java.util.Iterator entryIterator() -> a_
    3911:3911:java.util.Set createEntrySet() -> e
    3926:3926:java.util.Set keySet() -> keySet
    3933:3934:java.util.NavigableSet navigableKeySet() -> navigableKeySet
    3939:3939:java.util.NavigableSet descendingKeySet() -> descendingKeySet
    3946:3946:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    3951:3951:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    3956:3956:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    3961:3961:java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    3966:3966:java.util.SortedMap headMap(java.lang.Object) -> headMap
    3971:3971:java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    3976:3976:java.util.Collection values() -> values
    3981:3981:java.lang.String toString() -> toString
    3793:3793:java.lang.Object delegate() -> b
com.google.common.collect.Maps$DescendingMap$1 -> com.a.a.c.fp:
    com.google.common.collect.Maps$DescendingMap this$0 -> a
    3911:3911:void <init>(com.google.common.collect.Maps$DescendingMap) -> <init>
    3914:3914:java.util.Map map() -> a
    3919:3919:java.util.Iterator iterator() -> iterator
com.google.common.collect.Maps$EntryFunction -> com.a.a.c.fq:
    com.google.common.collect.Maps$EntryFunction KEY -> a
    com.google.common.collect.Maps$EntryFunction VALUE -> b
    com.google.common.collect.Maps$EntryFunction[] $VALUES -> c
    85:85:com.google.common.collect.Maps$EntryFunction[] values() -> values
    85:85:com.google.common.collect.Maps$EntryFunction valueOf(java.lang.String) -> valueOf
    85:85:void <init>(java.lang.String,int) -> <init>
    85:85:void <init>(java.lang.String,int,com.google.common.collect.Maps$1) -> <init>
    85:93:void <clinit>() -> <clinit>
com.google.common.collect.Maps$EntryFunction$1 -> com.a.a.c.fr:
    86:86:void <init>(java.lang.String,int) -> <init>
    90:90:java.lang.Object apply(java.util.Map$Entry) -> a
    86:86:java.lang.Object apply(java.lang.Object) -> a
com.google.common.collect.Maps$EntryFunction$2 -> com.a.a.c.fs:
    93:93:void <init>(java.lang.String,int) -> <init>
    97:97:java.lang.Object apply(java.util.Map$Entry) -> a
    93:93:java.lang.Object apply(java.lang.Object) -> a
com.google.common.collect.Maps$EntrySet -> com.a.a.c.ft:
    3732:3732:void <init>() -> <init>
    java.util.Map map() -> a
    3737:3737:int size() -> size
    3741:3742:void clear() -> clear
    3745:3752:boolean contains(java.lang.Object) -> contains
    3756:3756:boolean isEmpty() -> isEmpty
    3760:3764:boolean remove(java.lang.Object) -> remove
    3769:3772:boolean removeAll(java.util.Collection) -> removeAll
    3778:3788:boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.Maps$ImprovedAbstractMap -> com.a.a.c.fu:
    java.util.Set entrySet -> a
    java.util.Set keySet -> b
    java.util.Collection values -> c
    3308:3308:void <init>() -> <init>
    java.util.Set createEntrySet() -> a
    3319:3320:java.util.Set entrySet() -> entrySet
    3326:3327:java.util.Set keySet() -> keySet
    3331:3331:java.util.Set createKeySet() -> e
    3337:3338:java.util.Collection values() -> values
    3342:3342:java.util.Collection createValues() -> f
com.google.common.collect.Maps$KeySet -> com.a.a.c.fv:
    java.util.Map map -> c
    3484:3486:void <init>(java.util.Map) -> <init>
    3489:3489:java.util.Map map() -> b
    3493:3493:java.util.Iterator iterator() -> iterator
    3497:3497:int size() -> size
    3501:3501:boolean isEmpty() -> isEmpty
    3505:3505:boolean contains(java.lang.Object) -> contains
    3509:3513:boolean remove(java.lang.Object) -> remove
    3517:3518:void clear() -> clear
com.google.common.collect.Maps$NavigableKeySet -> com.a.a.c.fw:
    3575:3576:void <init>(java.util.NavigableMap) -> <init>
    3580:3580:java.util.NavigableMap map() -> a
    3585:3585:java.lang.Object lower(java.lang.Object) -> lower
    3590:3590:java.lang.Object floor(java.lang.Object) -> floor
    3595:3595:java.lang.Object ceiling(java.lang.Object) -> ceiling
    3600:3600:java.lang.Object higher(java.lang.Object) -> higher
    3605:3605:java.lang.Object pollFirst() -> pollFirst
    3610:3610:java.lang.Object pollLast() -> pollLast
    3615:3615:java.util.NavigableSet descendingSet() -> descendingSet
    3620:3620:java.util.Iterator descendingIterator() -> descendingIterator
    3629:3629:java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    3634:3634:java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    3639:3639:java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    3644:3644:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    3649:3649:java.util.SortedSet headSet(java.lang.Object) -> headSet
    3654:3654:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    3572:3572:java.util.SortedMap map() -> c
    3572:3572:java.util.Map map() -> b
com.google.common.collect.Maps$SortedKeySet -> com.a.a.c.fx:
    3533:3534:void <init>(java.util.SortedMap) -> <init>
    3538:3538:java.util.SortedMap map() -> c
    3543:3543:java.util.Comparator comparator() -> comparator
    3548:3548:java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    3553:3553:java.util.SortedSet headSet(java.lang.Object) -> headSet
    3558:3558:java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    3563:3563:java.lang.Object first() -> first
    3568:3568:java.lang.Object last() -> last
    3531:3531:java.util.Map map() -> b
com.google.common.collect.Maps$Values -> com.a.a.c.fy:
    java.util.Map map -> a
    3661:3663:void <init>(java.util.Map) -> <init>
    3666:3666:java.util.Map map() -> a
    3670:3670:java.util.Iterator iterator() -> iterator
    3675:3683:boolean remove(java.lang.Object) -> remove
    3689:3697:boolean removeAll(java.util.Collection) -> removeAll
    3703:3711:boolean retainAll(java.util.Collection) -> retainAll
    3716:3716:int size() -> size
    3720:3720:boolean isEmpty() -> isEmpty
    3724:3724:boolean contains(java.lang.Object) -> contains
    3728:3729:void clear() -> clear
com.google.common.collect.Multimap -> com.a.a.c.fz:
    java.util.Collection get(java.lang.Object) -> b
    java.util.Map asMap() -> b
com.google.common.collect.Multimaps -> com.a.a.c.ga:
    2048:2055:boolean equalsImpl(com.google.common.collect.Multimap,java.lang.Object) -> a
com.google.common.collect.Multiset -> com.a.a.c.gb:
    java.util.Set elementSet() -> a
com.google.common.collect.NaturalOrdering -> com.a.a.c.gc:
    com.google.common.collect.NaturalOrdering INSTANCE -> a
    33:35:int compare(java.lang.Comparable,java.lang.Comparable) -> a
    39:39:com.google.common.collect.Ordering reverse() -> a
    48:48:java.lang.String toString() -> toString
    51:51:void <init>() -> <init>
    26:26:int compare(java.lang.Object,java.lang.Object) -> compare
    30:30:void <clinit>() -> <clinit>
com.google.common.collect.ObjectArrays -> com.a.a.c.gd:
    java.lang.Object[] EMPTY_ARRAY -> a
    61:61:java.lang.Object[] newArray(java.lang.Object[],int) -> a
    112:115:java.lang.Object[] arraysCopyOf(java.lang.Object[],int) -> b
    226:226:java.lang.Object[] checkElementsNotNull(java.lang.Object[]) -> a
    230:233:java.lang.Object[] checkElementsNotNull(java.lang.Object[],int) -> c
    239:242:java.lang.Object checkElementNotNull(java.lang.Object,int) -> a
    37:37:void <clinit>() -> <clinit>
com.google.common.collect.Ordering -> com.a.a.c.ge:
    106:106:com.google.common.collect.Ordering natural() -> b
    124:124:com.google.common.collect.Ordering from(java.util.Comparator) -> a
    237:237:com.google.common.collect.Ordering usingToString() -> c
    321:321:void <init>() -> <init>
    333:333:com.google.common.collect.Ordering reverse() -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
    816:818:java.util.List sortedCopy(java.lang.Iterable) -> a
    842:847:com.google.common.collect.ImmutableList immutableSortedCopy(java.lang.Iterable) -> b
com.google.common.collect.PeekingIterator -> com.a.a.c.gf:
    java.lang.Object peek() -> a
    java.lang.Object next() -> next
com.google.common.collect.Platform -> com.a.a.c.gg:
    48:54:java.lang.Object[] newArray(java.lang.Object[],int) -> a
com.google.common.collect.Range -> com.a.a.c.gh:
    com.google.common.base.Function LOWER_BOUND_FN -> d
    com.google.common.base.Function UPPER_BOUND_FN -> e
    com.google.common.collect.Ordering RANGE_LEX_ORDERING -> a
    com.google.common.collect.Range ALL -> f
    com.google.common.collect.Cut lowerBound -> b
    com.google.common.collect.Cut upperBound -> c
    126:126:com.google.common.base.Function lowerBoundFn() -> a
    153:153:com.google.common.collect.Range create(com.google.common.collect.Cut,com.google.common.collect.Cut) -> a
    203:203:com.google.common.collect.Range openClosed(java.lang.Comparable,java.lang.Comparable) -> a
    217:226:com.google.common.collect.Range range(java.lang.Comparable,com.google.common.collect.BoundType,java.lang.Comparable,com.google.common.collect.BoundType) -> a
    236:236:com.google.common.collect.Range lessThan(java.lang.Comparable) -> a
    246:246:com.google.common.collect.Range atMost(java.lang.Comparable) -> b
    257:263:com.google.common.collect.Range upTo(java.lang.Comparable,com.google.common.collect.BoundType) -> a
    274:274:com.google.common.collect.Range greaterThan(java.lang.Comparable) -> c
    284:284:com.google.common.collect.Range atLeast(java.lang.Comparable) -> d
    295:301:com.google.common.collect.Range downTo(java.lang.Comparable,com.google.common.collect.BoundType) -> b
    315:315:com.google.common.collect.Range all() -> b
    360:367:void <init>(com.google.common.collect.Cut,com.google.common.collect.Cut) -> <init>
    373:373:boolean hasLowerBound() -> c
    383:383:java.lang.Comparable lowerEndpoint() -> d
    394:394:com.google.common.collect.BoundType lowerBoundType() -> e
    401:401:boolean hasUpperBound() -> f
    411:411:java.lang.Comparable upperEndpoint() -> g
    422:422:com.google.common.collect.BoundType upperBoundType() -> h
    435:435:boolean isEmpty() -> i
    444:446:boolean contains(java.lang.Comparable) -> e
    456:456:boolean apply(java.lang.Comparable) -> f
    510:510:boolean encloses(com.google.common.collect.Range) -> a
    539:539:boolean isConnected(com.google.common.collect.Range) -> b
    560:569:com.google.common.collect.Range intersection(com.google.common.collect.Range) -> c
    637:642:boolean equals(java.lang.Object) -> equals
    647:647:int hashCode() -> hashCode
    655:655:java.lang.String toString() -> toString
    659:663:java.lang.String toString(com.google.common.collect.Cut,com.google.common.collect.Cut) -> b
    683:683:int compareOrThrow(java.lang.Comparable,java.lang.Comparable) -> b
    113:113:boolean apply(java.lang.Object) -> a
    117:305:void <clinit>() -> <clinit>
com.google.common.collect.Range$1 -> com.a.a.c.gi:
    117:117:void <init>() -> <init>
    120:120:com.google.common.collect.Cut apply(com.google.common.collect.Range) -> a
    117:117:java.lang.Object apply(java.lang.Object) -> a
com.google.common.collect.Range$2 -> com.a.a.c.gj:
    129:129:void <init>() -> <init>
    132:132:com.google.common.collect.Cut apply(com.google.common.collect.Range) -> a
    129:129:java.lang.Object apply(java.lang.Object) -> a
com.google.common.collect.Range$3 -> com.a.a.c.gk:
    141:141:void <init>() -> <init>
    144:144:int compare(com.google.common.collect.Range,com.google.common.collect.Range) -> a
    141:141:int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.collect.Range$4 -> com.a.a.c.gl:
    int[] $SwitchMap$com$google$common$collect$BoundType -> a
    257:257:void <clinit>() -> <clinit>
com.google.common.collect.RangeMap -> com.a.a.c.gm:
    java.lang.Object get(java.lang.Comparable) -> a
    void put(com.google.common.collect.Range,java.lang.Object) -> a
    java.util.Map asMapOfRanges() -> c
com.google.common.collect.RangeSet -> com.a.a.c.gn:
    boolean encloses(com.google.common.collect.Range) -> c
    java.util.Set asRanges() -> a
    com.google.common.collect.RangeSet complement() -> b
    void add(com.google.common.collect.Range) -> a
com.google.common.collect.RegularImmutableAsList -> com.a.a.c.go:
    com.google.common.collect.ImmutableCollection delegate -> a
    com.google.common.collect.ImmutableList delegateList -> b
    34:37:void <init>(com.google.common.collect.ImmutableCollection,com.google.common.collect.ImmutableList) -> <init>
    40:41:void <init>(com.google.common.collect.ImmutableCollection,java.lang.Object[]) -> <init>
    45:45:com.google.common.collect.ImmutableCollection delegateCollection() -> c
    55:55:com.google.common.collect.UnmodifiableListIterator listIterator(int) -> a
    61:61:int copyIntoArray(java.lang.Object[],int) -> a
    66:66:java.lang.Object get(int) -> get
    28:28:java.util.ListIterator listIterator(int) -> listIterator
com.google.common.collect.RegularImmutableList -> com.a.a.c.gp:
    int offset -> a
    int size -> b
    java.lang.Object[] array -> c
    36:40:void <init>(java.lang.Object[],int,int) -> <init>
    43:44:void <init>(java.lang.Object[]) -> <init>
    48:48:int size() -> size
    52:52:boolean isPartialView() -> e
    57:58:int copyIntoArray(java.lang.Object[],int) -> a
    65:66:java.lang.Object get(int) -> get
    71:79:int indexOf(java.lang.Object) -> indexOf
    84:92:int lastIndexOf(java.lang.Object) -> lastIndexOf
    97:97:com.google.common.collect.ImmutableList subListUnchecked(int,int) -> b
    106:106:com.google.common.collect.UnmodifiableListIterator listIterator(int) -> a
    29:29:java.util.ListIterator listIterator(int) -> listIterator
com.google.common.collect.RegularImmutableSet -> com.a.a.c.gq:
    java.lang.Object[] elements -> b
    java.lang.Object[] table -> a
    int mask -> c
    int hashCode -> d
    38:43:void <init>(java.lang.Object[],int,java.lang.Object[],int) -> <init>
    46:55:boolean contains(java.lang.Object) -> contains
    62:62:int size() -> size
    68:68:com.google.common.collect.UnmodifiableIterator iterator() -> a
    73:74:int copyIntoArray(java.lang.Object[],int) -> a
    79:79:com.google.common.collect.ImmutableList createAsList() -> f
    84:84:boolean isPartialView() -> e
    88:88:int hashCode() -> hashCode
    92:92:boolean isHashCodeFast() -> c_
    27:27:java.util.Iterator iterator() -> iterator
com.google.common.collect.RegularImmutableSortedMap -> com.a.a.c.gr:
    com.google.common.collect.RegularImmutableSortedSet keySet -> a
    com.google.common.collect.ImmutableList valueList -> b
    35:38:void <init>(com.google.common.collect.RegularImmutableSortedSet,com.google.common.collect.ImmutableList) -> <init>
    44:47:void <init>(com.google.common.collect.RegularImmutableSortedSet,com.google.common.collect.ImmutableList,com.google.common.collect.ImmutableSortedMap) -> <init>
    51:51:com.google.common.collect.ImmutableSet createEntrySet() -> c
    86:86:com.google.common.collect.ImmutableSortedSet keySet() -> a
    91:91:com.google.common.collect.ImmutableCollection values() -> f
    96:97:java.lang.Object get(java.lang.Object) -> get
    101:106:com.google.common.collect.ImmutableSortedMap getSubMap(int,int) -> a
    114:114:com.google.common.collect.ImmutableSortedMap headMap(java.lang.Object,boolean) -> a
    119:119:com.google.common.collect.ImmutableSortedMap tailMap(java.lang.Object,boolean) -> b
    124:124:com.google.common.collect.ImmutableSortedMap createDescendingMap() -> g
    29:29:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    29:29:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    29:29:java.util.Collection values() -> values
    29:29:java.util.Set keySet() -> keySet
    29:29:com.google.common.collect.ImmutableSet keySet() -> d
    31:31:com.google.common.collect.ImmutableList access$100(com.google.common.collect.RegularImmutableSortedMap) -> a
com.google.common.collect.RegularImmutableSortedMap$1 -> com.a.a.c.gs:
com.google.common.collect.RegularImmutableSortedMap$EntrySet -> com.a.a.c.gt:
    com.google.common.collect.RegularImmutableSortedMap this$0 -> a
    54:54:void <init>(com.google.common.collect.RegularImmutableSortedMap) -> <init>
    57:57:com.google.common.collect.UnmodifiableIterator iterator() -> a
    62:62:com.google.common.collect.ImmutableList createAsList() -> f
    80:80:com.google.common.collect.ImmutableMap map() -> d
    54:54:java.util.Iterator iterator() -> iterator
    54:54:void <init>(com.google.common.collect.RegularImmutableSortedMap,com.google.common.collect.RegularImmutableSortedMap$1) -> <init>
com.google.common.collect.RegularImmutableSortedMap$EntrySet$1 -> com.a.a.c.gu:
    com.google.common.collect.ImmutableList keyList -> b
    com.google.common.collect.RegularImmutableSortedMap$EntrySet this$1 -> a
    62:64:void <init>(com.google.common.collect.RegularImmutableSortedMap$EntrySet) -> <init>
    68:68:java.util.Map$Entry get(int) -> b
    73:73:com.google.common.collect.ImmutableCollection delegateCollection() -> c
    62:62:java.lang.Object get(int) -> get
com.google.common.collect.RegularImmutableSortedSet -> com.a.a.c.gv:
    com.google.common.collect.ImmutableList elements -> c
    54:57:void <init>(com.google.common.collect.ImmutableList,java.util.Comparator) -> <init>
    60:60:com.google.common.collect.UnmodifiableIterator iterator() -> a
    65:65:com.google.common.collect.UnmodifiableIterator descendingIterator() -> c
    69:69:boolean isEmpty() -> isEmpty
    74:74:int size() -> size
    79:81:boolean contains(java.lang.Object) -> contains
    90:133:boolean containsAll(java.util.Collection) -> containsAll
    137:137:int unsafeBinarySearch(java.lang.Object) -> e
    141:141:boolean isPartialView() -> e
    146:146:int copyIntoArray(java.lang.Object[],int) -> a
    150:181:boolean equals(java.lang.Object) -> equals
    186:186:java.lang.Object first() -> first
    191:191:java.lang.Object last() -> last
    196:197:java.lang.Object lower(java.lang.Object) -> lower
    202:203:java.lang.Object floor(java.lang.Object) -> floor
    208:209:java.lang.Object ceiling(java.lang.Object) -> ceiling
    214:215:java.lang.Object higher(java.lang.Object) -> higher
    220:220:com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> a
    224:224:int headIndex(java.lang.Object,boolean) -> e
    232:232:com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> a
    238:238:com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> b
    242:242:int tailIndex(java.lang.Object,boolean) -> f
    254:254:java.util.Comparator unsafeComparator() -> h
    258:264:com.google.common.collect.ImmutableSortedSet getSubSet(int,int) -> a
    269:279:int indexOf(java.lang.Object) -> a
    283:283:com.google.common.collect.ImmutableList createAsList() -> f
    288:288:com.google.common.collect.ImmutableSortedSet createDescendingSet() -> d
    46:46:java.util.Iterator descendingIterator() -> descendingIterator
    46:46:java.util.Iterator iterator() -> iterator
com.google.common.collect.ReverseNaturalOrdering -> com.a.a.c.gw:
    com.google.common.collect.ReverseNaturalOrdering INSTANCE -> a
    34:39:int compare(java.lang.Comparable,java.lang.Comparable) -> a
    43:43:com.google.common.collect.Ordering reverse() -> a
    86:86:java.lang.String toString() -> toString
    89:89:void <init>() -> <init>
    27:27:int compare(java.lang.Object,java.lang.Object) -> compare
    31:31:void <clinit>() -> <clinit>
com.google.common.collect.ReverseOrdering -> com.a.a.c.gx:
    com.google.common.collect.Ordering forwardOrder -> a
    33:35:void <init>(com.google.common.collect.Ordering) -> <init>
    38:38:int compare(java.lang.Object,java.lang.Object) -> compare
    43:43:com.google.common.collect.Ordering reverse() -> a
    81:81:int hashCode() -> hashCode
    85:92:boolean equals(java.lang.Object) -> equals
    96:96:java.lang.String toString() -> toString
com.google.common.collect.Sets -> com.a.a.c.gy:
    164:164:java.util.HashSet newHashSet() -> a
    201:201:java.util.HashSet newHashSetWithExpectedSize(int) -> a
    218:218:java.util.HashSet newHashSet(java.lang.Iterable) -> a
    237:239:java.util.HashSet newHashSet(java.util.Iterator) -> a
    1340:1347:int hashCodeImpl(java.util.Set) -> a
    1354:1368:boolean equalsImpl(java.util.Set,java.lang.Object) -> a
    1539:1543:boolean removeAllImpl(java.util.Set,java.util.Iterator) -> a
    1547:1561:boolean removeAllImpl(java.util.Set,java.util.Collection) -> a
com.google.common.collect.Sets$ImprovedAbstractSet -> com.a.a.c.gz:
    71:71:void <init>() -> <init>
    74:74:boolean removeAll(java.util.Collection) -> removeAll
    79:79:boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.SingletonImmutableList -> com.a.a.c.ha:
    java.lang.Object element -> a
    39:41:void <init>(java.lang.Object) -> <init>
    45:46:java.lang.Object get(int) -> get
    50:50:int indexOf(java.lang.Object) -> indexOf
    54:54:com.google.common.collect.UnmodifiableIterator iterator() -> a
    58:58:int lastIndexOf(java.lang.Object) -> lastIndexOf
    63:63:int size() -> size
    67:68:com.google.common.collect.ImmutableList subList(int,int) -> a
    72:72:com.google.common.collect.ImmutableList reverse() -> h
    76:76:boolean contains(java.lang.Object) -> contains
    80:87:boolean equals(java.lang.Object) -> equals
    93:93:int hashCode() -> hashCode
    97:98:java.lang.String toString() -> toString
    106:106:boolean isEmpty() -> isEmpty
    110:110:boolean isPartialView() -> e
    115:116:int copyIntoArray(java.lang.Object[],int) -> a
    33:33:java.util.List subList(int,int) -> subList
    33:33:java.util.Iterator iterator() -> iterator
com.google.common.collect.SingletonImmutableSet -> com.a.a.c.hb:
    java.lang.Object element -> a
    int cachedHashCode -> b
    46:48:void <init>(java.lang.Object) -> <init>
    50:54:void <init>(java.lang.Object,int) -> <init>
    58:58:int size() -> size
    62:62:boolean isEmpty() -> isEmpty
    66:66:boolean contains(java.lang.Object) -> contains
    70:70:com.google.common.collect.UnmodifiableIterator iterator() -> a
    74:74:boolean isPartialView() -> e
    79:80:int copyIntoArray(java.lang.Object[],int) -> a
    84:91:boolean equals(java.lang.Object) -> equals
    96:100:int hashCode() -> hashCode
    104:104:boolean isHashCodeFast() -> c_
    108:109:java.lang.String toString() -> toString
    32:32:java.util.Iterator iterator() -> iterator
com.google.common.collect.SortedIterable -> com.a.a.c.hc:
    java.util.Comparator comparator() -> comparator
com.google.common.collect.SortedIterables -> com.a.a.c.hd:
    38:48:boolean hasSameComparator(java.util.Comparator,java.lang.Iterable) -> a
    54:58:java.util.Comparator comparator(java.util.SortedSet) -> a
com.google.common.collect.SortedLists -> com.a.a.c.he:
    205:205:int binarySearch(java.util.List,com.google.common.base.Function,java.lang.Comparable,com.google.common.collect.SortedLists$KeyPresentBehavior,com.google.common.collect.SortedLists$KeyAbsentBehavior) -> a
    228:228:int binarySearch(java.util.List,com.google.common.base.Function,java.lang.Object,java.util.Comparator,com.google.common.collect.SortedLists$KeyPresentBehavior,com.google.common.collect.SortedLists$KeyAbsentBehavior) -> a
    258:282:int binarySearch(java.util.List,java.lang.Object,java.util.Comparator,com.google.common.collect.SortedLists$KeyPresentBehavior,com.google.common.collect.SortedLists$KeyAbsentBehavior) -> a
com.google.common.collect.SortedLists$1 -> com.a.a.c.hf:
com.google.common.collect.SortedLists$KeyAbsentBehavior -> com.a.a.c.hg:
    com.google.common.collect.SortedLists$KeyAbsentBehavior NEXT_LOWER -> a
    com.google.common.collect.SortedLists$KeyAbsentBehavior NEXT_HIGHER -> b
    com.google.common.collect.SortedLists$KeyAbsentBehavior INVERTED_INSERTION_INDEX -> c
    com.google.common.collect.SortedLists$KeyAbsentBehavior[] $VALUES -> d
    139:139:com.google.common.collect.SortedLists$KeyAbsentBehavior[] values() -> values
    139:139:com.google.common.collect.SortedLists$KeyAbsentBehavior valueOf(java.lang.String) -> valueOf
    139:139:void <init>(java.lang.String,int) -> <init>
    int resultIndex(int) -> a
    139:139:void <init>(java.lang.String,int,com.google.common.collect.SortedLists$1) -> <init>
    139:172:void <clinit>() -> <clinit>
com.google.common.collect.SortedLists$KeyAbsentBehavior$1 -> com.a.a.c.hh:
    144:144:void <init>(java.lang.String,int) -> <init>
    147:147:int resultIndex(int) -> a
com.google.common.collect.SortedLists$KeyAbsentBehavior$2 -> com.a.a.c.hi:
    154:154:void <init>(java.lang.String,int) -> <init>
    157:157:int resultIndex(int) -> a
com.google.common.collect.SortedLists$KeyAbsentBehavior$3 -> com.a.a.c.hj:
    172:172:void <init>(java.lang.String,int) -> <init>
    175:175:int resultIndex(int) -> a
com.google.common.collect.SortedLists$KeyPresentBehavior -> com.a.a.c.hk:
    com.google.common.collect.SortedLists$KeyPresentBehavior ANY_PRESENT -> a
    com.google.common.collect.SortedLists$KeyPresentBehavior LAST_PRESENT -> b
    com.google.common.collect.SortedLists$KeyPresentBehavior FIRST_PRESENT -> c
    com.google.common.collect.SortedLists$KeyPresentBehavior FIRST_AFTER -> d
    com.google.common.collect.SortedLists$KeyPresentBehavior LAST_BEFORE -> e
    com.google.common.collect.SortedLists$KeyPresentBehavior[] $VALUES -> f
    48:48:com.google.common.collect.SortedLists$KeyPresentBehavior[] values() -> values
    48:48:com.google.common.collect.SortedLists$KeyPresentBehavior valueOf(java.lang.String) -> valueOf
    48:48:void <init>(java.lang.String,int) -> <init>
    int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int) -> a
    48:48:void <init>(java.lang.String,int,com.google.common.collect.SortedLists$1) -> <init>
    48:124:void <clinit>() -> <clinit>
com.google.common.collect.SortedLists$KeyPresentBehavior$1 -> com.a.a.c.hl:
    53:53:void <init>(java.lang.String,int) -> <init>
    57:57:int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int) -> a
com.google.common.collect.SortedLists$KeyPresentBehavior$2 -> com.a.a.c.hm:
    63:63:void <init>(java.lang.String,int) -> <init>
    69:81:int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int) -> a
com.google.common.collect.SortedLists$KeyPresentBehavior$3 -> com.a.a.c.hn:
    87:87:void <init>(java.lang.String,int) -> <init>
    93:106:int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int) -> a
com.google.common.collect.SortedLists$KeyPresentBehavior$4 -> com.a.a.c.ho:
    113:113:void <init>(java.lang.String,int) -> <init>
    117:117:int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int) -> a
com.google.common.collect.SortedLists$KeyPresentBehavior$5 -> com.a.a.c.hp:
    124:124:void <init>(java.lang.String,int) -> <init>
    128:128:int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int) -> a
com.google.common.collect.TransformedIterator -> com.a.a.c.hq:
    java.util.Iterator backingIterator -> b
    35:37:void <init>(java.util.Iterator) -> <init>
    java.lang.Object transform(java.lang.Object) -> a
    43:43:boolean hasNext() -> hasNext
    48:48:java.lang.Object next() -> next
    53:54:void remove() -> remove
com.google.common.collect.TransformedListIterator -> com.a.a.c.hr:
    35:36:void <init>(java.util.ListIterator) -> <init>
    39:39:java.util.ListIterator backingIterator() -> a
    44:44:boolean hasPrevious() -> hasPrevious
    49:49:java.lang.Object previous() -> previous
    54:54:int nextIndex() -> nextIndex
    59:59:int previousIndex() -> previousIndex
    64:64:void set(java.lang.Object) -> set
    69:69:void add(java.lang.Object) -> add
com.google.common.collect.TreeRangeMap -> com.a.a.c.hs:
    java.util.NavigableMap entriesByLowerBound -> a
    com.google.common.collect.RangeMap EMPTY_SUB_RANGE_MAP -> b
    61:61:com.google.common.collect.TreeRangeMap create() -> a
    64:66:void <init>() -> <init>
    108:109:java.lang.Object get(java.lang.Comparable) -> a
    115:120:java.util.Map$Entry getEntry(java.lang.Comparable) -> b
    126:131:void put(com.google.common.collect.Range,java.lang.Object) -> a
    158:159:void putRangeMapEntry(com.google.common.collect.Cut,com.google.common.collect.Cut,java.lang.Object) -> a
    163:204:void remove(com.google.common.collect.Range) -> a
    208:208:java.util.Map asMapOfRanges() -> c
    591:595:boolean equals(java.lang.Object) -> equals
    600:600:int hashCode() -> hashCode
    605:605:java.lang.String toString() -> toString
    56:56:java.util.NavigableMap access$100(com.google.common.collect.TreeRangeMap) -> a
    262:262:void <clinit>() -> <clinit>
com.google.common.collect.TreeRangeMap$1 -> com.a.a.c.ht:
    263:263:void <init>() -> <init>
    267:267:java.lang.Object get(java.lang.Comparable) -> a
    283:284:void put(com.google.common.collect.Range,java.lang.Object) -> a
    306:306:java.util.Map asMapOfRanges() -> c
com.google.common.collect.TreeRangeMap$AsMapOfRanges -> com.a.a.c.hu:
    com.google.common.collect.TreeRangeMap this$0 -> a
    211:211:void <init>(com.google.common.collect.TreeRangeMap) -> <init>
    215:215:boolean containsKey(java.lang.Object) -> containsKey
    220:227:java.lang.Object get(java.lang.Object) -> get
    232:232:java.util.Set entrySet() -> entrySet
    211:211:void <init>(com.google.common.collect.TreeRangeMap,com.google.common.collect.TreeRangeMap$1) -> <init>
com.google.common.collect.TreeRangeMap$AsMapOfRanges$1 -> com.a.a.c.hv:
    com.google.common.collect.TreeRangeMap$AsMapOfRanges this$1 -> a
    232:232:void <init>(com.google.common.collect.TreeRangeMap$AsMapOfRanges) -> <init>
    237:237:java.util.Iterator iterator() -> iterator
    242:242:int size() -> size
com.google.common.collect.TreeRangeMap$RangeMapEntry -> com.a.a.c.hw:
    com.google.common.collect.Range range -> a
    java.lang.Object value -> b
    74:75:void <init>(com.google.common.collect.Cut,com.google.common.collect.Cut,java.lang.Object) -> <init>
    77:80:void <init>(com.google.common.collect.Range,java.lang.Object) -> <init>
    84:84:com.google.common.collect.Range getKey() -> a
    89:89:java.lang.Object getValue() -> getValue
    93:93:boolean contains(java.lang.Comparable) -> a
    97:97:com.google.common.collect.Cut getLowerBound() -> b
    101:101:com.google.common.collect.Cut getUpperBound() -> c
    68:68:java.lang.Object getKey() -> getKey
com.google.common.collect.TreeRangeSet -> com.a.a.c.hx:
    java.util.NavigableMap rangesByLowerBound -> a
    java.util.Set asRanges -> b
    com.google.common.collect.RangeSet complement -> c
    54:54:com.google.common.collect.TreeRangeSet create() -> c
    66:68:void <init>(java.util.NavigableMap) -> <init>
    74:75:java.util.Set asRanges() -> a
    110:112:boolean encloses(com.google.common.collect.Range) -> c
    136:179:void add(com.google.common.collect.Range) -> a
    183:222:void remove(com.google.common.collect.Range) -> b
    225:230:void replaceRangeWithSameLowerBound(com.google.common.collect.Range) -> d
    236:237:com.google.common.collect.RangeSet complement() -> b
    42:42:boolean equals(java.lang.Object) -> equals
    44:44:void <init>(java.util.NavigableMap,com.google.common.collect.TreeRangeSet$1) -> <init>
com.google.common.collect.TreeRangeSet$1 -> com.a.a.c.hy:
com.google.common.collect.TreeRangeSet$AsRanges -> com.a.a.c.hz:
    com.google.common.collect.TreeRangeSet this$0 -> a
    78:78:void <init>(com.google.common.collect.TreeRangeSet) -> <init>
    81:81:java.util.Collection delegate() -> a
    86:86:int hashCode() -> hashCode
    91:91:boolean equals(java.lang.Object) -> equals
    78:78:java.lang.Object delegate() -> b
com.google.common.collect.TreeRangeSet$Complement -> com.a.a.c.ia:
    com.google.common.collect.TreeRangeSet this$0 -> b
    595:597:void <init>(com.google.common.collect.TreeRangeSet) -> <init>
    601:602:void add(com.google.common.collect.Range) -> a
    606:607:void remove(com.google.common.collect.Range) -> b
    616:616:com.google.common.collect.RangeSet complement() -> b
com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound -> com.a.a.c.ib:
    java.util.NavigableMap positiveRangesByLowerBound -> a
    java.util.NavigableMap positiveRangesByUpperBound -> b
    com.google.common.collect.Range complementLowerBoundWindow -> c
    412:413:void <init>(java.util.NavigableMap) -> <init>
    416:420:void <init>(java.util.NavigableMap,com.google.common.collect.Range) -> <init>
    423:427:java.util.NavigableMap subMap(com.google.common.collect.Range) -> a
    434:434:java.util.NavigableMap subMap(com.google.common.collect.Cut,boolean,com.google.common.collect.Cut,boolean) -> a
    441:441:java.util.NavigableMap headMap(com.google.common.collect.Cut,boolean) -> a
    446:446:java.util.NavigableMap tailMap(com.google.common.collect.Cut,boolean) -> b
    451:451:java.util.Comparator comparator() -> comparator
    466:484:java.util.Iterator entryIterator() -> a
    517:538:java.util.Iterator descendingEntryIterator() -> b
    566:566:int size() -> size
    572:585:com.google.common.collect.Range get(java.lang.Object) -> a
    590:590:boolean containsKey(java.lang.Object) -> containsKey
    399:399:java.lang.Object get(java.lang.Object) -> get
    399:399:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    399:399:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    399:399:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    399:399:com.google.common.collect.Range access$100(com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound) -> a
com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound$1 -> com.a.a.c.ic:
    com.google.common.collect.Cut nextComplementRangeLowerBound -> a
    com.google.common.collect.Cut val$firstComplementRangeLowerBound -> b
    com.google.common.collect.PeekingIterator val$positiveItr -> c
    com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound this$0 -> d
    484:485:void <init>(com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound,com.google.common.collect.Cut,com.google.common.collect.PeekingIterator) -> <init>
    489:502:java.util.Map$Entry computeNext() -> c
    484:484:java.lang.Object computeNext() -> a
com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound$2 -> com.a.a.c.id:
    com.google.common.collect.Cut nextComplementRangeUpperBound -> a
    com.google.common.collect.Cut val$firstComplementRangeUpperBound -> b
    com.google.common.collect.PeekingIterator val$positiveItr -> c
    com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound this$0 -> d
    538:539:void <init>(com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound,com.google.common.collect.Cut,com.google.common.collect.PeekingIterator) -> <init>
    543:559:java.util.Map$Entry computeNext() -> c
    538:538:java.lang.Object computeNext() -> a
com.google.common.collect.TreeRangeSet$RangesByUpperBound -> com.a.a.c.ie:
    java.util.NavigableMap rangesByLowerBound -> a
    com.google.common.collect.Range upperBoundWindow -> b
    251:254:void <init>(java.util.NavigableMap) -> <init>
    257:260:void <init>(java.util.NavigableMap,com.google.common.collect.Range) -> <init>
    263:266:java.util.NavigableMap subMap(com.google.common.collect.Range) -> a
    273:273:java.util.NavigableMap subMap(com.google.common.collect.Cut,boolean,com.google.common.collect.Cut,boolean) -> a
    280:280:java.util.NavigableMap headMap(com.google.common.collect.Cut,boolean) -> a
    285:285:java.util.NavigableMap tailMap(com.google.common.collect.Cut,boolean) -> b
    290:290:java.util.Comparator comparator() -> comparator
    295:295:boolean containsKey(java.lang.Object) -> containsKey
    300:315:com.google.common.collect.Range get(java.lang.Object) -> a
    325:339:java.util.Iterator entryIterator() -> a
    358:369:java.util.Iterator descendingEntryIterator() -> b
    385:388:int size() -> size
    393:393:boolean isEmpty() -> isEmpty
    240:240:java.lang.Object get(java.lang.Object) -> get
    240:240:java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    240:240:java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    240:240:java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    241:241:com.google.common.collect.Range access$000(com.google.common.collect.TreeRangeSet$RangesByUpperBound) -> a
com.google.common.collect.TreeRangeSet$RangesByUpperBound$1 -> com.a.a.c.if:
    java.util.Iterator val$backingItr -> a
    com.google.common.collect.TreeRangeSet$RangesByUpperBound this$0 -> b
    339:339:void <init>(com.google.common.collect.TreeRangeSet$RangesByUpperBound,java.util.Iterator) -> <init>
    342:349:java.util.Map$Entry computeNext() -> c
    339:339:java.lang.Object computeNext() -> a
com.google.common.collect.TreeRangeSet$RangesByUpperBound$2 -> com.a.a.c.ig:
    com.google.common.collect.PeekingIterator val$backingItr -> a
    com.google.common.collect.TreeRangeSet$RangesByUpperBound this$0 -> b
    369:369:void <init>(com.google.common.collect.TreeRangeSet$RangesByUpperBound,com.google.common.collect.PeekingIterator) -> <init>
    372:376:java.util.Map$Entry computeNext() -> c
    369:369:java.lang.Object computeNext() -> a
com.google.common.collect.TreeTraverser -> com.a.a.c.ih:
    54:189:void <init>() -> <init>
com.google.common.collect.UnmodifiableIterator -> com.a.a.c.ii:
    32:32:void <init>() -> <init>
    43:43:void remove() -> remove
com.google.common.collect.UnmodifiableListIterator -> com.a.a.c.ij:
    34:34:void <init>() -> <init>
    43:43:void add(java.lang.Object) -> add
    53:53:void set(java.lang.Object) -> set
com.google.common.collect.UsingToStringOrdering -> com.a.a.c.ik:
    com.google.common.collect.UsingToStringOrdering INSTANCE -> a
    33:33:int compare(java.lang.Object,java.lang.Object) -> compare
    42:42:java.lang.String toString() -> toString
    45:45:void <init>() -> <init>
    30:30:void <clinit>() -> <clinit>
com.google.common.io.ByteStreams -> com.a.a.d.a:
    java.io.OutputStream NULL_OUTPUT_STREAM -> a
    65:77:long copy(java.io.InputStream,java.io.OutputStream) -> a
    114:116:byte[] toByteArray(java.io.InputStream) -> a
    622:623:void readFully(java.io.InputStream,byte[]) -> a
    641:646:void readFully(java.io.InputStream,byte[],int,int) -> a
    726:739:int read(java.io.InputStream,byte[],int,int) -> b
    501:501:void <clinit>() -> <clinit>
com.google.common.io.ByteStreams$1 -> com.a.a.d.b:
    502:502:void <init>() -> <init>
    505:505:void write(int) -> write
    508:509:void write(byte[]) -> write
    512:513:void write(byte[],int,int) -> write
    517:517:java.lang.String toString() -> toString
com.google.common.io.Files -> com.a.a.d.c:
    com.google.common.collect.TreeTraverser FILE_TREE_TRAVERSER -> a
    787:790:java.lang.String getNameWithoutExtension(java.lang.String) -> a
    807:807:void <clinit>() -> <clinit>
com.google.common.io.Files$2 -> com.a.a.d.d:
    807:807:void <init>() -> <init>
    823:823:java.lang.String toString() -> toString
com.google.common.io.LittleEndianDataInputStream -> com.a.a.d.e:
    53:54:void <init>(java.io.InputStream) -> <init>
    61:61:java.lang.String readLine() -> readLine
    66:67:void readFully(byte[]) -> readFully
    71:72:void readFully(byte[],int,int) -> readFully
    76:76:int skipBytes(int) -> skipBytes
    81:86:int readUnsignedByte() -> readUnsignedByte
    100:103:int readUnsignedShort() -> readUnsignedShort
    116:121:int readInt() -> readInt
    134:143:long readLong() -> readLong
    156:156:float readFloat() -> readFloat
    170:170:double readDouble() -> readDouble
    175:175:java.lang.String readUTF() -> readUTF
    188:188:short readShort() -> readShort
    201:201:char readChar() -> readChar
    206:206:byte readByte() -> readByte
    211:211:boolean readBoolean() -> readBoolean
    223:229:byte readAndCheckByte() -> a
com.google.common.primitives.Booleans -> com.a.a.e.a:
    77:77:int compare(boolean,boolean) -> a
com.google.common.primitives.Chars -> com.a.a.e.b:
    119:119:int compare(char,char) -> a
com.google.common.primitives.Ints -> com.a.a.e.c:
    byte[] asciiDigits -> a
    105:111:int saturatedCast(long) -> a
    127:127:int compare(int,int) -> a
    335:335:int fromBytes(byte,byte,byte,byte) -> a
    639:650:void <clinit>() -> <clinit>
com.google.common.primitives.Longs -> com.a.a.e.d:
    94:94:int compare(long,long) -> a
    305:305:long fromBytes(byte,byte,byte,byte,byte,byte,byte,byte) -> a
com.google.common.primitives.Shorts -> com.a.a.e.e:
    126:126:int compare(short,short) -> a
org.antlr.runtime.BaseRecognizer -> org.a.a.a:
    org.antlr.runtime.RecognizerSharedState state -> a
    63:68:void <init>(org.antlr.runtime.RecognizerSharedState) -> <init>
    104:116:java.lang.Object match(org.antlr.runtime.IntStream,int,org.antlr.runtime.BitSet) -> a
    127:127:boolean mismatchIsUnwantedToken(org.antlr.runtime.IntStream,int) -> a
    131:158:boolean mismatchIsMissingToken(org.antlr.runtime.IntStream,org.antlr.runtime.BitSet) -> a
    179:187:void reportError(org.antlr.runtime.RecognitionException) -> a
    192:195:void displayRecognitionError(java.lang.String[],org.antlr.runtime.RecognitionException) -> a
    220:296:java.lang.String getErrorMessage(org.antlr.runtime.RecognitionException,java.lang.String[]) -> a
    307:307:int getNumberOfSyntaxErrors() -> a
    312:315:java.lang.String getErrorHeader(org.antlr.runtime.RecognitionException) -> b
    327:339:java.lang.String getTokenErrorDisplay(org.antlr.runtime.Token) -> a
    344:345:void emitErrorMessage(java.lang.String) -> a
    354:366:void recover(org.antlr.runtime.IntStream,org.antlr.runtime.RecognitionException) -> a
    372:372:void beginResync() -> b
    375:375:void endResync() -> c
    469:469:org.antlr.runtime.BitSet computeErrorRecoverySet() -> d
    525:525:org.antlr.runtime.BitSet computeContextSensitiveRuleFOLLOW() -> e
    533:556:org.antlr.runtime.BitSet combineFollows(boolean) -> a
    591:618:java.lang.Object recoverFromMismatchedToken(org.antlr.runtime.IntStream,int,org.antlr.runtime.BitSet) -> b
    646:646:java.lang.Object getCurrentInputSymbol(org.antlr.runtime.IntStream) -> a
    672:672:java.lang.Object getMissingSymbol(org.antlr.runtime.IntStream,org.antlr.runtime.RecognitionException,int,org.antlr.runtime.BitSet) -> a
    687:693:void consumeUntil(org.antlr.runtime.IntStream,org.antlr.runtime.BitSet) -> b
    697:703:void pushFollow(org.antlr.runtime.BitSet) -> a
    728:744:java.util.List getRuleInvocationStack(java.lang.Throwable,java.lang.String) -> a
    759:759:java.lang.String[] getTokenNames() -> f
    766:766:java.lang.String getGrammarFileName() -> g
    java.lang.String getSourceName() -> h
org.antlr.runtime.BitSet -> org.a.a.b:
    long[] bits -> a
    52:53:void <init>() -> <init>
    56:58:void <init>(long[]) -> <init>
    72:74:void <init>(int) -> <init>
    108:113:org.antlr.runtime.BitSet or(org.antlr.runtime.BitSet) -> a
    137:148:void orInPlace(org.antlr.runtime.BitSet) -> b
    155:159:void setSize(int) -> c
    162:163:long bitMask(int) -> d
    170:177:java.lang.Object clone() -> clone
    197:229:boolean equals(java.lang.Object) -> equals
    233:238:boolean member(int) -> a
    243:247:void remove(int) -> b
    295:295:int wordNumber(int) -> e
    300:300:java.lang.String toString() -> toString
    304:324:java.lang.String toString(java.lang.String[]) -> a
org.antlr.runtime.BufferedTokenStream -> org.a.a.c:
    org.antlr.runtime.TokenSource tokenSource -> a
    java.util.List tokens -> b
    int lastMarker -> c
    int p -> d
    int range -> e
    57:71:void <init>() -> <init>
    57:75:void <init>(org.antlr.runtime.TokenSource) -> <init>
    81:81:int index() -> a
    88:90:int mark() -> b
    100:101:void rewind(int) -> a
    105:106:void rewind() -> c
    114:114:void seek(int) -> b
    117:117:int size() -> d
    128:131:void consume() -> e
    135:138:void sync(int) -> c
    142:149:void fetch(int) -> d
    153:156:org.antlr.runtime.Token get(int) -> e
    174:174:int LA(int) -> f
    177:178:org.antlr.runtime.Token LB(int) -> g
    183:194:org.antlr.runtime.Token LT(int) -> h
    197:197:void setup() -> f
    206:206:java.util.List getTokens() -> g
    245:245:java.lang.String getSourceName() -> h
    250:252:java.lang.String toString() -> toString
    257:266:java.lang.String toString(int,int) -> a
    271:274:java.lang.String toString(org.antlr.runtime.Token,org.antlr.runtime.Token) -> a
    279:288:void fill() -> i
org.antlr.runtime.CharStream -> org.a.a.d:
    java.lang.String substring(int,int) -> a
    int getLine() -> f
    int getCharPositionInLine() -> g
org.antlr.runtime.CommonToken -> org.a.a.e:
    int type -> a
    int line -> b
    int charPositionInLine -> c
    int channel -> d
    org.antlr.runtime.CharStream input -> e
    java.lang.String text -> f
    int index -> g
    int start -> h
    int stop -> i
    35:56:void <init>(int) -> <init>
    35:70:void <init>(int,java.lang.String) -> <init>
    35:84:void <init>(org.antlr.runtime.Token) -> <init>
    88:88:int getType() -> a
    93:94:void setLine(int) -> a
    98:109:java.lang.String getText() -> b
    120:121:void setText(java.lang.String) -> a
    125:125:int getLine() -> c
    130:130:int getCharPositionInLine() -> d
    135:136:void setCharPositionInLine(int) -> b
    140:140:int getChannel() -> e
    145:146:void setChannel(int) -> c
    150:151:void setType(int) -> d
    154:154:int getStartIndex() -> f
    158:159:void setStartIndex(int) -> e
    162:162:int getStopIndex() -> g
    166:167:void setStopIndex(int) -> f
    171:171:int getTokenIndex() -> h
    176:177:void setTokenIndex(int) -> g
    181:181:org.antlr.runtime.CharStream getInputStream() -> i
    191:204:java.lang.String toString() -> toString
org.antlr.runtime.CommonTokenStream -> org.a.a.f:
    int channel -> f
    50:52:void <init>() -> <init>
    50:56:void <init>(org.antlr.runtime.TokenSource) -> <init>
    66:73:void consume() -> e
    77:88:org.antlr.runtime.Token LB(int) -> g
    94:106:org.antlr.runtime.Token LT(int) -> h
    113:118:int skipOffTokenChannels(int) -> i
    122:125:int skipOffTokenChannelsReverse(int) -> j
    136:144:void setup() -> f
org.antlr.runtime.DFA -> org.a.a.g:
    short[] eot -> a
    short[] eof -> b
    char[] min -> c
    char[] max -> d
    short[] accept -> e
    short[] special -> f
    short[][] transition -> g
    int decisionNumber -> h
    org.antlr.runtime.BaseRecognizer recognizer -> i
    41:41:void <init>() -> <init>
    68:149:int predict(org.antlr.runtime.IntStream) -> a
    154:164:void noViableAlt(int,org.antlr.runtime.IntStream) -> a
    168:168:void error(org.antlr.runtime.NoViableAltException) -> a
    173:173:int specialStateTransition(int,org.antlr.runtime.IntStream) -> b
    177:177:java.lang.String getDescription() -> a
    187:201:short[] unpackEncodedString(java.lang.String) -> a
    207:221:char[] unpackEncodedStringToUnsignedChars(java.lang.String) -> b
org.antlr.runtime.EarlyExitException -> org.a.a.h:
    int decisionNumber -> a
    35:35:void <init>() -> <init>
    38:40:void <init>(int,org.antlr.runtime.IntStream) -> <init>
org.antlr.runtime.FailedPredicateException -> org.a.a.i:
    java.lang.String ruleName -> a
    java.lang.String predicateText -> b
    40:40:void <init>() -> <init>
    46:49:void <init>(org.antlr.runtime.IntStream,java.lang.String,java.lang.String) -> <init>
    53:53:java.lang.String toString() -> toString
org.antlr.runtime.IntStream -> org.a.a.j:
    void consume() -> e
    int LA(int) -> f
    int mark() -> b
    int index() -> a
    void rewind(int) -> a
    void rewind() -> c
    void seek(int) -> b
    int size() -> d
    java.lang.String getSourceName() -> h
org.antlr.runtime.MismatchedNotSetException -> org.a.a.k:
    32:32:void <init>() -> <init>
    40:40:java.lang.String toString() -> toString
org.antlr.runtime.MismatchedSetException -> org.a.a.l:
    org.antlr.runtime.BitSet expecting -> a
    34:34:void <init>() -> <init>
    37:39:void <init>(org.antlr.runtime.BitSet,org.antlr.runtime.IntStream) -> <init>
    43:43:java.lang.String toString() -> toString
org.antlr.runtime.MismatchedTokenException -> org.a.a.m:
    int expecting -> a
    32:35:void <init>() -> <init>
    32:40:void <init>(int,org.antlr.runtime.IntStream) -> <init>
    44:44:java.lang.String toString() -> toString
org.antlr.runtime.MismatchedTreeNodeException -> org.a.a.n:
    int expecting -> a
    37:38:void <init>() -> <init>
    41:43:void <init>(int,org.antlr.runtime.tree.TreeNodeStream) -> <init>
    47:47:java.lang.String toString() -> toString
org.antlr.runtime.MissingTokenException -> org.a.a.o:
    java.lang.Object inserted -> b
    36:36:void <init>() -> <init>
    39:41:void <init>(int,org.antlr.runtime.IntStream,java.lang.Object) -> <init>
    44:44:int getMissingType() -> a
    49:55:java.lang.String toString() -> toString
org.antlr.runtime.NoViableAltException -> org.a.a.p:
    java.lang.String grammarDecisionDescription -> a
    int decisionNumber -> b
    int stateNumber -> c
    36:36:void <init>() -> <init>
    43:47:void <init>(java.lang.String,int,int,org.antlr.runtime.IntStream) -> <init>
    51:55:java.lang.String toString() -> toString
org.antlr.runtime.Parser -> org.a.a.q:
    org.antlr.runtime.TokenStream input -> b
    42:44:void <init>(org.antlr.runtime.TokenStream,org.antlr.runtime.RecognizerSharedState) -> <init>
    56:56:java.lang.Object getCurrentInputSymbol(org.antlr.runtime.IntStream) -> a
    66:77:java.lang.Object getMissingSymbol(org.antlr.runtime.IntStream,org.antlr.runtime.RecognitionException,int,org.antlr.runtime.BitSet) -> a
    93:93:java.lang.String getSourceName() -> h
org.antlr.runtime.ParserRuleReturnScope -> org.a.a.r:
    org.antlr.runtime.Token start -> a
    org.antlr.runtime.Token stop -> b
    48:48:void <init>() -> <init>
    56:56:java.lang.Object getTree() -> a
org.antlr.runtime.RecognitionException -> org.a.a.s:
    org.antlr.runtime.IntStream input -> d
    int index -> e
    org.antlr.runtime.Token token -> f
    java.lang.Object node -> g
    int c -> h
    int line -> i
    int charPositionInLine -> j
    boolean approximateLineInfo -> k
    99:100:void <init>() -> <init>
    102:121:void <init>(org.antlr.runtime.IntStream) -> <init>
    124:180:void extractInformationFromTreeNodeStream(org.antlr.runtime.IntStream) -> a
    184:193:int getUnexpectedType() -> b
org.antlr.runtime.RecognizerSharedState -> org.a.a.t:
    org.antlr.runtime.BitSet[] following -> a
    int _fsp -> b
    boolean errorRecovery -> c
    int lastErrorIndex -> d
    boolean failed -> e
    int syntaxErrors -> f
    int backtracking -> g
    int tokenStartCharIndex -> h
    44:121:void <init>() -> <init>
org.antlr.runtime.RuleReturnScope -> org.a.a.u:
    31:31:void <init>() -> <init>
    37:37:java.lang.Object getTree() -> a
org.antlr.runtime.Token -> org.a.a.v:
    org.antlr.runtime.Token INVALID_TOKEN -> j
    org.antlr.runtime.Token SKIP_TOKEN -> k
    java.lang.String getText() -> b
    void setText(java.lang.String) -> a
    int getType() -> a
    void setType(int) -> d
    int getLine() -> c
    int getCharPositionInLine() -> d
    int getChannel() -> e
    int getTokenIndex() -> h
    void setTokenIndex(int) -> g
    org.antlr.runtime.CharStream getInputStream() -> i
    43:48:void <clinit>() -> <clinit>
org.antlr.runtime.TokenSource -> org.a.a.w:
    org.antlr.runtime.Token nextToken() -> a
    java.lang.String getSourceName() -> b
org.antlr.runtime.TokenStream -> org.a.a.x:
    org.antlr.runtime.Token LT(int) -> h
    java.lang.String toString(int,int) -> a
    java.lang.String toString(org.antlr.runtime.Token,org.antlr.runtime.Token) -> a
org.antlr.runtime.UnwantedTokenException -> org.a.a.y:
    33:33:void <init>() -> <init>
    36:37:void <init>(int,org.antlr.runtime.IntStream) -> <init>
    40:40:org.antlr.runtime.Token getUnexpectedToken() -> a
    45:52:java.lang.String toString() -> toString
org.antlr.runtime.misc.FastQueue -> org.a.a.a.a:
    java.util.List data -> a
    int p -> b
    int range -> c
    44:49:void <init>() -> <init>
    52:52:void clear() -> f
    56:63:java.lang.Object remove() -> g
    66:66:void add(java.lang.Object) -> a
    68:68:int size() -> d
    80:88:java.lang.Object elementAt(int) -> c
    94:100:java.lang.String toString() -> toString
org.antlr.runtime.misc.LookaheadStream -> org.a.a.a.b:
    int currentElementIndex -> d
    java.lang.Object prevElement -> e
    java.lang.Object eof -> f
    int lastMarker -> g
    int markDepth -> h
    boolean $assertionsDisabled -> i
    36:58:void <init>() -> <init>
    java.lang.Object nextElement() -> i
    boolean isEOF(java.lang.Object) -> b
    83:91:java.lang.Object remove() -> g
    96:99:void consume() -> e
    106:108:void syncAhead(int) -> d
    112:117:void fill(int) -> e
    121:121:int size() -> d
    124:131:java.lang.Object LT(int) -> g
    134:134:int index() -> a
    137:139:int mark() -> b
    147:151:void rewind(int) -> a
    155:158:void rewind() -> c
    175:186:void seek(int) -> b
    189:206:java.lang.Object LB(int) -> h
    36:36:void <clinit>() -> <clinit>
org.antlr.runtime.tree.BaseTree -> org.a.a.b.a:
    java.util.List children -> a
    42:43:void <init>() -> <init>
    49:50:void <init>(org.antlr.runtime.tree.Tree) -> <init>
    54:57:org.antlr.runtime.tree.Tree getChild(int) -> a
    79:82:int getChildCount() -> a
    95:132:void addChild(org.antlr.runtime.tree.Tree) -> a
    257:257:java.util.List createChildrenList() -> b
    262:262:boolean isNil() -> c
    268:269:void freshenParentAndChildIndexes() -> d
    272:278:void freshenParentAndChildIndexes(int) -> b
    315:315:int getChildIndex() -> e
    319:319:void setChildIndex(int) -> c
    324:324:org.antlr.runtime.tree.Tree getParent() -> f
    329:329:void setParent(org.antlr.runtime.tree.Tree) -> b
    390:390:int getLine() -> g
    395:395:int getCharPositionInLine() -> h
org.antlr.runtime.tree.BaseTreeAdaptor -> org.a.a.b.b:
    int uniqueNodeID -> a
    38:44:void <init>() -> <init>
    48:48:java.lang.Object nil() -> a
    66:68:java.lang.Object errorNode(org.antlr.runtime.TokenStream,org.antlr.runtime.Token,org.antlr.runtime.Token,org.antlr.runtime.RecognitionException) -> a
    73:73:boolean isNil(java.lang.Object) -> a
    78:78:java.lang.Object dupTree(java.lang.Object) -> b
    86:99:java.lang.Object dupTree(java.lang.Object,java.lang.Object) -> a
    111:114:void addChild(java.lang.Object,java.lang.Object) -> b
    145:163:java.lang.Object becomeRoot(java.lang.Object,java.lang.Object) -> c
    170:182:java.lang.Object rulePostProcessing(java.lang.Object) -> c
    192:196:java.lang.Object create(int,org.antlr.runtime.Token) -> a
    201:206:java.lang.Object create(int,org.antlr.runtime.Token,java.lang.String) -> a
    211:213:java.lang.Object create(int,java.lang.String) -> a
    218:218:int getType(java.lang.Object) -> d
    228:228:java.lang.String getText(java.lang.Object) -> e
    238:238:java.lang.Object getChild(java.lang.Object,int) -> a
    253:253:int getChildCount(java.lang.Object) -> f
    org.antlr.runtime.Token createToken(int,java.lang.String) -> b
    org.antlr.runtime.Token createToken(org.antlr.runtime.Token) -> a
org.antlr.runtime.tree.CommonErrorNode -> org.a.a.b.c:
    org.antlr.runtime.IntStream input -> b
    org.antlr.runtime.Token start -> c
    org.antlr.runtime.Token stop -> d
    org.antlr.runtime.RecognitionException trappedException -> e
    41:57:void <init>(org.antlr.runtime.TokenStream,org.antlr.runtime.Token,org.antlr.runtime.Token,org.antlr.runtime.RecognitionException) -> <init>
    61:61:boolean isNil() -> c
    66:66:int getType() -> i
    72:88:java.lang.String getText() -> j
    93:110:java.lang.String toString() -> toString
org.antlr.runtime.tree.CommonTree -> org.a.a.b.d:
    org.antlr.runtime.Token token -> f
    int startIndex -> g
    int stopIndex -> h
    org.antlr.runtime.tree.CommonTree parent -> i
    int childIndex -> j
    45:53:void <init>() -> <init>
    45:60:void <init>(org.antlr.runtime.tree.CommonTree) -> <init>
    45:64:void <init>(org.antlr.runtime.Token) -> <init>
    67:67:org.antlr.runtime.Token getToken() -> k
    72:72:org.antlr.runtime.tree.Tree dupNode() -> l
    77:77:boolean isNil() -> c
    82:85:int getType() -> i
    90:93:java.lang.String getText() -> j
    98:104:int getLine() -> g
    109:115:int getCharPositionInLine() -> h
    120:123:int getTokenStartIndex() -> m
    128:129:void setTokenStartIndex(int) -> d
    133:136:int getTokenStopIndex() -> n
    141:142:void setTokenStopIndex(int) -> e
    169:169:int getChildIndex() -> e
    174:174:org.antlr.runtime.tree.Tree getParent() -> f
    179:180:void setParent(org.antlr.runtime.tree.Tree) -> b
    184:185:void setChildIndex(int) -> c
    189:198:java.lang.String toString() -> toString
org.antlr.runtime.tree.CommonTreeAdaptor -> org.a.a.b.e:
    43:43:void <init>() -> <init>
    52:53:java.lang.Object dupNode(java.lang.Object) -> g
    58:58:java.lang.Object create(org.antlr.runtime.Token) -> b
    71:71:org.antlr.runtime.Token createToken(int,java.lang.String) -> b
    90:90:org.antlr.runtime.Token createToken(org.antlr.runtime.Token) -> a
    100:107:void setTokenBoundaries(java.lang.Object,org.antlr.runtime.Token,org.antlr.runtime.Token) -> a
    111:112:int getTokenStartIndex(java.lang.Object) -> h
    117:118:int getTokenStopIndex(java.lang.Object) -> i
    123:124:java.lang.String getText(java.lang.Object) -> e
    129:130:int getType(java.lang.Object) -> d
    139:142:org.antlr.runtime.Token getToken(java.lang.Object) -> j
    147:148:java.lang.Object getChild(java.lang.Object,int) -> a
    153:154:int getChildCount(java.lang.Object) -> f
    159:160:java.lang.Object getParent(java.lang.Object) -> k
    165:166:void setParent(java.lang.Object,java.lang.Object) -> d
    170:171:int getChildIndex(java.lang.Object) -> l
    176:177:void setChildIndex(java.lang.Object,int) -> b
org.antlr.runtime.tree.CommonTreeNodeStream -> org.a.a.b.f:
    java.lang.Object root -> j
    org.antlr.runtime.TokenStream tokens -> k
    org.antlr.runtime.tree.TreeAdaptor adaptor -> l
    org.antlr.runtime.tree.TreeIterator it -> m
    boolean hasNilRoot -> n
    int level -> o
    java.lang.Object previousLocationElement -> p
    73:74:void <init>(java.lang.Object) -> <init>
    56:80:void <init>(org.antlr.runtime.tree.TreeAdaptor,java.lang.Object) -> <init>
    97:110:java.lang.Object nextElement() -> i
    115:120:java.lang.Object remove() -> g
    124:124:boolean isEOF(java.lang.Object) -> b
    133:133:java.lang.String getSourceName() -> h
    136:136:org.antlr.runtime.TokenStream getTokenStream() -> j
    138:138:void setTokenStream(org.antlr.runtime.TokenStream) -> a
    141:141:org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor() -> k
    151:151:int LA(int) -> f
    182:198:java.lang.Object getKnownPositionElement(boolean) -> a
    203:212:boolean hasPositionInformation(java.lang.Object) -> c
    228:228:java.lang.String toString(java.lang.Object,java.lang.Object) -> a
org.antlr.runtime.tree.PositionTrackingStream -> org.a.a.b.g:
    java.lang.Object getKnownPositionElement(boolean) -> a
org.antlr.runtime.tree.RewriteCardinalityException -> org.a.a.b.h:
    java.lang.String elementDescription -> a
    37:39:void <init>(java.lang.String) -> <init>
    43:46:java.lang.String getMessage() -> getMessage
org.antlr.runtime.tree.RewriteEmptyStreamException -> org.a.a.b.i:
    33:34:void <init>(java.lang.String) -> <init>
org.antlr.runtime.tree.RewriteRuleElementStream -> org.a.a.b.j:
    int cursor -> a
    java.lang.Object singleElement -> b
    java.util.List elements -> c
    boolean dirty -> d
    java.lang.String elementDescription -> e
    org.antlr.runtime.tree.TreeAdaptor adaptor -> f
    50:80:void <init>(org.antlr.runtime.tree.TreeAdaptor,java.lang.String) -> <init>
    88:90:void <init>(org.antlr.runtime.tree.TreeAdaptor,java.lang.String,java.lang.Object) -> <init>
    108:110:void reset() -> a
    114:130:void add(java.lang.Object) -> a
    138:146:java.lang.Object nextTree() -> b
    156:175:java.lang.Object _next() -> c
    java.lang.Object dup(java.lang.Object) -> b
    189:189:java.lang.Object toTree(java.lang.Object) -> c
    193:193:boolean hasNext() -> d
    198:205:int size() -> e
org.antlr.runtime.tree.RewriteRuleSubtreeStream -> org.a.a.b.k:
    35:36:void <init>(org.antlr.runtime.tree.TreeAdaptor,java.lang.String) -> <init>
    43:44:void <init>(org.antlr.runtime.tree.TreeAdaptor,java.lang.String,java.lang.Object) -> <init>
    87:87:java.lang.Object dup(java.lang.Object) -> b
org.antlr.runtime.tree.RewriteRuleTokenStream -> org.a.a.b.l:
    37:38:void <init>(org.antlr.runtime.tree.TreeAdaptor,java.lang.String) -> <init>
    45:46:void <init>(org.antlr.runtime.tree.TreeAdaptor,java.lang.String,java.lang.Object) -> <init>
    58:59:java.lang.Object nextNode() -> f
    71:71:java.lang.Object toTree(java.lang.Object) -> c
    76:76:java.lang.Object dup(java.lang.Object) -> b
org.antlr.runtime.tree.Tree -> org.a.a.b.m:
    org.antlr.runtime.tree.Tree INVALID_NODE -> k
    org.antlr.runtime.tree.Tree getChild(int) -> a
    int getChildCount() -> a
    org.antlr.runtime.tree.Tree getParent() -> f
    void setParent(org.antlr.runtime.tree.Tree) -> b
    int getChildIndex() -> e
    void setChildIndex(int) -> c
    void addChild(org.antlr.runtime.tree.Tree) -> a
    boolean isNil() -> c
    int getTokenStartIndex() -> m
    void setTokenStartIndex(int) -> d
    int getTokenStopIndex() -> n
    void setTokenStopIndex(int) -> e
    org.antlr.runtime.tree.Tree dupNode() -> l
    int getType() -> i
    java.lang.String getText() -> j
    int getLine() -> g
    int getCharPositionInLine() -> h
    45:45:void <clinit>() -> <clinit>
org.antlr.runtime.tree.TreeAdaptor -> org.a.a.b.n:
    java.lang.Object create(org.antlr.runtime.Token) -> b
    java.lang.Object dupNode(java.lang.Object) -> g
    java.lang.Object dupTree(java.lang.Object) -> b
    java.lang.Object nil() -> a
    java.lang.Object errorNode(org.antlr.runtime.TokenStream,org.antlr.runtime.Token,org.antlr.runtime.Token,org.antlr.runtime.RecognitionException) -> a
    boolean isNil(java.lang.Object) -> a
    void addChild(java.lang.Object,java.lang.Object) -> b
    java.lang.Object becomeRoot(java.lang.Object,java.lang.Object) -> c
    java.lang.Object rulePostProcessing(java.lang.Object) -> c
    java.lang.Object create(int,org.antlr.runtime.Token) -> a
    java.lang.Object create(int,org.antlr.runtime.Token,java.lang.String) -> a
    java.lang.Object create(int,java.lang.String) -> a
    int getType(java.lang.Object) -> d
    java.lang.String getText(java.lang.Object) -> e
    org.antlr.runtime.Token getToken(java.lang.Object) -> j
    void setTokenBoundaries(java.lang.Object,org.antlr.runtime.Token,org.antlr.runtime.Token) -> a
    int getTokenStartIndex(java.lang.Object) -> h
    int getTokenStopIndex(java.lang.Object) -> i
    java.lang.Object getChild(java.lang.Object,int) -> a
    int getChildCount(java.lang.Object) -> f
    java.lang.Object getParent(java.lang.Object) -> k
    void setParent(java.lang.Object,java.lang.Object) -> d
    int getChildIndex(java.lang.Object) -> l
    void setChildIndex(java.lang.Object,int) -> b
org.antlr.runtime.tree.TreeIterator -> org.a.a.b.o:
    org.antlr.runtime.tree.TreeAdaptor adaptor -> a
    java.lang.Object root -> b
    java.lang.Object tree -> c
    boolean firstTime -> d
    java.lang.Object up -> e
    java.lang.Object down -> f
    java.lang.Object eof -> g
    org.antlr.runtime.misc.FastQueue nodes -> h
    44:68:void <init>(org.antlr.runtime.tree.TreeAdaptor,java.lang.Object) -> <init>
    78:82:boolean hasNext() -> hasNext
    87:129:java.lang.Object next() -> next
    133:133:void remove() -> remove
org.antlr.runtime.tree.TreeNodeStream -> org.a.a.b.p:
    java.lang.Object LT(int) -> g
    org.antlr.runtime.TokenStream getTokenStream() -> j
    org.antlr.runtime.tree.TreeAdaptor getTreeAdaptor() -> k
    java.lang.String toString(java.lang.Object,java.lang.Object) -> a
org.antlr.runtime.tree.TreeParser -> org.a.a.b.q:
    java.lang.String dotdot -> b
    java.lang.String doubleEtc -> c
    java.util.regex.Pattern dotdotPattern -> d
    java.util.regex.Pattern doubleEtcPattern -> e
    org.antlr.runtime.tree.TreeNodeStream input -> f
    57:59:void <init>(org.antlr.runtime.tree.TreeNodeStream,org.antlr.runtime.RecognizerSharedState) -> <init>
    71:72:void setTreeNodeStream(org.antlr.runtime.tree.TreeNodeStream) -> a
    80:80:java.lang.String getSourceName() -> h
    85:85:java.lang.Object getCurrentInputSymbol(org.antlr.runtime.IntStream) -> a
    94:97:java.lang.Object getMissingSymbol(org.antlr.runtime.IntStream,org.antlr.runtime.RecognitionException,int,org.antlr.runtime.BitSet) -> a
    141:141:java.lang.Object recoverFromMismatchedToken(org.antlr.runtime.IntStream,int,org.antlr.runtime.BitSet) -> b
    150:150:java.lang.String getErrorHeader(org.antlr.runtime.RecognitionException) -> b
    159:167:java.lang.String getErrorMessage(org.antlr.runtime.RecognitionException,java.lang.String[]) -> a
    44:47:void <clinit>() -> <clinit>
org.antlr.runtime.tree.TreeRuleReturnScope -> org.a.a.b.r:
    java.lang.Object start -> a
    39:39:void <init>() -> <init>
org.apache.commons.io.FileExistsException -> org.b.a.a.a:
    39:40:void <init>() -> <init>
    48:49:void <init>(java.lang.String) -> <init>
org.apache.commons.io.FileUtils -> org.b.a.a.b:
    java.math.BigInteger ONE_KB_BI -> a
    java.math.BigInteger ONE_MB_BI -> b
    java.math.BigInteger ONE_GB_BI -> c
    java.math.BigInteger ONE_TB_BI -> d
    java.math.BigInteger ONE_PB_BI -> e
    java.math.BigInteger ONE_EB_BI -> f
    java.math.BigInteger ONE_ZB -> g
    java.math.BigInteger ONE_YB -> h
    java.io.File[] EMPTY_FILE_ARRAY -> i
    java.nio.charset.Charset UTF8 -> j
    1038:1039:void copyFile(java.io.File,java.io.File) -> a
    1067:1092:void copyFile(java.io.File,java.io.File,boolean) -> a
    1129:1163:void doCopyFile(java.io.File,java.io.File,boolean) -> b
    1530:1543:void deleteDirectory(java.io.File) -> a
    1561:1574:boolean deleteQuietly(java.io.File) -> b
    1635:1662:void cleanDirectory(java.io.File) -> c
    2269:2282:void forceDelete(java.io.File) -> d
    2812:2839:void moveFile(java.io.File,java.io.File) -> b
    2921:2938:boolean isSymlink(java.io.File) -> e
    95:180:void <clinit>() -> <clinit>
org.apache.commons.io.FilenameUtils -> org.b.a.a.c:
    java.lang.String EXTENSION_SEPARATOR_STR -> a
    char SYSTEM_SEPARATOR -> b
    char OTHER_SEPARATOR -> c
    138:138:boolean isSystemWindows() -> a
    689:694:int indexOfLastSeparator(java.lang.String) -> a
    711:716:int indexOfExtension(java.lang.String) -> b
    996:1003:java.lang.String getExtension(java.lang.String) -> c
    95:122:void <clinit>() -> <clinit>
org.apache.commons.io.IOUtils -> org.b.a.a.d:
    char DIR_SEPARATOR -> a
    java.lang.String LINE_SEPARATOR -> b
    246:247:void closeQuietly(java.io.InputStream) -> a
    274:275:void closeQuietly(java.io.OutputStream) -> a
    302:308:void closeQuietly(java.io.Closeable) -> a
    461:463:byte[] toByteArray(java.io.InputStream) -> b
    1744:1748:int copy(java.io.InputStream,java.io.OutputStream) -> a
    1769:1769:long copyLarge(java.io.InputStream,java.io.OutputStream) -> b
    1790:1796:long copyLarge(java.io.InputStream,java.io.OutputStream,byte[]) -> a
    101:122:void <clinit>() -> <clinit>
org.apache.commons.io.input.CountingInputStream -> org.b.a.a.a.a:
    long count -> a
    42:43:void <init>(java.io.InputStream) -> <init>
    58:60:long skip(long) -> skip
    71:74:void afterRead(int) -> a
    88:92:int getCount() -> a
    124:124:long getByteCount() -> b
org.apache.commons.io.input.ProxyInputStream -> org.b.a.a.a.b:
    45:47:void <init>(java.io.InputStream) -> <init>
    57:63:int read() -> read
    76:82:int read(byte[]) -> read
    97:103:int read(byte[],int,int) -> read
    116:119:long skip(long) -> skip
    131:134:int available() -> available
    145:149:void close() -> close
    157:158:void mark(int) -> mark
    167:171:void reset() -> reset
    179:179:boolean markSupported() -> markSupported
    201:201:void beforeRead(int) -> b
    221:221:void afterRead(int) -> a
    233:233:void handleIOException(java.io.IOException) -> a
org.apache.commons.io.output.ByteArrayOutputStream -> org.b.a.a.b.a:
    byte[] EMPTY_BYTE_ARRAY -> a
    java.util.List buffers -> b
    int currentBufferIndex -> c
    int filledBufferSum -> d
    byte[] currentBuffer -> e
    int count -> f
    75:76:void <init>() -> <init>
    60:93:void <init>(int) -> <init>
    102:125:void needNewBuffer(int) -> a
    135:159:void write(byte[],int,int) -> write
    167:174:void write(int) -> write
    223:223:void close() -> close
    318:333:byte[] toByteArray() -> a
    343:343:java.lang.String toString() -> toString
    57:57:void <clinit>() -> <clinit>
org.apache.commons.io.output.StringBuilderWriter -> org.b.a.a.b.b:
    java.lang.StringBuilder builder -> a
    41:43:void <init>() -> <init>
    50:52:void <init>(int) -> <init>
    71:72:java.io.Writer append(char) -> append
    83:84:java.io.Writer append(java.lang.CharSequence) -> append
    97:98:java.io.Writer append(java.lang.CharSequence,int,int) -> append
    106:106:void close() -> close
    113:113:void flush() -> flush
    123:126:void write(java.lang.String) -> write
    137:140:void write(char[],int,int) -> write
    158:158:java.lang.String toString() -> toString
    34:34:java.lang.Appendable append(char) -> append
    34:34:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    34:34:java.lang.Appendable append(java.lang.CharSequence) -> append
org.apache.commons.lang3.ArrayUtils -> org.b.a.b.a:
    java.lang.Object[] EMPTY_OBJECT_ARRAY -> a
    java.lang.Class[] EMPTY_CLASS_ARRAY -> b
    java.lang.String[] EMPTY_STRING_ARRAY -> c
    long[] EMPTY_LONG_ARRAY -> d
    java.lang.Long[] EMPTY_LONG_OBJECT_ARRAY -> e
    int[] EMPTY_INT_ARRAY -> f
    java.lang.Integer[] EMPTY_INTEGER_OBJECT_ARRAY -> g
    short[] EMPTY_SHORT_ARRAY -> h
    java.lang.Short[] EMPTY_SHORT_OBJECT_ARRAY -> i
    byte[] EMPTY_BYTE_ARRAY -> j
    java.lang.Byte[] EMPTY_BYTE_OBJECT_ARRAY -> k
    double[] EMPTY_DOUBLE_ARRAY -> l
    java.lang.Double[] EMPTY_DOUBLE_OBJECT_ARRAY -> m
    float[] EMPTY_FLOAT_ARRAY -> n
    java.lang.Float[] EMPTY_FLOAT_OBJECT_ARRAY -> o
    boolean[] EMPTY_BOOLEAN_ARRAY -> p
    java.lang.Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY -> q
    char[] EMPTY_CHAR_ARRAY -> r
    java.lang.Character[] EMPTY_CHARACTER_OBJECT_ARRAY -> s
    325:328:java.lang.Object[] clone(java.lang.Object[]) -> a
    1384:1387:int getLength(java.lang.Object) -> a
    4890:4890:boolean isEmpty(char[]) -> a
    51:123:void <clinit>() -> <clinit>
org.apache.commons.lang3.CharSequenceUtils -> org.b.a.b.b:
    137:137:int indexOf(java.lang.CharSequence,java.lang.CharSequence,int) -> a
org.apache.commons.lang3.StringEscapeUtils -> org.b.a.b.c:
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_JAVA -> a
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_ECMASCRIPT -> b
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_JSON -> c
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_XML -> d
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_XML10 -> e
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_XML11 -> f
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_HTML3 -> g
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_HTML4 -> h
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_CSV -> i
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_JAVA -> j
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_ECMASCRIPT -> k
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_JSON -> l
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_HTML3 -> m
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_HTML4 -> n
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_XML -> o
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_CSV -> p
    528:528:java.lang.String unescapeJava(java.lang.String) -> a
    57:385:void <clinit>() -> <clinit>
org.apache.commons.lang3.StringEscapeUtils$CsvEscaper -> org.b.a.b.d:
    java.lang.String CSV_QUOTE_STR -> b
    char[] CSV_SEARCH_CHARS -> c
    253:253:void <init>() -> <init>
    264:275:int translate(java.lang.CharSequence,int,java.io.Writer) -> a
    257:258:void <clinit>() -> <clinit>
org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper -> org.b.a.b.e:
    java.lang.String CSV_QUOTE_STR -> b
    char[] CSV_SEARCH_CHARS -> c
    387:387:void <init>() -> <init>
    398:416:int translate(java.lang.CharSequence,int,java.io.Writer) -> a
    391:392:void <clinit>() -> <clinit>
org.apache.commons.lang3.StringUtils -> org.b.a.b.f:
    210:210:boolean isEmpty(java.lang.CharSequence) -> a
    2153:2179:boolean containsAny(java.lang.CharSequence,char[]) -> a
    2449:2475:boolean containsNone(java.lang.CharSequence,char[]) -> b
    5406:5406:java.lang.String replace(java.lang.String,java.lang.String,java.lang.String) -> a
    5466:5466:java.lang.String replace(java.lang.String,java.lang.String,java.lang.String,int) -> a
    5501:5528:java.lang.String replace(java.lang.String,java.lang.String,java.lang.String,int,boolean) -> a
    6857:6866:int countMatches(java.lang.CharSequence,java.lang.CharSequence) -> a
org.apache.commons.lang3.text.translate.AggregateTranslator -> org.b.a.b.a.a.a:
    org.apache.commons.lang3.text.translate.CharSequenceTranslator[] translators -> b
    43:45:void <init>(org.apache.commons.lang3.text.translate.CharSequenceTranslator[]) -> <init>
    54:60:int translate(java.lang.CharSequence,int,java.io.Writer) -> a
org.apache.commons.lang3.text.translate.CharSequenceTranslator -> org.b.a.b.a.a.b:
    char[] HEX_DIGITS -> a
    35:35:void <init>() -> <init>
    int translate(java.lang.CharSequence,int,java.io.Writer) -> a
    59:68:java.lang.String translate(java.lang.CharSequence) -> a
    81:112:void translate(java.lang.CharSequence,java.io.Writer) -> a
    122:125:org.apache.commons.lang3.text.translate.CharSequenceTranslator with(org.apache.commons.lang3.text.translate.CharSequenceTranslator[]) -> a
    136:136:java.lang.String hex(int) -> a
    37:37:void <clinit>() -> <clinit>
org.apache.commons.lang3.text.translate.CodePointTranslator -> org.b.a.b.a.a.c:
    32:32:void <init>() -> <init>
    40:42:int translate(java.lang.CharSequence,int,java.io.Writer) -> a
    boolean translate(int,java.io.Writer) -> a
org.apache.commons.lang3.text.translate.EntityArrays -> org.b.a.b.a.a.d:
    java.lang.String[][] ISO8859_1_ESCAPE -> a
    java.lang.String[][] ISO8859_1_UNESCAPE -> b
    java.lang.String[][] HTML40_EXTENDED_ESCAPE -> c
    java.lang.String[][] HTML40_EXTENDED_UNESCAPE -> d
    java.lang.String[][] BASIC_ESCAPE -> e
    java.lang.String[][] BASIC_UNESCAPE -> f
    java.lang.String[][] APOS_ESCAPE -> g
    java.lang.String[][] APOS_UNESCAPE -> h
    java.lang.String[][] JAVA_CTRL_CHARS_ESCAPE -> i
    java.lang.String[][] JAVA_CTRL_CHARS_UNESCAPE -> j
    38:38:java.lang.String[][] ISO8859_1_ESCAPE() -> a
    145:145:java.lang.String[][] ISO8859_1_UNESCAPE() -> b
    157:157:java.lang.String[][] HTML40_EXTENDED_ESCAPE() -> c
    362:362:java.lang.String[][] HTML40_EXTENDED_UNESCAPE() -> d
    374:374:java.lang.String[][] BASIC_ESCAPE() -> e
    389:389:java.lang.String[][] BASIC_UNESCAPE() -> f
    399:399:java.lang.String[][] APOS_ESCAPE() -> g
    411:411:java.lang.String[][] APOS_UNESCAPE() -> h
    423:423:java.lang.String[][] JAVA_CTRL_CHARS_ESCAPE() -> i
    439:439:java.lang.String[][] JAVA_CTRL_CHARS_UNESCAPE() -> j
    450:455:java.lang.String[][] invert(java.lang.String[][]) -> a
    41:442:void <clinit>() -> <clinit>
org.apache.commons.lang3.text.translate.JavaUnicodeEscaper -> org.b.a.b.a.a.e:
    83:83:org.apache.commons.lang3.text.translate.JavaUnicodeEscaper outsideOf(int,int) -> a
    101:102:void <init>(int,int,boolean) -> <init>
    113:114:java.lang.String toUtf16Escape(int) -> b
org.apache.commons.lang3.text.translate.LookupTranslator -> org.b.a.b.a.a.f:
    java.util.HashMap lookupMap -> b
    java.util.HashSet prefixSet -> c
    int shortest -> d
    int longest -> e
    49:69:void <init>(java.lang.CharSequence[][]) -> <init>
    77:93:int translate(java.lang.CharSequence,int,java.io.Writer) -> a
org.apache.commons.lang3.text.translate.NumericEntityEscaper -> org.b.a.b.a.a.g:
    int below -> b
    int above -> c
    boolean between -> d
    47:51:void <init>(int,int,boolean) -> <init>
    57:58:void <init>() -> <init>
    88:88:org.apache.commons.lang3.text.translate.NumericEntityEscaper between(int,int) -> a
    107:120:boolean translate(int,java.io.Writer) -> a
org.apache.commons.lang3.text.translate.NumericEntityUnescaper -> org.b.a.b.a.a.h:
    java.util.EnumSet options -> b
    59:65:void <init>(org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION[]) -> <init>
    74:74:boolean isSet(org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION) -> a
    82:139:int translate(java.lang.CharSequence,int,java.io.Writer) -> a
org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION -> org.b.a.b.a.a.i:
    org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION semiColonRequired -> a
    org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION semiColonOptional -> b
    org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION errorIfNoSemiColon -> c
    org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION[] $VALUES -> d
    38:38:org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION[] values() -> values
    38:38:org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION valueOf(java.lang.String) -> valueOf
    38:38:void <init>(java.lang.String,int) -> <init>
    38:38:void <clinit>() -> <clinit>
org.apache.commons.lang3.text.translate.OctalUnescaper -> org.b.a.b.a.a.j:
    36:36:void <init>() -> <init>
    43:63:int translate(java.lang.CharSequence,int,java.io.Writer) -> a
    72:72:boolean isOctalDigit(char) -> a
    81:81:boolean isZeroToThree(char) -> b
org.apache.commons.lang3.text.translate.UnicodeEscaper -> org.b.a.b.a.a.k:
    int below -> b
    int above -> c
    boolean between -> d
    54:58:void <init>(int,int,boolean) -> <init>
    107:127:boolean translate(int,java.io.Writer) -> a
    140:140:java.lang.String toUtf16Escape(int) -> b
org.apache.commons.lang3.text.translate.UnicodeUnescaper -> org.b.a.b.a.a.l:
    33:33:void <init>() -> <init>
    40:66:int translate(java.lang.CharSequence,int,java.io.Writer) -> a
org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover -> org.b.a.b.a.a.m:
    30:30:void <init>() -> <init>
    37:42:boolean translate(int,java.io.Writer) -> a
org.jf.baksmali.Adaptors.AnnotationFormatter -> org.c.a.a.a:
    46:55:void writeTo(org.jf.util.IndentingWriter,java.util.Collection,java.lang.String) -> a
    59:68:void writeTo(org.jf.util.IndentingWriter,org.jf.dexlib2.iface.Annotation,java.lang.String) -> a
org.jf.baksmali.Adaptors.BlankMethodItem -> org.c.a.a.b:
    36:37:void <init>(int) -> <init>
    40:40:double getSortOrder() -> a
    46:46:boolean writeTo(org.jf.util.IndentingWriter) -> a
org.jf.baksmali.Adaptors.CatchMethodItem -> org.c.a.a.c:
    java.lang.String exceptionType -> a
    org.jf.baksmali.Adaptors.LabelMethodItem tryStartLabel -> b
    org.jf.baksmali.Adaptors.LabelMethodItem tryEndLabel -> c
    org.jf.baksmali.Adaptors.LabelMethodItem handlerLabel -> d
    48:62:void <init>(org.jf.baksmali.BaksmaliOptions,org.jf.baksmali.Adaptors.MethodDefinition$LabelCache,int,java.lang.String,int,int,int) -> <init>
    78:78:double getSortOrder() -> a
    83:95:boolean writeTo(org.jf.util.IndentingWriter) -> a
org.jf.baksmali.Adaptors.ClassDefinition -> org.c.a.a.d:
    org.jf.baksmali.BaksmaliOptions options -> a
    org.jf.dexlib2.iface.ClassDef classDef -> b
    java.util.HashSet fieldsSetInStaticConstructor -> c
    54:58:void <init>(org.jf.baksmali.BaksmaliOptions,org.jf.dexlib2.iface.ClassDef) -> <init>
    66:100:java.util.HashSet findFieldsSetInStaticConstructor(org.jf.dexlib2.iface.ClassDef) -> a
    104:113:void writeTo(org.jf.util.IndentingWriter) -> a
    116:120:void writeClass(org.jf.util.IndentingWriter) -> b
    123:127:void writeAccessFlags(org.jf.util.IndentingWriter) -> c
    130:136:void writeSuper(org.jf.util.IndentingWriter) -> d
    139:145:void writeSourceFile(org.jf.util.IndentingWriter) -> e
    148:159:void writeInterfaces(org.jf.util.IndentingWriter) -> f
    162:174:void writeAnnotations(org.jf.util.IndentingWriter) -> g
    177:208:java.util.Set writeStaticFields(org.jf.util.IndentingWriter) -> h
    212:246:void writeInstanceFields(org.jf.util.IndentingWriter,java.util.Set) -> a
    249:284:java.util.Set writeDirectMethods(org.jf.util.IndentingWriter) -> i
    288:329:void writeVirtualMethods(org.jf.util.IndentingWriter,java.util.Set) -> b
org.jf.baksmali.Adaptors.ClassDefinition$1 -> org.c.a.a.e:
    int[] $SwitchMap$org$jf$dexlib2$Opcode -> a
    73:73:void <clinit>() -> <clinit>
org.jf.baksmali.Adaptors.CommentMethodItem -> org.c.a.a.f:
    java.lang.String comment -> a
    double sortOrder -> b
    41:44:void <init>(java.lang.String,int,double) -> <init>
    47:47:double getSortOrder() -> a
    51:53:boolean writeTo(org.jf.util.IndentingWriter) -> a
org.jf.baksmali.Adaptors.CommentedOutMethodItem -> org.c.a.a.g:
    org.jf.baksmali.Adaptors.MethodItem commentedOutMethodItem -> a
    39:41:void <init>(org.jf.baksmali.Adaptors.MethodItem) -> <init>
    44:44:double getSortOrder() -> a
    48:50:boolean writeTo(org.jf.util.IndentingWriter) -> a
org.jf.baksmali.Adaptors.CommentingIndentingWriter -> org.c.a.a.h:
    41:42:void <init>(java.io.Writer) -> <init>
    45:47:void writeIndent() -> a
org.jf.baksmali.Adaptors.Debug.BeginEpilogueMethodItem -> org.c.a.a.a.a:
    40:41:void <init>(int,int) -> <init>
    45:46:boolean writeTo(org.jf.util.IndentingWriter) -> a
org.jf.baksmali.Adaptors.Debug.DebugMethodItem -> org.c.a.a.a.b:
    int sortOrder -> a
    44:46:void <init>(int,int) -> <init>
    48:48:double getSortOrder() -> a
    51:68:org.jf.baksmali.Adaptors.Debug.DebugMethodItem build(org.jf.baksmali.Adaptors.RegisterFormatter,org.jf.dexlib2.iface.debug.DebugItem) -> a
org.jf.baksmali.Adaptors.Debug.EndLocalMethodItem -> org.c.a.a.a.c:
    org.jf.dexlib2.iface.debug.EndLocal endLocal -> a
    org.jf.baksmali.Adaptors.RegisterFormatter registerFormatter -> b
    47:50:void <init>(int,int,org.jf.baksmali.Adaptors.RegisterFormatter,org.jf.dexlib2.iface.debug.EndLocal) -> <init>
    54:64:boolean writeTo(org.jf.util.IndentingWriter) -> a
org.jf.baksmali.Adaptors.Debug.EndPrologueMethodItem -> org.c.a.a.a.d:
    40:41:void <init>(int,int) -> <init>
    45:46:boolean writeTo(org.jf.util.IndentingWriter) -> a
org.jf.baksmali.Adaptors.Debug.LineNumberMethodItem -> org.c.a.a.a.e:
    int lineNumber -> a
    44:46:void <init>(int,int,org.jf.dexlib2.iface.debug.LineNumber) -> <init>
    50:52:boolean writeTo(org.jf.util.IndentingWriter) -> a
org.jf.baksmali.Adaptors.Debug.LocalFormatter -> org.c.a.a.a.f:
    57:72:void writeLocal(org.jf.util.IndentingWriter,java.lang.String,java.lang.String,java.lang.String) -> a
org.jf.baksmali.Adaptors.Debug.RestartLocalMethodItem -> org.c.a.a.a.g:
    org.jf.dexlib2.iface.debug.RestartLocal restartLocal -> a
    org.jf.baksmali.Adaptors.RegisterFormatter registerFormatter -> b
    47:50:void <init>(int,int,org.jf.baksmali.Adaptors.RegisterFormatter,org.jf.dexlib2.iface.debug.RestartLocal) -> <init>
    54:64:boolean writeTo(org.jf.util.IndentingWriter) -> a
org.jf.baksmali.Adaptors.Debug.SetSourceFileMethodItem -> org.c.a.a.a.h:
    java.lang.String sourceFile -> a
    46:48:void <init>(int,int,org.jf.dexlib2.iface.debug.SetSourceFile) -> <init>
    52:59:boolean writeTo(org.jf.util.IndentingWriter) -> a
org.jf.baksmali.Adaptors.Debug.StartLocalMethodItem -> org.c.a.a.a.i:
    org.jf.dexlib2.iface.debug.StartLocal startLocal -> a
    org.jf.baksmali.Adaptors.RegisterFormatter registerFormatter -> b
    47:50:void <init>(int,int,org.jf.baksmali.Adaptors.RegisterFormatter,org.jf.dexlib2.iface.debug.StartLocal) -> <init>
    54:65:boolean writeTo(org.jf.util.IndentingWriter) -> a
org.jf.baksmali.Adaptors.EncodedValue.AnnotationEncodedValueAdaptor -> org.c.a.a.b.a:
    45:51:void writeTo(org.jf.util.IndentingWriter,org.jf.dexlib2.iface.value.AnnotationEncodedValue,java.lang.String) -> a
    56:64:void writeElementsTo(org.jf.util.IndentingWriter,java.util.Collection,java.lang.String) -> a
org.jf.baksmali.Adaptors.EncodedValue.ArrayEncodedValueAdaptor -> org.c.a.a.b.b:
    44:64:void writeTo(org.jf.util.IndentingWriter,org.jf.dexlib2.iface.value.ArrayEncodedValue,java.lang.String) -> a
org.jf.baksmali.Adaptors.EncodedValue.EncodedValueAdaptor -> org.c.a.a.b.c:
    46:111:void writeTo(org.jf.util.IndentingWriter,org.jf.dexlib2.iface.value.EncodedValue,java.lang.String) -> a
org.jf.baksmali.Adaptors.EndTryLabelMethodItem -> org.c.a.a.i:
    int endTryAddress -> a
    39:41:void <init>(org.jf.baksmali.BaksmaliOptions,int,int) -> <init>
    45:45:double getSortOrder() -> a
    49:49:int getLabelAddress() -> b
org.jf.baksmali.Adaptors.FieldDefinition -> org.c.a.a.j:
    46:93:void writeTo(org.jf.baksmali.BaksmaliOptions,org.jf.util.IndentingWriter,org.jf.dexlib2.iface.Field,boolean) -> a
    96:100:void writeAccessFlags(org.jf.util.IndentingWriter,int) -> a
org.jf.baksmali.Adaptors.Format.ArrayDataMethodItem -> org.c.a.a.c.a:
    41:42:void <init>(org.jf.baksmali.Adaptors.MethodDefinition,int,org.jf.dexlib2.iface.instruction.formats.ArrayPayload) -> <init>
    45:79:boolean writeTo(org.jf.util.IndentingWriter) -> a
org.jf.baksmali.Adaptors.Format.InstructionMethodItem -> org.c.a.a.c.b:
    org.jf.baksmali.Adaptors.MethodDefinition methodDef -> a
    org.jf.dexlib2.iface.instruction.Instruction instruction -> b
    boolean $assertionsDisabled -> c
    59:62:void <init>(org.jf.baksmali.Adaptors.MethodDefinition,int,org.jf.dexlib2.iface.instruction.Instruction) -> <init>
    66:66:double getSortOrder() -> a
    70:79:boolean isAllowedOdex(org.jf.dexlib2.Opcode) -> a
    84:87:java.lang.String writeInvalidItemIndex(org.jf.dexlib2.dexbacked.DexBackedDexFile$InvalidItemIndex,int,org.jf.util.IndentingWriter) -> a
    92:402:boolean writeTo(org.jf.util.IndentingWriter) -> a
    406:407:void writeOpcode(org.jf.util.IndentingWriter) -> b
    412:412:void writeTargetLabel(org.jf.util.IndentingWriter) -> c
    416:417:void writeRegister(org.jf.util.IndentingWriter,int) -> a
    420:421:void writeFirstRegister(org.jf.util.IndentingWriter) -> d
    424:425:void writeSecondRegister(org.jf.util.IndentingWriter) -> e
    428:429:void writeThirdRegister(org.jf.util.IndentingWriter) -> f
    432:474:void writeInvokeRegisters(org.jf.util.IndentingWriter) -> g
    477:486:void writeInvokeRangeRegisters(org.jf.util.IndentingWriter) -> h
    489:490:void writeLiteral(org.jf.util.IndentingWriter) -> i
    493:494:void writeCommentIfLikelyFloat(org.jf.util.IndentingWriter) -> j
    497:517:void writeCommentIfLikelyFloat(org.jf.util.IndentingWriter,int) -> b
    520:521:void writeCommentIfLikelyDouble(org.jf.util.IndentingWriter) -> k
    524:542:void writeCommentIfLikelyDouble(org.jf.util.IndentingWriter,long) -> a
    545:545:boolean writeCommentIfResourceId(org.jf.util.IndentingWriter) -> l
    549:556:boolean writeCommentIfResourceId(org.jf.util.IndentingWriter,int) -> c
    560:562:void writeFieldOffset(org.jf.util.IndentingWriter) -> m
    565:567:void writeInlineIndex(org.jf.util.IndentingWriter) -> n
    570:572:void writeVtableIndex(org.jf.util.IndentingWriter) -> o
    54:54:void <clinit>() -> <clinit>
org.jf.baksmali.Adaptors.Format.InstructionMethodItem$1 -> org.c.a.a.c.c:
    int[] $SwitchMap$org$jf$dexlib2$Opcode -> a
    int[] $SwitchMap$org$jf$dexlib2$Format -> b
    156:200:void <clinit>() -> <clinit>
org.jf.baksmali.Adaptors.Format.InstructionMethodItemFactory -> org.c.a.a.c.d:
    46:64:org.jf.baksmali.Adaptors.Format.InstructionMethodItem makeInstructionFormatMethodItem(org.jf.baksmali.Adaptors.MethodDefinition,int,org.jf.dexlib2.iface.instruction.Instruction) -> a
org.jf.baksmali.Adaptors.Format.InstructionMethodItemFactory$1 -> org.c.a.a.c.e:
    int[] $SwitchMap$org$jf$dexlib2$Format -> a
    56:56:void <clinit>() -> <clinit>
org.jf.baksmali.Adaptors.Format.OffsetInstructionFormatMethodItem -> org.c.a.a.c.f:
    org.jf.baksmali.Adaptors.LabelMethodItem label -> d
    boolean $assertionsDisabled -> e
    46:50:void <init>(org.jf.baksmali.BaksmaliOptions,org.jf.baksmali.Adaptors.MethodDefinition,int,org.jf.dexlib2.iface.instruction.OffsetInstruction) -> <init>
    54:55:void writeTargetLabel(org.jf.util.IndentingWriter) -> c
    62:83:java.lang.String getLabelPrefix() -> b
    41:41:void <clinit>() -> <clinit>
org.jf.baksmali.Adaptors.Format.OffsetInstructionFormatMethodItem$1 -> org.c.a.a.c.g:
    int[] $SwitchMap$org$jf$dexlib2$Format -> a
    63:63:void <clinit>() -> <clinit>
org.jf.baksmali.Adaptors.Format.PackedSwitchMethodItem -> org.c.a.a.c.h:
    java.util.List targets -> d
    int firstKey -> e
    boolean commentedOut -> g
    51:81:void <init>(org.jf.baksmali.Adaptors.MethodDefinition,int,org.jf.dexlib2.iface.instruction.formats.PackedSwitchPayload) -> <init>
    85:101:boolean writeTo(org.jf.util.IndentingWriter) -> a
org.jf.baksmali.Adaptors.Format.PackedSwitchMethodItem$1 -> org.c.a.a.c.i:
org.jf.baksmali.Adaptors.Format.PackedSwitchMethodItem$PackedSwitchLabelTarget -> org.c.a.a.c.j:
    org.jf.baksmali.Adaptors.LabelMethodItem target -> a
    110:112:void <init>(org.jf.baksmali.Adaptors.LabelMethodItem) -> <init>
    114:115:void writeTargetTo(org.jf.util.IndentingWriter) -> a
org.jf.baksmali.Adaptors.Format.PackedSwitchMethodItem$PackedSwitchOffsetTarget -> org.c.a.a.c.k:
    int target -> a
    120:122:void <init>(int) -> <init>
    124:128:void writeTargetTo(org.jf.util.IndentingWriter) -> a
org.jf.baksmali.Adaptors.Format.PackedSwitchMethodItem$PackedSwitchTarget -> org.c.a.a.c.l:
    104:104:void <init>() -> <init>
    void writeTargetTo(org.jf.util.IndentingWriter) -> a
    104:104:void <init>(org.jf.baksmali.Adaptors.Format.PackedSwitchMethodItem$1) -> <init>
org.jf.baksmali.Adaptors.Format.SparseSwitchMethodItem -> org.c.a.a.c.m:
    java.util.List targets -> d
    boolean commentedOut -> e
    50:69:void <init>(org.jf.baksmali.Adaptors.MethodDefinition,int,org.jf.dexlib2.iface.instruction.formats.SparseSwitchPayload) -> <init>
    73:88:boolean writeTo(org.jf.util.IndentingWriter) -> a
org.jf.baksmali.Adaptors.Format.SparseSwitchMethodItem$SparseSwitchLabelTarget -> org.c.a.a.c.n:
    org.jf.baksmali.Adaptors.LabelMethodItem target -> a
    103:105:void <init>(int,org.jf.baksmali.Adaptors.LabelMethodItem) -> <init>
    108:109:void writeTargetTo(org.jf.util.IndentingWriter) -> a
org.jf.baksmali.Adaptors.Format.SparseSwitchMethodItem$SparseSwitchOffsetTarget -> org.c.a.a.c.o:
    int target -> a
    115:117:void <init>(int,int) -> <init>
    120:124:void writeTargetTo(org.jf.util.IndentingWriter) -> a
org.jf.baksmali.Adaptors.Format.SparseSwitchMethodItem$SparseSwitchTarget -> org.c.a.a.c.p:
    int key -> a
    93:95:void <init>(int) -> <init>
    96:96:int getKey() -> a
    void writeTargetTo(org.jf.util.IndentingWriter) -> a
org.jf.baksmali.Adaptors.Format.UnresolvedOdexInstructionMethodItem -> org.c.a.a.c.q:
    41:42:void <init>(org.jf.baksmali.Adaptors.MethodDefinition,int,org.jf.dexlib2.analysis.UnresolvedOdexInstruction) -> <init>
    45:46:boolean writeTo(org.jf.util.IndentingWriter) -> a
    50:53:void writeThrowTo(org.jf.util.IndentingWriter) -> p
org.jf.baksmali.Adaptors.LabelMethodItem -> org.c.a.a.k:
    org.jf.baksmali.BaksmaliOptions options -> a
    java.lang.String labelPrefix -> b
    int labelSequence -> c
    43:46:void <init>(org.jf.baksmali.BaksmaliOptions,int,java.lang.String) -> <init>
    49:49:double getSortOrder() -> a
    53:60:int compareTo(org.jf.baksmali.Adaptors.MethodItem) -> a
    65:65:int hashCode() -> hashCode
    69:72:boolean equals(java.lang.Object) -> equals
    77:84:boolean writeTo(org.jf.util.IndentingWriter) -> a
    88:88:java.lang.String getLabelPrefix() -> c
    92:92:int getLabelAddress() -> b
    100:101:void setLabelSequence(int) -> a
    37:37:int compareTo(java.lang.Object) -> compareTo
org.jf.baksmali.Adaptors.MethodDefinition -> org.c.a.a.l:
    org.jf.baksmali.Adaptors.ClassDefinition classDef -> a
    org.jf.dexlib2.iface.Method method -> b
    org.jf.dexlib2.iface.MethodImplementation methodImpl -> c
    com.google.common.collect.ImmutableList instructions -> d
    java.util.List effectiveInstructions -> e
    com.google.common.collect.ImmutableList methodParameters -> f
    org.jf.baksmali.Adaptors.RegisterFormatter registerFormatter -> g
    org.jf.baksmali.Adaptors.MethodDefinition$LabelCache labelCache -> h
    org.jf.util.SparseIntArray packedSwitchMap -> i
    org.jf.util.SparseIntArray sparseSwitchMap -> j
    org.jf.dexlib2.util.InstructionOffsetMap instructionOffsetMap -> k
    77:163:void <init>(org.jf.baksmali.Adaptors.ClassDefinition,org.jf.dexlib2.iface.Method,org.jf.dexlib2.iface.MethodImplementation) -> <init>
    167:190:void writeEmptyMethodTo(org.jf.util.IndentingWriter,org.jf.dexlib2.iface.Method,org.jf.baksmali.BaksmaliOptions) -> a
    193:246:void writeTo(org.jf.util.IndentingWriter) -> a
    251:273:org.jf.dexlib2.iface.instruction.Instruction findSwitchPayload(int,org.jf.dexlib2.Opcode) -> a
    280:302:int findPayloadOffset(int,org.jf.dexlib2.Opcode) -> b
    308:312:void writeAccessFlags(org.jf.util.IndentingWriter,int) -> a
    317:352:void writeParameters(org.jf.util.IndentingWriter,org.jf.dexlib2.iface.Method,java.util.List,org.jf.baksmali.BaksmaliOptions) -> a
    355:355:org.jf.baksmali.Adaptors.MethodDefinition$LabelCache getLabelCache() -> a
    359:359:int getPackedSwitchBaseAddress(int) -> a
    363:363:int getSparseSwitchBaseAddress(int) -> b
    367:391:java.util.List getMethodItems() -> b
    395:400:boolean needsAnalyzed() -> c
    404:461:void addInstructionMethodItems(java.util.List) -> a
    464:526:void addAnalyzedInstructionMethodItems(java.util.List) -> b
    529:574:void addTries(java.util.List) -> c
    577:580:void addDebugInfo(java.util.List) -> d
    583:597:void setLabelSequentialNumbers() -> d
org.jf.baksmali.Adaptors.MethodDefinition$1 -> org.c.a.a.m:
    org.jf.baksmali.Adaptors.MethodDefinition this$0 -> a
    419:419:void <init>(org.jf.baksmali.Adaptors.MethodDefinition,int) -> <init>
    423:423:double getSortOrder() -> a
    428:430:boolean writeTo(org.jf.util.IndentingWriter) -> a
org.jf.baksmali.Adaptors.MethodDefinition$2 -> org.c.a.a.n:
    org.jf.baksmali.Adaptors.MethodDefinition this$0 -> a
    498:498:void <init>(org.jf.baksmali.Adaptors.MethodDefinition,int) -> <init>
    502:502:double getSortOrder() -> a
    507:509:boolean writeTo(org.jf.util.IndentingWriter) -> a
org.jf.baksmali.Adaptors.MethodDefinition$InvalidSwitchPayload -> org.c.a.a.o:
    int payloadOffset -> a
    632:634:void <init>(int) -> <init>
org.jf.baksmali.Adaptors.MethodDefinition$LabelCache -> org.c.a.a.p:
    java.util.HashMap labels -> a
    608:611:void <init>() -> <init>
    614:619:org.jf.baksmali.Adaptors.LabelMethodItem internLabel(org.jf.baksmali.Adaptors.LabelMethodItem) -> a
    624:624:java.util.Collection getLabels() -> a
org.jf.baksmali.Adaptors.MethodItem -> org.c.a.a.q:
    int codeAddress -> f
    38:40:void <init>(int) -> <init>
    43:43:int getCodeAddress() -> d
    double getSortOrder() -> a
    50:55:int compareTo(org.jf.baksmali.Adaptors.MethodItem) -> a
    boolean writeTo(org.jf.util.IndentingWriter) -> a
    35:35:int compareTo(java.lang.Object) -> compareTo
org.jf.baksmali.Adaptors.PostInstructionRegisterInfoMethodItem -> org.c.a.a.r:
    org.jf.baksmali.Adaptors.RegisterFormatter registerFormatter -> a
    org.jf.dexlib2.analysis.AnalyzedInstruction analyzedInstruction -> b
    47:50:void <init>(org.jf.baksmali.Adaptors.RegisterFormatter,org.jf.dexlib2.analysis.AnalyzedInstruction,int) -> <init>
    54:54:double getSortOrder() -> a
    59:73:boolean writeTo(org.jf.util.IndentingWriter) -> a
    77:83:void addDestRegs(java.util.BitSet,int) -> a
    86:100:boolean writeRegisterInfo(org.jf.util.IndentingWriter,java.util.BitSet) -> a
org.jf.baksmali.Adaptors.PreInstructionRegisterInfoMethodItem -> org.c.a.a.s:
    int registerInfo -> a
    org.jf.dexlib2.analysis.MethodAnalyzer methodAnalyzer -> b
    org.jf.baksmali.Adaptors.RegisterFormatter registerFormatter -> c
    org.jf.dexlib2.analysis.AnalyzedInstruction analyzedInstruction -> d
    53:58:void <init>(int,org.jf.dexlib2.analysis.MethodAnalyzer,org.jf.baksmali.Adaptors.RegisterFormatter,org.jf.dexlib2.analysis.AnalyzedInstruction,int) -> <init>
    62:62:double getSortOrder() -> a
    67:104:boolean writeTo(org.jf.util.IndentingWriter) -> a
    108:145:void addArgsRegs(java.util.BitSet) -> a
    148:167:void addMergeRegs(java.util.BitSet,int) -> a
    170:172:void addParamRegs(java.util.BitSet,int) -> b
    175:203:void writeFullMerge(org.jf.util.IndentingWriter,int) -> a
    207:242:boolean writeRegisterInfo(org.jf.util.IndentingWriter,java.util.BitSet,java.util.BitSet) -> a
org.jf.baksmali.Adaptors.ReferenceFormatter -> org.c.a.a.t:
    41:44:void writeStringReference(org.jf.util.IndentingWriter,java.lang.String) -> a
    48:62:void writeReference(org.jf.util.IndentingWriter,int,org.jf.dexlib2.iface.reference.Reference) -> a
org.jf.baksmali.Adaptors.RegisterFormatter -> org.c.a.a.u:
    org.jf.baksmali.BaksmaliOptions options -> a
    int registerCount -> b
    int parameterRegisterCount -> c
    boolean $assertionsDisabled -> d
    45:49:void <init>(org.jf.baksmali.BaksmaliOptions,int,int) -> <init>
    61:78:void writeRegisterRange(org.jf.util.IndentingWriter,int,int) -> a
    89:98:void writeTo(org.jf.util.IndentingWriter,int) -> a
    40:40:void <clinit>() -> <clinit>
org.jf.baksmali.Adaptors.SyntheticAccessCommentMethodItem -> org.c.a.a.v:
    org.jf.dexlib2.util.SyntheticAccessorResolver$AccessedMember accessedMember -> a
    42:44:void <init>(org.jf.dexlib2.util.SyntheticAccessorResolver$AccessedMember,int) -> <init>
    48:48:double getSortOrder() -> a
    52:119:boolean writeTo(org.jf.util.IndentingWriter) -> a
org.jf.baksmali.Baksmali -> org.c.a.a:
    46:46:void <init>() -> <init>
    48:48:boolean disassembleDexFile(org.jf.dexlib2.iface.DexFile,java.io.File,int,org.jf.baksmali.BaksmaliOptions) -> a
    58:100:boolean disassembleDexFile(org.jf.dexlib2.iface.DexFile,java.io.File,int,org.jf.baksmali.BaksmaliOptions,java.util.List) -> a
    112:171:boolean disassembleClass(org.jf.dexlib2.iface.ClassDef,org.jf.util.ClassFileNameHandler,org.jf.baksmali.BaksmaliOptions) -> b
    46:46:boolean access$000(org.jf.dexlib2.iface.ClassDef,org.jf.util.ClassFileNameHandler,org.jf.baksmali.BaksmaliOptions) -> a
org.jf.baksmali.Baksmali$1 -> org.c.a.b:
    org.jf.dexlib2.iface.ClassDef val$classDef -> a
    org.jf.util.ClassFileNameHandler val$fileNameHandler -> b
    org.jf.baksmali.BaksmaliOptions val$options -> c
    74:74:void <init>(org.jf.dexlib2.iface.ClassDef,org.jf.util.ClassFileNameHandler,org.jf.baksmali.BaksmaliOptions) -> <init>
    76:76:java.lang.Boolean call() -> a
    74:74:java.lang.Object call() -> call
org.jf.baksmali.BaksmaliOptions -> org.c.a.c:
    int apiLevel -> a
    boolean parameterRegisters -> b
    boolean localsDirective -> c
    boolean sequentialLabels -> d
    boolean debugInfo -> e
    boolean codeOffsets -> f
    boolean accessorComments -> g
    boolean allowOdex -> h
    boolean deodex -> i
    boolean implicitReferences -> j
    boolean normalizeVirtualMethods -> k
    int registerInfo -> l
    java.util.Map resourceIds -> m
    org.jf.dexlib2.analysis.InlineMethodResolver inlineResolver -> n
    org.jf.dexlib2.analysis.ClassPath classPath -> o
    org.jf.dexlib2.util.SyntheticAccessorResolver syntheticAccessorResolver -> p
    49:77:void <init>() -> <init>
org.jf.baksmali.Main -> org.c.a.d:
    java.lang.String VERSION -> a
    65:66:void <init>() -> <init>
    113:124:java.lang.String loadVersion() -> a
    52:52:void <clinit>() -> <clinit>
org.jf.baksmali.Renderers.BooleanRenderer -> org.c.a.b.a:
    37:42:void writeTo(org.jf.util.IndentingWriter,boolean) -> a
org.jf.baksmali.Renderers.ByteRenderer -> org.c.a.b.b:
    37:46:void writeTo(org.jf.util.IndentingWriter,byte) -> a
org.jf.baksmali.Renderers.CharRenderer -> org.c.a.b.c:
    38:41:void writeTo(org.jf.util.IndentingWriter,char) -> a
org.jf.baksmali.Renderers.DoubleRenderer -> org.c.a.b.d:
    37:38:void writeTo(org.jf.util.IndentingWriter,double) -> a
org.jf.baksmali.Renderers.FloatRenderer -> org.c.a.b.e:
    37:39:void writeTo(org.jf.util.IndentingWriter,float) -> a
org.jf.baksmali.Renderers.IntegerRenderer -> org.c.a.b.f:
    37:44:void writeTo(org.jf.util.IndentingWriter,int) -> a
org.jf.baksmali.Renderers.LongRenderer -> org.c.a.b.g:
    37:46:void writeTo(org.jf.util.IndentingWriter,long) -> a
    49:62:void writeSignedIntOrLongTo(org.jf.util.IndentingWriter,long) -> b
org.jf.baksmali.Renderers.ShortRenderer -> org.c.a.b.h:
    37:46:void writeTo(org.jf.util.IndentingWriter,short) -> a
org.jf.dexlib2.AccessFlags -> org.c.b.a:
    org.jf.dexlib2.AccessFlags PUBLIC -> a
    org.jf.dexlib2.AccessFlags PRIVATE -> b
    org.jf.dexlib2.AccessFlags PROTECTED -> c
    org.jf.dexlib2.AccessFlags STATIC -> d
    org.jf.dexlib2.AccessFlags FINAL -> e
    org.jf.dexlib2.AccessFlags SYNCHRONIZED -> f
    org.jf.dexlib2.AccessFlags VOLATILE -> g
    org.jf.dexlib2.AccessFlags BRIDGE -> h
    org.jf.dexlib2.AccessFlags TRANSIENT -> i
    org.jf.dexlib2.AccessFlags VARARGS -> j
    org.jf.dexlib2.AccessFlags NATIVE -> k
    org.jf.dexlib2.AccessFlags INTERFACE -> l
    org.jf.dexlib2.AccessFlags ABSTRACT -> m
    org.jf.dexlib2.AccessFlags STRICTFP -> n
    org.jf.dexlib2.AccessFlags SYNTHETIC -> o
    org.jf.dexlib2.AccessFlags ANNOTATION -> p
    org.jf.dexlib2.AccessFlags ENUM -> q
    org.jf.dexlib2.AccessFlags CONSTRUCTOR -> r
    org.jf.dexlib2.AccessFlags DECLARED_SYNCHRONIZED -> s
    int value -> t
    java.lang.String accessFlagName -> u
    boolean validForClass -> v
    boolean validForMethod -> w
    boolean validForField -> x
    org.jf.dexlib2.AccessFlags[] allFlags -> y
    java.util.HashMap accessFlagsByName -> z
    org.jf.dexlib2.AccessFlags[] $VALUES -> A
    36:36:org.jf.dexlib2.AccessFlags[] values() -> values
    36:36:org.jf.dexlib2.AccessFlags valueOf(java.lang.String) -> valueOf
    79:85:void <init>(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean) -> <init>
    88:88:boolean isSet(int) -> a
    92:106:org.jf.dexlib2.AccessFlags[] getAccessFlagsForClass(int) -> b
    131:145:org.jf.dexlib2.AccessFlags[] getAccessFlagsForMethod(int) -> c
    153:167:org.jf.dexlib2.AccessFlags[] getAccessFlagsForField(int) -> d
    175:175:org.jf.dexlib2.AccessFlags getAccessFlag(java.lang.String) -> a
    179:179:int getValue() -> a
    183:183:java.lang.String toString() -> toString
    36:76:void <clinit>() -> <clinit>
org.jf.dexlib2.AnnotationVisibility -> org.c.b.b:
    java.lang.String[] NAMES -> a
    44:47:java.lang.String getVisibility(int) -> a
    51:61:int getVisibility(java.lang.String) -> a
    41:41:void <clinit>() -> <clinit>
org.jf.dexlib2.DexFileFactory -> org.c.b.c:
    180:217:org.jf.dexlib2.dexbacked.DexBackedDexFile loadDexEntry(java.io.File,java.lang.String,boolean,org.jf.dexlib2.Opcodes) -> a
    293:293:void <init>() -> <init>
    326:338:boolean fullEntryMatch(java.lang.String,java.lang.String) -> c
    351:365:boolean partialEntryMatch(java.lang.String,java.lang.String) -> d
    58:58:boolean access$000(java.lang.String,java.lang.String) -> a
    58:58:boolean access$100(java.lang.String,java.lang.String) -> b
org.jf.dexlib2.DexFileFactory$DexEntryFinder -> org.c.b.d:
    java.lang.String filename -> b
    org.jf.dexlib2.iface.MultiDexContainer dexContainer -> c
    boolean $assertionsDisabled -> a
    373:376:void <init>(java.lang.String,org.jf.dexlib2.iface.MultiDexContainer) -> <init>
    380:436:org.jf.dexlib2.dexbacked.DexBackedDexFile findEntry(java.lang.String,boolean) -> a
    368:368:void <clinit>() -> <clinit>
org.jf.dexlib2.DexFileFactory$DexFileNotFoundException -> org.c.b.e:
    297:298:void <init>(java.lang.String,java.lang.Object[]) -> <init>
org.jf.dexlib2.DexFileFactory$FilenameVdexProvider -> org.c.b.f:
    java.io.File vdexFile -> a
    byte[] buf -> b
    boolean loadedVdex -> c
    468:476:void <init>(java.io.File) -> <init>
    479:492:byte[] getVdex() -> a
org.jf.dexlib2.DexFileFactory$MultipleMatchingDexEntriesException -> org.c.b.g:
    312:313:void <init>(java.lang.String,java.lang.Object[]) -> <init>
org.jf.dexlib2.DexFileFactory$UnsupportedFileTypeException -> org.c.b.h:
    318:319:void <init>(java.lang.String,java.lang.Object[]) -> <init>
org.jf.dexlib2.DexFileFactory$UnsupportedOatVersionException -> org.c.b.i:
    org.jf.dexlib2.dexbacked.OatFile oatFile -> a
    305:307:void <init>(org.jf.dexlib2.dexbacked.OatFile) -> <init>
org.jf.dexlib2.Format -> org.c.b.j:
    org.jf.dexlib2.Format Format10t -> a
    org.jf.dexlib2.Format Format10x -> b
    org.jf.dexlib2.Format Format11n -> c
    org.jf.dexlib2.Format Format11x -> d
    org.jf.dexlib2.Format Format12x -> e
    org.jf.dexlib2.Format Format20bc -> f
    org.jf.dexlib2.Format Format20t -> g
    org.jf.dexlib2.Format Format21c -> h
    org.jf.dexlib2.Format Format21ih -> i
    org.jf.dexlib2.Format Format21lh -> j
    org.jf.dexlib2.Format Format21s -> k
    org.jf.dexlib2.Format Format21t -> l
    org.jf.dexlib2.Format Format22b -> m
    org.jf.dexlib2.Format Format22c -> n
    org.jf.dexlib2.Format Format22cs -> o
    org.jf.dexlib2.Format Format22s -> p
    org.jf.dexlib2.Format Format22t -> q
    org.jf.dexlib2.Format Format22x -> r
    org.jf.dexlib2.Format Format23x -> s
    org.jf.dexlib2.Format Format30t -> t
    org.jf.dexlib2.Format Format31c -> u
    org.jf.dexlib2.Format Format31i -> v
    org.jf.dexlib2.Format Format31t -> w
    org.jf.dexlib2.Format Format32x -> x
    org.jf.dexlib2.Format Format35c -> y
    org.jf.dexlib2.Format Format35mi -> z
    org.jf.dexlib2.Format Format35ms -> A
    org.jf.dexlib2.Format Format3rc -> B
    org.jf.dexlib2.Format Format3rmi -> C
    org.jf.dexlib2.Format Format3rms -> D
    org.jf.dexlib2.Format Format45cc -> E
    org.jf.dexlib2.Format Format4rcc -> F
    org.jf.dexlib2.Format Format51l -> G
    org.jf.dexlib2.Format ArrayPayload -> H
    org.jf.dexlib2.Format PackedSwitchPayload -> I
    org.jf.dexlib2.Format SparseSwitchPayload -> J
    org.jf.dexlib2.Format UnresolvedOdexInstruction -> K
    int size -> L
    boolean isPayloadFormat -> M
    org.jf.dexlib2.Format[] $VALUES -> N
    34:34:org.jf.dexlib2.Format[] values() -> values
    34:34:org.jf.dexlib2.Format valueOf(java.lang.String) -> valueOf
    77:78:void <init>(java.lang.String,int,int) -> <init>
    80:83:void <init>(java.lang.String,int,int,boolean) -> <init>
    34:71:void <clinit>() -> <clinit>
org.jf.dexlib2.Opcode -> org.c.b.k:
    org.jf.dexlib2.Opcode NOP -> a
    org.jf.dexlib2.Opcode MOVE -> b
    org.jf.dexlib2.Opcode MOVE_FROM16 -> c
    org.jf.dexlib2.Opcode MOVE_16 -> d
    org.jf.dexlib2.Opcode MOVE_WIDE -> e
    org.jf.dexlib2.Opcode MOVE_WIDE_FROM16 -> f
    org.jf.dexlib2.Opcode MOVE_WIDE_16 -> g
    org.jf.dexlib2.Opcode MOVE_OBJECT -> h
    org.jf.dexlib2.Opcode MOVE_OBJECT_FROM16 -> i
    org.jf.dexlib2.Opcode MOVE_OBJECT_16 -> j
    org.jf.dexlib2.Opcode MOVE_RESULT -> k
    org.jf.dexlib2.Opcode MOVE_RESULT_WIDE -> l
    org.jf.dexlib2.Opcode MOVE_RESULT_OBJECT -> m
    org.jf.dexlib2.Opcode MOVE_EXCEPTION -> n
    org.jf.dexlib2.Opcode RETURN_VOID -> o
    org.jf.dexlib2.Opcode RETURN -> p
    org.jf.dexlib2.Opcode RETURN_WIDE -> q
    org.jf.dexlib2.Opcode RETURN_OBJECT -> r
    org.jf.dexlib2.Opcode CONST_4 -> s
    org.jf.dexlib2.Opcode CONST_16 -> t
    org.jf.dexlib2.Opcode CONST -> u
    org.jf.dexlib2.Opcode CONST_HIGH16 -> v
    org.jf.dexlib2.Opcode CONST_WIDE_16 -> w
    org.jf.dexlib2.Opcode CONST_WIDE_32 -> x
    org.jf.dexlib2.Opcode CONST_WIDE -> y
    org.jf.dexlib2.Opcode CONST_WIDE_HIGH16 -> z
    org.jf.dexlib2.Opcode CONST_STRING -> A
    org.jf.dexlib2.Opcode CONST_STRING_JUMBO -> B
    org.jf.dexlib2.Opcode CONST_CLASS -> C
    org.jf.dexlib2.Opcode MONITOR_ENTER -> D
    org.jf.dexlib2.Opcode MONITOR_EXIT -> E
    org.jf.dexlib2.Opcode CHECK_CAST -> F
    org.jf.dexlib2.Opcode INSTANCE_OF -> G
    org.jf.dexlib2.Opcode ARRAY_LENGTH -> H
    org.jf.dexlib2.Opcode NEW_INSTANCE -> I
    org.jf.dexlib2.Opcode NEW_ARRAY -> J
    org.jf.dexlib2.Opcode FILLED_NEW_ARRAY -> K
    org.jf.dexlib2.Opcode FILLED_NEW_ARRAY_RANGE -> L
    org.jf.dexlib2.Opcode FILL_ARRAY_DATA -> M
    org.jf.dexlib2.Opcode THROW -> N
    org.jf.dexlib2.Opcode GOTO -> O
    org.jf.dexlib2.Opcode GOTO_16 -> P
    org.jf.dexlib2.Opcode GOTO_32 -> Q
    org.jf.dexlib2.Opcode PACKED_SWITCH -> R
    org.jf.dexlib2.Opcode SPARSE_SWITCH -> S
    org.jf.dexlib2.Opcode CMPL_FLOAT -> T
    org.jf.dexlib2.Opcode CMPG_FLOAT -> U
    org.jf.dexlib2.Opcode CMPL_DOUBLE -> V
    org.jf.dexlib2.Opcode CMPG_DOUBLE -> W
    org.jf.dexlib2.Opcode CMP_LONG -> X
    org.jf.dexlib2.Opcode IF_EQ -> Y
    org.jf.dexlib2.Opcode IF_NE -> Z
    org.jf.dexlib2.Opcode IF_LT -> aa
    org.jf.dexlib2.Opcode IF_GE -> ab
    org.jf.dexlib2.Opcode IF_GT -> ac
    org.jf.dexlib2.Opcode IF_LE -> ad
    org.jf.dexlib2.Opcode IF_EQZ -> ae
    org.jf.dexlib2.Opcode IF_NEZ -> af
    org.jf.dexlib2.Opcode IF_LTZ -> ag
    org.jf.dexlib2.Opcode IF_GEZ -> ah
    org.jf.dexlib2.Opcode IF_GTZ -> ai
    org.jf.dexlib2.Opcode IF_LEZ -> aj
    org.jf.dexlib2.Opcode AGET -> ak
    org.jf.dexlib2.Opcode AGET_WIDE -> al
    org.jf.dexlib2.Opcode AGET_OBJECT -> am
    org.jf.dexlib2.Opcode AGET_BOOLEAN -> an
    org.jf.dexlib2.Opcode AGET_BYTE -> ao
    org.jf.dexlib2.Opcode AGET_CHAR -> ap
    org.jf.dexlib2.Opcode AGET_SHORT -> aq
    org.jf.dexlib2.Opcode APUT -> ar
    org.jf.dexlib2.Opcode APUT_WIDE -> as
    org.jf.dexlib2.Opcode APUT_OBJECT -> at
    org.jf.dexlib2.Opcode APUT_BOOLEAN -> au
    org.jf.dexlib2.Opcode APUT_BYTE -> av
    org.jf.dexlib2.Opcode APUT_CHAR -> aw
    org.jf.dexlib2.Opcode APUT_SHORT -> ax
    org.jf.dexlib2.Opcode IGET -> ay
    org.jf.dexlib2.Opcode IGET_WIDE -> az
    org.jf.dexlib2.Opcode IGET_OBJECT -> aA
    org.jf.dexlib2.Opcode IGET_BOOLEAN -> aB
    org.jf.dexlib2.Opcode IGET_BYTE -> aC
    org.jf.dexlib2.Opcode IGET_CHAR -> aD
    org.jf.dexlib2.Opcode IGET_SHORT -> aE
    org.jf.dexlib2.Opcode IPUT -> aF
    org.jf.dexlib2.Opcode IPUT_WIDE -> aG
    org.jf.dexlib2.Opcode IPUT_OBJECT -> aH
    org.jf.dexlib2.Opcode IPUT_BOOLEAN -> aI
    org.jf.dexlib2.Opcode IPUT_BYTE -> aJ
    org.jf.dexlib2.Opcode IPUT_CHAR -> aK
    org.jf.dexlib2.Opcode IPUT_SHORT -> aL
    org.jf.dexlib2.Opcode SGET -> aM
    org.jf.dexlib2.Opcode SGET_WIDE -> aN
    org.jf.dexlib2.Opcode SGET_OBJECT -> aO
    org.jf.dexlib2.Opcode SGET_BOOLEAN -> aP
    org.jf.dexlib2.Opcode SGET_BYTE -> aQ
    org.jf.dexlib2.Opcode SGET_CHAR -> aR
    org.jf.dexlib2.Opcode SGET_SHORT -> aS
    org.jf.dexlib2.Opcode SPUT -> aT
    org.jf.dexlib2.Opcode SPUT_WIDE -> aU
    org.jf.dexlib2.Opcode SPUT_OBJECT -> aV
    org.jf.dexlib2.Opcode SPUT_BOOLEAN -> aW
    org.jf.dexlib2.Opcode SPUT_BYTE -> aX
    org.jf.dexlib2.Opcode SPUT_CHAR -> aY
    org.jf.dexlib2.Opcode SPUT_SHORT -> aZ
    org.jf.dexlib2.Opcode INVOKE_VIRTUAL -> ba
    org.jf.dexlib2.Opcode INVOKE_SUPER -> bb
    org.jf.dexlib2.Opcode INVOKE_DIRECT -> bc
    org.jf.dexlib2.Opcode INVOKE_STATIC -> bd
    org.jf.dexlib2.Opcode INVOKE_INTERFACE -> be
    org.jf.dexlib2.Opcode INVOKE_VIRTUAL_RANGE -> bf
    org.jf.dexlib2.Opcode INVOKE_SUPER_RANGE -> bg
    org.jf.dexlib2.Opcode INVOKE_DIRECT_RANGE -> bh
    org.jf.dexlib2.Opcode INVOKE_STATIC_RANGE -> bi
    org.jf.dexlib2.Opcode INVOKE_INTERFACE_RANGE -> bj
    org.jf.dexlib2.Opcode NEG_INT -> bk
    org.jf.dexlib2.Opcode NOT_INT -> bl
    org.jf.dexlib2.Opcode NEG_LONG -> bm
    org.jf.dexlib2.Opcode NOT_LONG -> bn
    org.jf.dexlib2.Opcode NEG_FLOAT -> bo
    org.jf.dexlib2.Opcode NEG_DOUBLE -> bp
    org.jf.dexlib2.Opcode INT_TO_LONG -> bq
    org.jf.dexlib2.Opcode INT_TO_FLOAT -> br
    org.jf.dexlib2.Opcode INT_TO_DOUBLE -> bs
    org.jf.dexlib2.Opcode LONG_TO_INT -> bt
    org.jf.dexlib2.Opcode LONG_TO_FLOAT -> bu
    org.jf.dexlib2.Opcode LONG_TO_DOUBLE -> bv
    org.jf.dexlib2.Opcode FLOAT_TO_INT -> bw
    org.jf.dexlib2.Opcode FLOAT_TO_LONG -> bx
    org.jf.dexlib2.Opcode FLOAT_TO_DOUBLE -> by
    org.jf.dexlib2.Opcode DOUBLE_TO_INT -> bz
    org.jf.dexlib2.Opcode DOUBLE_TO_LONG -> bA
    org.jf.dexlib2.Opcode DOUBLE_TO_FLOAT -> bB
    org.jf.dexlib2.Opcode INT_TO_BYTE -> bC
    org.jf.dexlib2.Opcode INT_TO_CHAR -> bD
    org.jf.dexlib2.Opcode INT_TO_SHORT -> bE
    org.jf.dexlib2.Opcode ADD_INT -> bF
    org.jf.dexlib2.Opcode SUB_INT -> bG
    org.jf.dexlib2.Opcode MUL_INT -> bH
    org.jf.dexlib2.Opcode DIV_INT -> bI
    org.jf.dexlib2.Opcode REM_INT -> bJ
    org.jf.dexlib2.Opcode AND_INT -> bK
    org.jf.dexlib2.Opcode OR_INT -> bL
    org.jf.dexlib2.Opcode XOR_INT -> bM
    org.jf.dexlib2.Opcode SHL_INT -> bN
    org.jf.dexlib2.Opcode SHR_INT -> bO
    org.jf.dexlib2.Opcode USHR_INT -> bP
    org.jf.dexlib2.Opcode ADD_LONG -> bQ
    org.jf.dexlib2.Opcode SUB_LONG -> bR
    org.jf.dexlib2.Opcode MUL_LONG -> bS
    org.jf.dexlib2.Opcode DIV_LONG -> bT
    org.jf.dexlib2.Opcode REM_LONG -> bU
    org.jf.dexlib2.Opcode AND_LONG -> bV
    org.jf.dexlib2.Opcode OR_LONG -> bW
    org.jf.dexlib2.Opcode XOR_LONG -> bX
    org.jf.dexlib2.Opcode SHL_LONG -> bY
    org.jf.dexlib2.Opcode SHR_LONG -> bZ
    org.jf.dexlib2.Opcode USHR_LONG -> ca
    org.jf.dexlib2.Opcode ADD_FLOAT -> cb
    org.jf.dexlib2.Opcode SUB_FLOAT -> cc
    org.jf.dexlib2.Opcode MUL_FLOAT -> cd
    org.jf.dexlib2.Opcode DIV_FLOAT -> ce
    org.jf.dexlib2.Opcode REM_FLOAT -> cf
    org.jf.dexlib2.Opcode ADD_DOUBLE -> cg
    org.jf.dexlib2.Opcode SUB_DOUBLE -> ch
    org.jf.dexlib2.Opcode MUL_DOUBLE -> ci
    org.jf.dexlib2.Opcode DIV_DOUBLE -> cj
    org.jf.dexlib2.Opcode REM_DOUBLE -> ck
    org.jf.dexlib2.Opcode ADD_INT_2ADDR -> cl
    org.jf.dexlib2.Opcode SUB_INT_2ADDR -> cm
    org.jf.dexlib2.Opcode MUL_INT_2ADDR -> cn
    org.jf.dexlib2.Opcode DIV_INT_2ADDR -> co
    org.jf.dexlib2.Opcode REM_INT_2ADDR -> cp
    org.jf.dexlib2.Opcode AND_INT_2ADDR -> cq
    org.jf.dexlib2.Opcode OR_INT_2ADDR -> cr
    org.jf.dexlib2.Opcode XOR_INT_2ADDR -> cs
    org.jf.dexlib2.Opcode SHL_INT_2ADDR -> ct
    org.jf.dexlib2.Opcode SHR_INT_2ADDR -> cu
    org.jf.dexlib2.Opcode USHR_INT_2ADDR -> cv
    org.jf.dexlib2.Opcode ADD_LONG_2ADDR -> cw
    org.jf.dexlib2.Opcode SUB_LONG_2ADDR -> cx
    org.jf.dexlib2.Opcode MUL_LONG_2ADDR -> cy
    org.jf.dexlib2.Opcode DIV_LONG_2ADDR -> cz
    org.jf.dexlib2.Opcode REM_LONG_2ADDR -> cA
    org.jf.dexlib2.Opcode AND_LONG_2ADDR -> cB
    org.jf.dexlib2.Opcode OR_LONG_2ADDR -> cC
    org.jf.dexlib2.Opcode XOR_LONG_2ADDR -> cD
    org.jf.dexlib2.Opcode SHL_LONG_2ADDR -> cE
    org.jf.dexlib2.Opcode SHR_LONG_2ADDR -> cF
    org.jf.dexlib2.Opcode USHR_LONG_2ADDR -> cG
    org.jf.dexlib2.Opcode ADD_FLOAT_2ADDR -> cH
    org.jf.dexlib2.Opcode SUB_FLOAT_2ADDR -> cI
    org.jf.dexlib2.Opcode MUL_FLOAT_2ADDR -> cJ
    org.jf.dexlib2.Opcode DIV_FLOAT_2ADDR -> cK
    org.jf.dexlib2.Opcode REM_FLOAT_2ADDR -> cL
    org.jf.dexlib2.Opcode ADD_DOUBLE_2ADDR -> cM
    org.jf.dexlib2.Opcode SUB_DOUBLE_2ADDR -> cN
    org.jf.dexlib2.Opcode MUL_DOUBLE_2ADDR -> cO
    org.jf.dexlib2.Opcode DIV_DOUBLE_2ADDR -> cP
    org.jf.dexlib2.Opcode REM_DOUBLE_2ADDR -> cQ
    org.jf.dexlib2.Opcode ADD_INT_LIT16 -> cR
    org.jf.dexlib2.Opcode RSUB_INT -> cS
    org.jf.dexlib2.Opcode MUL_INT_LIT16 -> cT
    org.jf.dexlib2.Opcode DIV_INT_LIT16 -> cU
    org.jf.dexlib2.Opcode REM_INT_LIT16 -> cV
    org.jf.dexlib2.Opcode AND_INT_LIT16 -> cW
    org.jf.dexlib2.Opcode OR_INT_LIT16 -> cX
    org.jf.dexlib2.Opcode XOR_INT_LIT16 -> cY
    org.jf.dexlib2.Opcode ADD_INT_LIT8 -> cZ
    org.jf.dexlib2.Opcode RSUB_INT_LIT8 -> da
    org.jf.dexlib2.Opcode MUL_INT_LIT8 -> db
    org.jf.dexlib2.Opcode DIV_INT_LIT8 -> dc
    org.jf.dexlib2.Opcode REM_INT_LIT8 -> dd
    org.jf.dexlib2.Opcode AND_INT_LIT8 -> de
    org.jf.dexlib2.Opcode OR_INT_LIT8 -> df
    org.jf.dexlib2.Opcode XOR_INT_LIT8 -> dg
    org.jf.dexlib2.Opcode SHL_INT_LIT8 -> dh
    org.jf.dexlib2.Opcode SHR_INT_LIT8 -> di
    org.jf.dexlib2.Opcode USHR_INT_LIT8 -> dj
    org.jf.dexlib2.Opcode IGET_VOLATILE -> dk
    org.jf.dexlib2.Opcode IPUT_VOLATILE -> dl
    org.jf.dexlib2.Opcode SGET_VOLATILE -> dm
    org.jf.dexlib2.Opcode SPUT_VOLATILE -> dn
    org.jf.dexlib2.Opcode IGET_OBJECT_VOLATILE -> do
    org.jf.dexlib2.Opcode IGET_WIDE_VOLATILE -> dp
    org.jf.dexlib2.Opcode IPUT_WIDE_VOLATILE -> dq
    org.jf.dexlib2.Opcode SGET_WIDE_VOLATILE -> dr
    org.jf.dexlib2.Opcode SPUT_WIDE_VOLATILE -> ds
    org.jf.dexlib2.Opcode THROW_VERIFICATION_ERROR -> dt
    org.jf.dexlib2.Opcode EXECUTE_INLINE -> du
    org.jf.dexlib2.Opcode EXECUTE_INLINE_RANGE -> dv
    org.jf.dexlib2.Opcode INVOKE_DIRECT_EMPTY -> dw
    org.jf.dexlib2.Opcode INVOKE_OBJECT_INIT_RANGE -> dx
    org.jf.dexlib2.Opcode RETURN_VOID_BARRIER -> dy
    org.jf.dexlib2.Opcode RETURN_VOID_NO_BARRIER -> dz
    org.jf.dexlib2.Opcode IGET_QUICK -> dA
    org.jf.dexlib2.Opcode IGET_WIDE_QUICK -> dB
    org.jf.dexlib2.Opcode IGET_OBJECT_QUICK -> dC
    org.jf.dexlib2.Opcode IPUT_QUICK -> dD
    org.jf.dexlib2.Opcode IPUT_WIDE_QUICK -> dE
    org.jf.dexlib2.Opcode IPUT_OBJECT_QUICK -> dF
    org.jf.dexlib2.Opcode IPUT_BOOLEAN_QUICK -> dG
    org.jf.dexlib2.Opcode IPUT_BYTE_QUICK -> dH
    org.jf.dexlib2.Opcode IPUT_CHAR_QUICK -> dI
    org.jf.dexlib2.Opcode IPUT_SHORT_QUICK -> dJ
    org.jf.dexlib2.Opcode IGET_BOOLEAN_QUICK -> dK
    org.jf.dexlib2.Opcode IGET_BYTE_QUICK -> dL
    org.jf.dexlib2.Opcode IGET_CHAR_QUICK -> dM
    org.jf.dexlib2.Opcode IGET_SHORT_QUICK -> dN
    org.jf.dexlib2.Opcode INVOKE_VIRTUAL_QUICK -> dO
    org.jf.dexlib2.Opcode INVOKE_VIRTUAL_QUICK_RANGE -> dP
    org.jf.dexlib2.Opcode INVOKE_SUPER_QUICK -> dQ
    org.jf.dexlib2.Opcode INVOKE_SUPER_QUICK_RANGE -> dR
    org.jf.dexlib2.Opcode IPUT_OBJECT_VOLATILE -> dS
    org.jf.dexlib2.Opcode SGET_OBJECT_VOLATILE -> dT
    org.jf.dexlib2.Opcode SPUT_OBJECT_VOLATILE -> dU
    org.jf.dexlib2.Opcode PACKED_SWITCH_PAYLOAD -> dV
    org.jf.dexlib2.Opcode SPARSE_SWITCH_PAYLOAD -> dW
    org.jf.dexlib2.Opcode ARRAY_PAYLOAD -> dX
    org.jf.dexlib2.Opcode INVOKE_POLYMORPHIC -> dY
    org.jf.dexlib2.Opcode INVOKE_POLYMORPHIC_RANGE -> dZ
    com.google.common.collect.RangeMap apiToValueMap -> ea
    com.google.common.collect.RangeMap artVersionToValueMap -> eb
    java.lang.String name -> ec
    int referenceType -> ed
    org.jf.dexlib2.Format format -> ee
    int flags -> ef
    int referenceType2 -> eg
    org.jf.dexlib2.Opcode[] $VALUES -> eh
    42:42:org.jf.dexlib2.Opcode[] values() -> values
    42:42:org.jf.dexlib2.Opcode valueOf(java.lang.String) -> valueOf
    356:357:void <init>(java.lang.String,int,int,java.lang.String,int,org.jf.dexlib2.Format) -> <init>
    360:361:void <init>(java.lang.String,int,int,java.lang.String,int,org.jf.dexlib2.Format,int) -> <init>
    364:365:void <init>(java.lang.String,int,java.util.List,java.lang.String,int,org.jf.dexlib2.Format,int) -> <init>
    368:388:void <init>(java.lang.String,int,java.util.List,java.lang.String,int,int,org.jf.dexlib2.Format,int) -> <init>
    391:391:java.util.List firstApi(int,int) -> a
    396:396:java.util.List lastApi(int,int) -> b
    400:400:java.util.List firstArtVersion(int,int) -> c
    404:404:java.util.List lastArtVersion(int,int) -> d
    408:408:java.util.List allVersions(int) -> a
    412:412:java.util.List allApis(int) -> b
    416:416:java.util.List allArtVersions(int) -> c
    421:425:java.util.List combine(java.util.List[]) -> a
    429:429:boolean canThrow() -> a
    433:433:boolean odexOnly() -> b
    437:437:boolean canContinue() -> c
    441:441:boolean setsResult() -> d
    445:445:boolean setsRegister() -> e
    449:449:boolean setsWideRegister() -> f
    457:457:boolean isVolatileFieldAccessor() -> g
    461:461:boolean isStaticFieldAccessor() -> h
    469:469:boolean canInitializeReference() -> i
    42:309:void <clinit>() -> <clinit>
org.jf.dexlib2.Opcode$VersionConstraint -> org.c.b.l:
    com.google.common.collect.Range apiRange -> a
    com.google.common.collect.Range artVersionRange -> b
    int opcodeValue -> c
    478:482:void <init>(com.google.common.collect.Range,com.google.common.collect.Range,int) -> <init>
org.jf.dexlib2.Opcodes -> org.c.b.m:
    int api -> a
    int artVersion -> b
    org.jf.dexlib2.Opcode[] opcodesByValue -> c
    java.util.EnumMap opcodeValues -> d
    java.util.HashMap opcodesByName -> e
    59:59:org.jf.dexlib2.Opcodes forApi(int) -> a
    64:64:org.jf.dexlib2.Opcodes forArtVersion(int) -> b
    73:73:org.jf.dexlib2.Opcodes getDefault() -> a
    53:118:void <init>(int,int) -> <init>
    122:122:org.jf.dexlib2.Opcode getOpcodeByName(java.lang.String) -> a
    127:138:org.jf.dexlib2.Opcode getOpcodeByValue(int) -> c
    144:144:java.lang.Short getOpcodeValue(org.jf.dexlib2.Opcode) -> a
    148:148:boolean isArt() -> b
org.jf.dexlib2.ReferenceType -> org.c.b.n:
    46:58:java.lang.String toString(int) -> a
    63:74:int getReferenceType(org.jf.dexlib2.iface.reference.Reference) -> a
    84:87:void validateReferenceType(int) -> b
org.jf.dexlib2.ReferenceType$InvalidReferenceTypeException -> org.c.b.o:
    int referenceType -> a
    93:95:void <init>(int) -> <init>
    103:103:int getReferenceType() -> a
org.jf.dexlib2.VerificationError -> org.c.b.p:
    java.util.HashMap verificationErrorNames -> a
    67:87:java.lang.String getVerificationErrorName(int) -> a
    92:96:int getVerificationError(java.lang.String) -> a
    100:100:boolean isValidVerificationError(int) -> b
    51:63:void <clinit>() -> <clinit>
org.jf.dexlib2.VersionMap -> org.c.b.q:
    41:56:int mapArtVersionToApi(int) -> a
    60:81:int mapApiToArtVersion(int) -> b
org.jf.dexlib2.analysis.AnalysisException -> org.c.b.a.a:
    int codeAddress -> a
    48:49:void <init>(java.lang.String,java.lang.Object[]) -> <init>
org.jf.dexlib2.analysis.AnalyzedInstruction -> org.c.b.a.b:
    org.jf.dexlib2.analysis.MethodAnalyzer methodAnalyzer -> a
    org.jf.dexlib2.iface.instruction.Instruction instruction -> b
    int instructionIndex -> c
    java.util.TreeSet predecessors -> d
    java.util.LinkedList successors -> e
    org.jf.dexlib2.analysis.RegisterType[] preRegisterMap -> f
    org.jf.dexlib2.analysis.RegisterType[] postRegisterMap -> g
    java.util.Map predecessorRegisterOverrides -> h
    org.jf.dexlib2.iface.instruction.Instruction originalInstruction -> i
    boolean $assertionsDisabled -> j
    70:116:void <init>(org.jf.dexlib2.analysis.MethodAnalyzer,org.jf.dexlib2.iface.instruction.Instruction,int,int) -> <init>
    119:119:int getInstructionIndex() -> a
    123:123:int getPredecessorCount() -> b
    127:127:java.util.SortedSet getPredecessors() -> c
    131:138:org.jf.dexlib2.analysis.RegisterType getPredecessorRegisterType(org.jf.dexlib2.analysis.AnalyzedInstruction,int) -> a
    142:142:boolean addPredecessor(org.jf.dexlib2.analysis.AnalyzedInstruction) -> a
    146:147:void addSuccessor(org.jf.dexlib2.analysis.AnalyzedInstruction) -> b
    150:152:void setDeodexedInstruction(org.jf.dexlib2.iface.instruction.Instruction) -> a
    155:157:void restoreOdexedInstruction() -> d
    166:166:org.jf.dexlib2.iface.instruction.Instruction getInstruction() -> e
    171:171:org.jf.dexlib2.iface.instruction.Instruction getOriginalInstruction() -> f
    189:192:boolean isBeginningInstruction() -> g
    206:230:boolean mergeRegister(int,org.jf.dexlib2.analysis.RegisterType,java.util.BitSet,boolean) -> a
    243:258:org.jf.dexlib2.analysis.RegisterType getMergedPreRegisterTypeFromPredecessors(int) -> a
    267:276:boolean setPostRegisterType(int,org.jf.dexlib2.analysis.RegisterType) -> a
    293:314:boolean overridePredecessorRegisterType(org.jf.dexlib2.analysis.AnalyzedInstruction,int,org.jf.dexlib2.analysis.RegisterType,java.util.BitSet) -> a
    318:329:boolean isInvokeInit() -> h
    343:471:boolean setsRegister(int) -> b
    475:612:java.util.List getSetRegisters() -> i
    616:620:int getDestinationRegister() -> j
    624:624:int getRegisterCount() -> k
    629:629:org.jf.dexlib2.analysis.RegisterType getPostInstructionRegisterType(int) -> c
    634:634:org.jf.dexlib2.analysis.RegisterType getPreInstructionRegisterType(int) -> d
    638:643:int compareTo(org.jf.dexlib2.analysis.AnalyzedInstruction) -> c
    49:49:int compareTo(java.lang.Object) -> compareTo
    49:49:void <clinit>() -> <clinit>
org.jf.dexlib2.analysis.AnalyzedInstruction$PredecessorOverrideKey -> org.c.b.a.c:
    org.jf.dexlib2.analysis.AnalyzedInstruction analyzedInstruction -> a
    int registerNumber -> b
    651:654:void <init>(org.jf.dexlib2.analysis.AnalyzedInstruction,int) -> <init>
    657:661:boolean equals(java.lang.Object) -> equals
    665:665:int hashCode() -> hashCode
org.jf.dexlib2.analysis.AnalyzedMethodUtil -> org.c.b.a.d:
    46:68:boolean canAccess(org.jf.dexlib2.analysis.TypeProto,org.jf.dexlib2.iface.Method,boolean,boolean,boolean) -> a
org.jf.dexlib2.analysis.ArrayProto -> org.c.b.a.e:
    org.jf.dexlib2.analysis.ClassPath classPath -> a
    int dimensions -> b
    java.lang.String elementType -> c
    java.lang.String BRACKETS -> d
    68:68:java.lang.String toString() -> toString
    69:69:org.jf.dexlib2.analysis.ClassPath getClassPath() -> a
    70:70:java.lang.String getType() -> b
    72:72:boolean isInterface() -> c
    77:77:java.lang.String getElementType() -> d
    84:87:java.lang.String getImmediateElementType() -> e
    91:91:boolean implementsInterface(java.lang.String) -> a
    96:96:java.lang.String getSuperclass() -> f
    101:142:org.jf.dexlib2.analysis.TypeProto getCommonSuperclass(org.jf.dexlib2.analysis.TypeProto) -> a
    149:149:java.lang.String makeArrayType(java.lang.String,int) -> a
    156:159:org.jf.dexlib2.iface.reference.FieldReference getFieldByOffset(int) -> a
    165:165:org.jf.dexlib2.iface.Method getMethodByVtableIndex(int) -> b
    169:169:int findMethodIndexInVtable(org.jf.dexlib2.iface.reference.MethodReference) -> a
    145:145:void <clinit>() -> <clinit>
org.jf.dexlib2.analysis.ClassPath -> org.c.b.a.f:
    org.jf.dexlib2.analysis.TypeProto unknownClass -> b
    java.util.List classProviders -> c
    boolean checkPackagePrivateAccess -> d
    int oatVersion -> a
    com.google.common.cache.LoadingCache loadedClasses -> e
    com.google.common.base.Supplier fieldInstructionMapperSupplier -> f
    127:127:boolean isArt() -> a
    132:132:org.jf.dexlib2.analysis.TypeProto getClass(java.lang.CharSequence) -> a
    149:155:org.jf.dexlib2.iface.ClassDef getClassDef(java.lang.String) -> a
    160:160:org.jf.dexlib2.analysis.TypeProto getUnknownClass() -> b
    164:164:boolean shouldCheckPackagePrivateAccess() -> c
    176:176:org.jf.dexlib2.analysis.OdexedFieldInstructionMapper getFieldInstructionMapper() -> d
org.jf.dexlib2.analysis.ClassProto -> org.c.b.a.g:
    org.jf.dexlib2.analysis.ClassPath classPath -> a
    java.lang.String type -> b
    boolean interfacesFullyResolved -> c
    com.google.common.base.Supplier classDefSupplier -> d
    com.google.common.base.Supplier preDefaultMethodInterfaceSupplier -> e
    com.google.common.base.Supplier postDefaultMethodInterfaceSupplier -> f
    com.google.common.base.Supplier dalvikInstanceFieldsSupplier -> g
    com.google.common.base.Supplier artInstanceFieldsSupplier -> h
    com.google.common.base.Supplier preDefaultMethodVtableSupplier -> i
    com.google.common.base.Supplier buggyPostDefaultMethodVtableSupplier -> j
    com.google.common.base.Supplier postDefaultMethodVtableSupplier -> k
    81:81:java.lang.String toString() -> toString
    82:82:org.jf.dexlib2.analysis.ClassPath getClassPath() -> a
    83:83:java.lang.String getType() -> b
    87:87:org.jf.dexlib2.iface.ClassDef getClassDef() -> d
    105:106:boolean isInterface() -> c
    125:128:java.util.LinkedHashMap getInterfaces() -> e
    315:321:boolean implementsInterface(java.lang.String) -> a
    326:326:java.lang.String getSuperclass() -> f
    345:372:boolean checkInterface(org.jf.dexlib2.analysis.ClassProto) -> a
    378:431:org.jf.dexlib2.analysis.TypeProto getCommonSuperclass(org.jf.dexlib2.analysis.TypeProto) -> a
    437:440:org.jf.dexlib2.iface.reference.FieldReference getFieldByOffset(int) -> a
    446:451:org.jf.dexlib2.iface.Method getMethodByVtableIndex(int) -> b
    455:455:int findMethodIndexInVtable(org.jf.dexlib2.iface.reference.MethodReference) -> a
    459:468:int findMethodIndexInVtable(java.util.List,org.jf.dexlib2.iface.reference.MethodReference) -> a
    485:488:org.jf.util.SparseArray getInstanceFields() -> g
    867:872:java.util.List getVtable() -> h
org.jf.dexlib2.analysis.ClassProvider -> org.c.b.a.h:
    org.jf.dexlib2.iface.ClassDef getClassDef(java.lang.String) -> a
org.jf.dexlib2.analysis.InlineMethodResolver -> org.c.b.a.i:
    54:59:org.jf.dexlib2.analysis.InlineMethodResolver createInlineMethodResolver(int) -> a
    63:64:void <init>() -> <init>
    69:70:org.jf.dexlib2.iface.Method inlineMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
    org.jf.dexlib2.iface.Method resolveExecuteInline(org.jf.dexlib2.analysis.AnalyzedInstruction) -> a
    44:44:org.jf.dexlib2.iface.Method access$000(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
org.jf.dexlib2.analysis.InlineMethodResolver$InlineMethodResolver_version35 -> org.c.b.a.j:
    org.jf.dexlib2.iface.Method[] inlineMethods -> a
    79:96:void <init>() -> <init>
    101:107:org.jf.dexlib2.iface.Method resolveExecuteInline(org.jf.dexlib2.analysis.AnalyzedInstruction) -> a
org.jf.dexlib2.analysis.InlineMethodResolver$InlineMethodResolver_version36 -> org.c.b.a.k:
    org.jf.dexlib2.iface.Method[] inlineMethods -> a
    org.jf.dexlib2.iface.Method indexOfIMethod -> b
    org.jf.dexlib2.iface.Method indexOfIIMethod -> c
    org.jf.dexlib2.iface.Method fastIndexOfMethod -> d
    org.jf.dexlib2.iface.Method isEmptyMethod -> e
    119:166:void <init>() -> <init>
    171:198:org.jf.dexlib2.iface.Method resolveExecuteInline(org.jf.dexlib2.analysis.AnalyzedInstruction) -> a
org.jf.dexlib2.analysis.MethodAnalyzer -> org.c.b.a.l:
    org.jf.dexlib2.iface.Method method -> b
    org.jf.dexlib2.iface.MethodImplementation methodImpl -> c
    boolean normalizeVirtualMethods -> d
    int paramRegisterCount -> e
    org.jf.dexlib2.analysis.ClassPath classPath -> f
    org.jf.dexlib2.analysis.InlineMethodResolver inlineResolver -> g
    org.jf.util.SparseArray analyzedInstructions -> h
    java.util.BitSet analyzedState -> i
    org.jf.dexlib2.analysis.AnalysisException analysisException -> j
    org.jf.dexlib2.analysis.AnalyzedInstruction startOfMethod -> k
    java.util.BitSet Primitive32BitCategories -> l
    java.util.BitSet WideLowCategories -> m
    java.util.BitSet WideHighCategories -> n
    java.util.BitSet ReferenceOrUninitCategories -> o
    java.util.BitSet BooleanCategories -> p
    boolean $assertionsDisabled -> a
    85:132:void <init>(org.jf.dexlib2.analysis.ClassPath,org.jf.dexlib2.iface.Method,org.jf.dexlib2.analysis.InlineMethodResolver,boolean) -> <init>
    136:136:org.jf.dexlib2.analysis.ClassPath getClassPath() -> a
    140:284:void analyze() -> e
    287:299:void propagateParameterTypes(int) -> a
    302:302:java.util.List getAnalyzedInstructions() -> b
    318:318:org.jf.dexlib2.analysis.AnalysisException getAnalysisException() -> c
    322:322:int getParamRegisterCount() -> d
    326:326:int getInstructionAddress(org.jf.dexlib2.analysis.AnalyzedInstruction) -> a
    331:333:void setDestinationRegisterTypeAndPropagateChanges(org.jf.dexlib2.analysis.AnalyzedInstruction,org.jf.dexlib2.analysis.RegisterType) -> a
    340:351:void propagateChanges(java.util.BitSet,int,boolean) -> a
    357:376:void overridePredecessorRegisterTypeAndPropagateChanges(org.jf.dexlib2.analysis.AnalyzedInstruction,org.jf.dexlib2.analysis.AnalyzedInstruction,int,org.jf.dexlib2.analysis.RegisterType) -> a
    403:420:void setPostRegisterTypeAndPropagateChanges(org.jf.dexlib2.analysis.AnalyzedInstruction,int,org.jf.dexlib2.analysis.RegisterType) -> a
    424:430:void propagateRegisterToSuccessors(org.jf.dexlib2.analysis.AnalyzedInstruction,int,java.util.BitSet,boolean) -> a
    433:546:void buildInstructionList() -> f
    552:553:void addPredecessorSuccessor(org.jf.dexlib2.analysis.AnalyzedInstruction,org.jf.dexlib2.analysis.AnalyzedInstruction,org.jf.dexlib2.analysis.AnalyzedInstruction[][],java.util.BitSet) -> a
    560:590:void addPredecessorSuccessor(org.jf.dexlib2.analysis.AnalyzedInstruction,org.jf.dexlib2.analysis.AnalyzedInstruction,org.jf.dexlib2.analysis.AnalyzedInstruction[][],java.util.BitSet,boolean) -> a
    594:601:org.jf.dexlib2.analysis.AnalyzedInstruction[] buildExceptionHandlerArray(org.jf.dexlib2.iface.TryBlock) -> a
    609:1054:boolean analyzeInstruction(org.jf.dexlib2.analysis.AnalyzedInstruction) -> b
    1090:1094:void analyzeMove(org.jf.dexlib2.analysis.AnalyzedInstruction) -> c
    1097:1117:void analyzeMoveResult(org.jf.dexlib2.analysis.AnalyzedInstruction) -> d
    1120:1145:void analyzeMoveException(org.jf.dexlib2.analysis.AnalyzedInstruction) -> e
    1148:1149:void analyzeOdexReturnVoid(org.jf.dexlib2.analysis.AnalyzedInstruction) -> f
    1152:1159:void analyzeOdexReturnVoid(org.jf.dexlib2.analysis.AnalyzedInstruction,boolean) -> a
    1162:1168:void analyzeConst(org.jf.dexlib2.analysis.AnalyzedInstruction) -> g
    1171:1172:void analyzeWideConst(org.jf.dexlib2.analysis.AnalyzedInstruction) -> h
    1175:1178:void analyzeConstString(org.jf.dexlib2.analysis.AnalyzedInstruction) -> i
    1181:1184:void analyzeConstClass(org.jf.dexlib2.analysis.AnalyzedInstruction) -> j
    1187:1191:void analyzeCheckCast(org.jf.dexlib2.analysis.AnalyzedInstruction) -> k
    1194:1208:boolean isNotWideningConversion(org.jf.dexlib2.analysis.RegisterType,org.jf.dexlib2.analysis.RegisterType) -> a
    1213:1235:boolean canPropagateTypeAfterInstanceOf(org.jf.dexlib2.analysis.AnalyzedInstruction,org.jf.dexlib2.analysis.AnalyzedInstruction,org.jf.dexlib2.analysis.ClassPath) -> a
    1243:1282:void analyzeIfEqzNez(org.jf.dexlib2.analysis.AnalyzedInstruction) -> l
    1285:1286:void analyzeInstanceOf(org.jf.dexlib2.analysis.AnalyzedInstruction) -> m
    1289:1290:void analyzeArrayLength(org.jf.dexlib2.analysis.AnalyzedInstruction) -> n
    1293:1311:void analyzeNewInstance(org.jf.dexlib2.analysis.AnalyzedInstruction) -> o
    1314:1324:void analyzeNewArray(org.jf.dexlib2.analysis.AnalyzedInstruction) -> p
    1327:1328:void analyzeFloatWideCmp(org.jf.dexlib2.analysis.AnalyzedInstruction) -> q
    1332:1333:void analyze32BitPrimitiveAget(org.jf.dexlib2.analysis.AnalyzedInstruction,org.jf.dexlib2.analysis.RegisterType) -> b
    1336:1364:void analyzeAgetWide(org.jf.dexlib2.analysis.AnalyzedInstruction) -> r
    1367:1388:void analyzeAgetObject(org.jf.dexlib2.analysis.AnalyzedInstruction) -> s
    1392:1393:void analyze32BitPrimitiveIgetSget(org.jf.dexlib2.analysis.AnalyzedInstruction,org.jf.dexlib2.analysis.RegisterType) -> c
    1396:1402:void analyzeIgetSgetWideObject(org.jf.dexlib2.analysis.AnalyzedInstruction) -> t
    1405:1407:void analyzeInvokeDirect(org.jf.dexlib2.analysis.AnalyzedInstruction) -> u
    1410:1412:void analyzeInvokeDirectRange(org.jf.dexlib2.analysis.AnalyzedInstruction) -> v
    1424:1444:void analyzeInvokeDirectCommon(org.jf.dexlib2.analysis.AnalyzedInstruction,int) -> a
    1448:1449:void analyzeUnaryOp(org.jf.dexlib2.analysis.AnalyzedInstruction,org.jf.dexlib2.analysis.RegisterType) -> d
    1453:1468:void analyzeBinaryOp(org.jf.dexlib2.analysis.AnalyzedInstruction,org.jf.dexlib2.analysis.RegisterType,boolean) -> a
    1472:1487:void analyzeBinary2AddrOp(org.jf.dexlib2.analysis.AnalyzedInstruction,org.jf.dexlib2.analysis.RegisterType,boolean) -> b
    1491:1506:void analyzeLiteralBinaryOp(org.jf.dexlib2.analysis.AnalyzedInstruction,org.jf.dexlib2.analysis.RegisterType,boolean) -> c
    1509:1574:org.jf.dexlib2.analysis.RegisterType getDestTypeForLiteralShiftRight(org.jf.dexlib2.analysis.AnalyzedInstruction,boolean) -> b
    1579:1602:void analyzeExecuteInline(org.jf.dexlib2.analysis.AnalyzedInstruction) -> w
    1605:1627:void analyzeExecuteInlineRange(org.jf.dexlib2.analysis.AnalyzedInstruction) -> x
    1630:1631:void analyzeInvokeDirectEmpty(org.jf.dexlib2.analysis.AnalyzedInstruction) -> y
    1634:1646:void analyzeInvokeDirectEmpty(org.jf.dexlib2.analysis.AnalyzedInstruction,boolean) -> c
    1649:1650:void analyzeInvokeObjectInitRange(org.jf.dexlib2.analysis.AnalyzedInstruction) -> z
    1653:1675:void analyzeInvokeObjectInitRange(org.jf.dexlib2.analysis.AnalyzedInstruction,boolean) -> d
    1678:1738:boolean analyzeIputIgetQuick(org.jf.dexlib2.analysis.AnalyzedInstruction) -> A
    1744:1775:boolean analyzeInvokeVirtual(org.jf.dexlib2.analysis.AnalyzedInstruction,boolean) -> e
    1783:1898:boolean analyzeInvokeVirtualQuick(org.jf.dexlib2.analysis.AnalyzedInstruction,boolean,boolean) -> a
    1902:1902:boolean analyzePutGetVolatile(org.jf.dexlib2.analysis.AnalyzedInstruction) -> B
    1906:1931:boolean analyzePutGetVolatile(org.jf.dexlib2.analysis.AnalyzedInstruction,boolean) -> f
    1937:1951:org.jf.dexlib2.analysis.RegisterType getAndCheckSourceRegister(org.jf.dexlib2.analysis.AnalyzedInstruction,int,java.util.BitSet) -> a
    1955:1959:void checkRegister(org.jf.dexlib2.analysis.RegisterType,int,java.util.BitSet) -> a
    1962:1966:void checkWidePair(int,org.jf.dexlib2.analysis.AnalyzedInstruction) -> a
    1970:2005:org.jf.dexlib2.iface.reference.MethodReference normalizeMethodReference(org.jf.dexlib2.iface.reference.MethodReference) -> a
    73:1084:void <clinit>() -> <clinit>
org.jf.dexlib2.analysis.MethodAnalyzer$1 -> org.c.b.a.m:
    org.jf.dexlib2.analysis.MethodAnalyzer this$0 -> k
    116:116:void <init>(org.jf.dexlib2.analysis.MethodAnalyzer,org.jf.dexlib2.analysis.MethodAnalyzer,org.jf.dexlib2.iface.instruction.Instruction,int,int) -> <init>
    118:118:boolean addPredecessor(org.jf.dexlib2.analysis.AnalyzedInstruction) -> a
    123:123:org.jf.dexlib2.analysis.RegisterType getPredecessorRegisterType(org.jf.dexlib2.analysis.AnalyzedInstruction,int) -> a
org.jf.dexlib2.analysis.MethodAnalyzer$3 -> org.c.b.a.n:
    int[] $SwitchMap$org$jf$dexlib2$Format -> a
    int[] $SwitchMap$org$jf$dexlib2$Opcode -> b
    251:611:void <clinit>() -> <clinit>
org.jf.dexlib2.analysis.MethodAnalyzer$ReparentedMethodReference -> org.c.b.a.o:
    org.jf.dexlib2.iface.reference.MethodReference baseReference -> a
    java.lang.String definingClass -> b
    2012:2015:void <init>(org.jf.dexlib2.iface.reference.MethodReference,java.lang.String) -> <init>
    2018:2018:java.lang.String getName() -> a
    2022:2022:java.util.List getParameterTypes() -> b
    2026:2026:java.lang.String getReturnType() -> c
    2030:2030:java.lang.String getDefiningClass() -> d
org.jf.dexlib2.analysis.OdexedFieldInstructionMapper -> org.c.b.a.p:
    org.jf.dexlib2.analysis.OdexedFieldInstructionMapper$FieldOpcode[] dalvikFieldOpcodes -> a
    org.jf.dexlib2.analysis.OdexedFieldInstructionMapper$FieldOpcode[] artFieldOpcodes -> b
    org.jf.dexlib2.analysis.OdexedFieldInstructionMapper$FieldOpcode[][][] opcodeMap -> c
    java.util.Map opcodeValueTypeMap -> d
    160:175:int getValueType(char) -> a
    179:201:int getTypeIndex(char) -> b
    205:205:boolean isGet(org.jf.dexlib2.Opcode) -> a
    209:209:boolean isStatic(org.jf.dexlib2.Opcode) -> b
    236:245:org.jf.dexlib2.Opcode getAndCheckDeodexedOpcode(java.lang.String,org.jf.dexlib2.Opcode) -> a
    249:253:boolean isCompatible(org.jf.dexlib2.Opcode,char) -> a
    86:132:void <clinit>() -> <clinit>
org.jf.dexlib2.analysis.OdexedFieldInstructionMapper$FieldOpcode -> org.c.b.a.q:
    char type -> a
    boolean isStatic -> b
    org.jf.dexlib2.Opcode normalOpcode -> c
    org.jf.dexlib2.Opcode quickOpcode -> d
    org.jf.dexlib2.Opcode volatileOpcode -> e
    61:67:void <init>(char,org.jf.dexlib2.Opcode,org.jf.dexlib2.Opcode,org.jf.dexlib2.Opcode) -> <init>
    69:75:void <init>(char,boolean,org.jf.dexlib2.Opcode,org.jf.dexlib2.Opcode) -> <init>
    77:83:void <init>(char,org.jf.dexlib2.Opcode,org.jf.dexlib2.Opcode) -> <init>
org.jf.dexlib2.analysis.RegisterType -> org.c.b.a.r:
    byte category -> a
    org.jf.dexlib2.analysis.TypeProto type -> b
    java.lang.String[] CATEGORY_NAMES -> c
    byte[][] mergeTable -> d
    org.jf.dexlib2.analysis.RegisterType UNKNOWN_TYPE -> e
    org.jf.dexlib2.analysis.RegisterType UNINIT_TYPE -> f
    org.jf.dexlib2.analysis.RegisterType NULL_TYPE -> g
    org.jf.dexlib2.analysis.RegisterType ONE_TYPE -> h
    org.jf.dexlib2.analysis.RegisterType BOOLEAN_TYPE -> i
    org.jf.dexlib2.analysis.RegisterType BYTE_TYPE -> j
    org.jf.dexlib2.analysis.RegisterType POS_BYTE_TYPE -> k
    org.jf.dexlib2.analysis.RegisterType SHORT_TYPE -> l
    org.jf.dexlib2.analysis.RegisterType POS_SHORT_TYPE -> m
    org.jf.dexlib2.analysis.RegisterType CHAR_TYPE -> n
    org.jf.dexlib2.analysis.RegisterType INTEGER_TYPE -> o
    org.jf.dexlib2.analysis.RegisterType FLOAT_TYPE -> p
    org.jf.dexlib2.analysis.RegisterType LONG_LO_TYPE -> q
    org.jf.dexlib2.analysis.RegisterType LONG_HI_TYPE -> r
    org.jf.dexlib2.analysis.RegisterType DOUBLE_LO_TYPE -> s
    org.jf.dexlib2.analysis.RegisterType DOUBLE_HI_TYPE -> t
    org.jf.dexlib2.analysis.RegisterType CONFLICTED_TYPE -> u
    boolean $assertionsDisabled -> v
    46:52:void <init>(byte,org.jf.dexlib2.analysis.TypeProto) -> <init>
    56:56:java.lang.String toString() -> toString
    60:67:void writeTo(java.io.Writer) -> a
    71:85:boolean equals(java.lang.Object) -> equals
    90:92:int hashCode() -> hashCode
    197:211:org.jf.dexlib2.analysis.RegisterType getWideRegisterType(java.lang.CharSequence,boolean) -> a
    217:238:org.jf.dexlib2.analysis.RegisterType getRegisterType(org.jf.dexlib2.analysis.ClassPath,java.lang.CharSequence) -> a
    244:268:org.jf.dexlib2.analysis.RegisterType getRegisterTypeForLiteral(int) -> a
    273:307:org.jf.dexlib2.analysis.RegisterType merge(org.jf.dexlib2.analysis.RegisterType) -> a
    312:349:org.jf.dexlib2.analysis.RegisterType getRegisterType(byte,org.jf.dexlib2.analysis.TypeProto) -> a
    42:193:void <clinit>() -> <clinit>
org.jf.dexlib2.analysis.TypeProto -> org.c.b.a.s:
    org.jf.dexlib2.analysis.ClassPath getClassPath() -> a
    java.lang.String getType() -> b
    boolean isInterface() -> c
    boolean implementsInterface(java.lang.String) -> a
    java.lang.String getSuperclass() -> f
    org.jf.dexlib2.analysis.TypeProto getCommonSuperclass(org.jf.dexlib2.analysis.TypeProto) -> a
    org.jf.dexlib2.iface.reference.FieldReference getFieldByOffset(int) -> a
    org.jf.dexlib2.iface.Method getMethodByVtableIndex(int) -> b
    int findMethodIndexInVtable(org.jf.dexlib2.iface.reference.MethodReference) -> a
org.jf.dexlib2.analysis.UnresolvedClassException -> org.c.b.a.t:
    46:47:void <init>(java.lang.String,java.lang.Object[]) -> <init>
org.jf.dexlib2.analysis.UnresolvedOdexInstruction -> org.c.b.a.u:
    org.jf.dexlib2.iface.instruction.Instruction originalInstruction -> a
    int objectRegisterNum -> b
    47:50:void <init>(org.jf.dexlib2.iface.instruction.Instruction,int) -> <init>
    53:53:org.jf.dexlib2.Opcode getOpcode() -> a
    57:57:int getCodeUnits() -> b
org.jf.dexlib2.analysis.util.TypeProtoUtils -> org.c.b.a.a.a:
    56:56:java.lang.Iterable getSuperclassChain(org.jf.dexlib2.analysis.TypeProto) -> a
    87:94:org.jf.dexlib2.analysis.TypeProto getSuperclassAsTypeProto(org.jf.dexlib2.analysis.TypeProto) -> b
    99:107:boolean extendsFrom(org.jf.dexlib2.analysis.TypeProto,java.lang.String) -> a
org.jf.dexlib2.analysis.util.TypeProtoUtils$1 -> org.c.b.a.a.b:
    org.jf.dexlib2.analysis.TypeProto val$typeProto -> a
    56:56:void <init>(org.jf.dexlib2.analysis.TypeProto) -> <init>
    59:59:java.util.Iterator iterator() -> iterator
org.jf.dexlib2.analysis.util.TypeProtoUtils$1$1 -> org.c.b.a.a.c:
    org.jf.dexlib2.analysis.TypeProto type -> b
    org.jf.dexlib2.analysis.util.TypeProtoUtils$1 this$0 -> a
    59:60:void <init>(org.jf.dexlib2.analysis.util.TypeProtoUtils$1) -> <init>
    63:63:boolean hasNext() -> hasNext
    67:73:org.jf.dexlib2.analysis.TypeProto next() -> a
    77:77:void remove() -> remove
    59:59:java.lang.Object next() -> next
org.jf.dexlib2.base.BaseAnnotation -> org.c.b.b.a:
    java.util.Comparator BY_TYPE -> a
    40:40:void <init>() -> <init>
    43:45:int hashCode() -> hashCode
    50:56:boolean equals(java.lang.Object) -> equals
    61:65:int compareTo(org.jf.dexlib2.iface.Annotation) -> a
    40:40:int compareTo(java.lang.Object) -> compareTo
    68:68:void <clinit>() -> <clinit>
org.jf.dexlib2.base.BaseAnnotation$1 -> org.c.b.b.b:
    68:68:void <init>() -> <init>
    71:71:int compare(org.jf.dexlib2.iface.Annotation,org.jf.dexlib2.iface.Annotation) -> a
    68:68:int compare(java.lang.Object,java.lang.Object) -> compare
org.jf.dexlib2.base.BaseAnnotationElement -> org.c.b.b.c:
    java.util.Comparator BY_NAME -> a
    39:39:void <init>() -> <init>
    42:43:int hashCode() -> hashCode
    48:53:boolean equals(java.lang.Object) -> equals
    58:60:int compareTo(org.jf.dexlib2.iface.AnnotationElement) -> a
    39:39:int compareTo(java.lang.Object) -> compareTo
    63:63:void <clinit>() -> <clinit>
org.jf.dexlib2.base.BaseAnnotationElement$1 -> org.c.b.b.d:
    63:63:void <init>() -> <init>
    66:66:int compare(org.jf.dexlib2.iface.AnnotationElement,org.jf.dexlib2.iface.AnnotationElement) -> a
    63:63:int compare(java.lang.Object,java.lang.Object) -> compare
org.jf.dexlib2.base.BaseExceptionHandler -> org.c.b.b.e:
    java.util.Comparator BY_EXCEPTION -> a
    44:44:void <init>() -> <init>
    46:51:org.jf.dexlib2.iface.reference.TypeReference getExceptionTypeReference() -> a
    60:62:int hashCode() -> hashCode
    67:72:boolean equals(java.lang.Object) -> equals
    78:91:int compareTo(org.jf.dexlib2.iface.ExceptionHandler) -> a
    44:44:int compareTo(java.lang.Object) -> compareTo
    96:96:void <clinit>() -> <clinit>
org.jf.dexlib2.base.BaseExceptionHandler$1 -> org.c.b.b.f:
    java.lang.String val$exceptionType -> a
    org.jf.dexlib2.base.BaseExceptionHandler this$0 -> b
    51:51:void <init>(org.jf.dexlib2.base.BaseExceptionHandler,java.lang.String) -> <init>
    53:53:java.lang.String getType() -> a
org.jf.dexlib2.base.BaseExceptionHandler$2 -> org.c.b.b.g:
    96:96:void <init>() -> <init>
    98:109:int compare(org.jf.dexlib2.iface.ExceptionHandler,org.jf.dexlib2.iface.ExceptionHandler) -> a
    96:96:int compare(java.lang.Object,java.lang.Object) -> compare
org.jf.dexlib2.base.BaseMethodParameter -> org.c.b.b.h:
    45:45:void <init>() -> <init>
    49:82:java.lang.String getSignature() -> b
org.jf.dexlib2.base.BaseTryBlock -> org.c.b.b.i:
    37:37:void <init>() -> <init>
    39:45:boolean equals(java.lang.Object) -> equals
org.jf.dexlib2.base.reference.BaseFieldReference -> org.c.b.b.a.a:
    40:40:void <init>() -> <init>
    43:45:int hashCode() -> hashCode
    50:57:boolean equals(java.lang.Object) -> equals
    62:66:int compareTo(org.jf.dexlib2.iface.reference.FieldReference) -> a
    70:70:java.lang.String toString() -> toString
    40:40:int compareTo(java.lang.Object) -> compareTo
org.jf.dexlib2.base.reference.BaseMethodProtoReference -> org.c.b.b.a.b:
    44:44:void <init>() -> <init>
    47:48:int hashCode() -> hashCode
    53:58:boolean equals(java.lang.Object) -> equals
    63:65:int compareTo(org.jf.dexlib2.iface.reference.MethodProtoReference) -> a
    69:69:java.lang.String toString() -> toString
    44:44:int compareTo(java.lang.Object) -> compareTo
org.jf.dexlib2.base.reference.BaseMethodReference -> org.c.b.b.a.c:
    43:43:void <init>() -> <init>
    46:49:int hashCode() -> hashCode
    54:61:boolean equals(java.lang.Object) -> equals
    66:72:int compareTo(org.jf.dexlib2.iface.reference.MethodReference) -> a
    76:76:java.lang.String toString() -> toString
    43:43:int compareTo(java.lang.Object) -> compareTo
org.jf.dexlib2.base.reference.BaseStringReference -> org.c.b.b.a.d:
    39:39:void <init>() -> <init>
    42:42:int hashCode() -> hashCode
    47:50:boolean equals(java.lang.Object) -> equals
    55:55:int compareTo(java.lang.CharSequence) -> a
    58:58:int length() -> length
    59:59:char charAt(int) -> charAt
    60:60:java.lang.CharSequence subSequence(int,int) -> subSequence
    61:61:java.lang.String toString() -> toString
    39:39:int compareTo(java.lang.Object) -> compareTo
org.jf.dexlib2.base.reference.BaseTypeReference -> org.c.b.b.a.e:
    38:38:void <init>() -> <init>
    41:41:int hashCode() -> hashCode
    46:54:boolean equals(java.lang.Object) -> equals
    59:59:int compareTo(java.lang.CharSequence) -> a
    62:62:int length() -> length
    63:63:char charAt(int) -> charAt
    64:64:java.lang.CharSequence subSequence(int,int) -> subSequence
    65:65:java.lang.String toString() -> toString
    38:38:int compareTo(java.lang.Object) -> compareTo
org.jf.dexlib2.base.value.BaseAnnotationEncodedValue -> org.c.b.b.b.a:
    43:43:void <init>() -> <init>
    46:47:int hashCode() -> hashCode
    52:57:boolean equals(java.lang.Object) -> equals
    62:67:int compareTo(org.jf.dexlib2.iface.value.EncodedValue) -> a
    71:71:int getValueType() -> a
    43:43:int compareTo(java.lang.Object) -> compareTo
org.jf.dexlib2.base.value.BaseArrayEncodedValue -> org.c.b.b.b.b:
    43:43:void <init>() -> <init>
    46:46:int hashCode() -> hashCode
    51:54:boolean equals(java.lang.Object) -> equals
    58:60:int compareTo(org.jf.dexlib2.iface.value.EncodedValue) -> a
    63:63:int getValueType() -> a
    43:43:int compareTo(java.lang.Object) -> compareTo
org.jf.dexlib2.base.value.BaseBooleanEncodedValue -> org.c.b.b.b.c:
    43:43:void <init>() -> <init>
    46:46:int hashCode() -> hashCode
    51:54:boolean equals(java.lang.Object) -> equals
    59:61:int compareTo(org.jf.dexlib2.iface.value.EncodedValue) -> a
    64:64:int getValueType() -> a
    43:43:int compareTo(java.lang.Object) -> compareTo
org.jf.dexlib2.base.value.BaseByteEncodedValue -> org.c.b.b.b.d:
    42:42:void <init>() -> <init>
    45:45:int hashCode() -> hashCode
    50:53:boolean equals(java.lang.Object) -> equals
    58:60:int compareTo(org.jf.dexlib2.iface.value.EncodedValue) -> a
    63:63:int getValueType() -> a
    42:42:int compareTo(java.lang.Object) -> compareTo
org.jf.dexlib2.base.value.BaseCharEncodedValue -> org.c.b.b.b.e:
    43:43:void <init>() -> <init>
    46:46:int hashCode() -> hashCode
    51:54:boolean equals(java.lang.Object) -> equals
    59:61:int compareTo(org.jf.dexlib2.iface.value.EncodedValue) -> a
    64:64:int getValueType() -> a
    43:43:int compareTo(java.lang.Object) -> compareTo
org.jf.dexlib2.base.value.BaseDoubleEncodedValue -> org.c.b.b.b.f:
    42:42:void <init>() -> <init>
    45:46:int hashCode() -> hashCode
    51:55:boolean equals(java.lang.Object) -> equals
    60:62:int compareTo(org.jf.dexlib2.iface.value.EncodedValue) -> a
    65:65:int getValueType() -> a
    42:42:int compareTo(java.lang.Object) -> compareTo
org.jf.dexlib2.base.value.BaseEnumEncodedValue -> org.c.b.b.b.g:
    42:42:void <init>() -> <init>
    45:45:int hashCode() -> hashCode
    50:53:boolean equals(java.lang.Object) -> equals
    58:60:int compareTo(org.jf.dexlib2.iface.value.EncodedValue) -> a
    63:63:int getValueType() -> a
    42:42:int compareTo(java.lang.Object) -> compareTo
org.jf.dexlib2.base.value.BaseFieldEncodedValue -> org.c.b.b.b.h:
    42:42:void <init>() -> <init>
    45:45:int hashCode() -> hashCode
    50:53:boolean equals(java.lang.Object) -> equals
    58:60:int compareTo(org.jf.dexlib2.iface.value.EncodedValue) -> a
    63:63:int getValueType() -> a
    42:42:int compareTo(java.lang.Object) -> compareTo
org.jf.dexlib2.base.value.BaseFloatEncodedValue -> org.c.b.b.b.i:
    42:42:void <init>() -> <init>
    45:45:int hashCode() -> hashCode
    50:53:boolean equals(java.lang.Object) -> equals
    58:60:int compareTo(org.jf.dexlib2.iface.value.EncodedValue) -> a
    63:63:int getValueType() -> a
    42:42:int compareTo(java.lang.Object) -> compareTo
org.jf.dexlib2.base.value.BaseIntEncodedValue -> org.c.b.b.b.j:
    42:42:void <init>() -> <init>
    45:45:int hashCode() -> hashCode
    50:53:boolean equals(java.lang.Object) -> equals
    58:60:int compareTo(org.jf.dexlib2.iface.value.EncodedValue) -> a
    63:63:int getValueType() -> a
    42:42:int compareTo(java.lang.Object) -> compareTo
org.jf.dexlib2.base.value.BaseLongEncodedValue -> org.c.b.b.b.k:
    43:43:void <init>() -> <init>
    46:48:int hashCode() -> hashCode
    53:56:boolean equals(java.lang.Object) -> equals
    61:63:int compareTo(org.jf.dexlib2.iface.value.EncodedValue) -> a
    66:66:int getValueType() -> a
    43:43:int compareTo(java.lang.Object) -> compareTo
org.jf.dexlib2.base.value.BaseMethodEncodedValue -> org.c.b.b.b.l:
    42:42:void <init>() -> <init>
    45:45:int hashCode() -> hashCode
    50:53:boolean equals(java.lang.Object) -> equals
    58:60:int compareTo(org.jf.dexlib2.iface.value.EncodedValue) -> a
    63:63:int getValueType() -> a
    42:42:int compareTo(java.lang.Object) -> compareTo
org.jf.dexlib2.base.value.BaseNullEncodedValue -> org.c.b.b.b.m:
    42:42:void <init>() -> <init>
    45:45:int hashCode() -> hashCode
    50:50:boolean equals(java.lang.Object) -> equals
    55:55:int compareTo(org.jf.dexlib2.iface.value.EncodedValue) -> a
    58:58:int getValueType() -> a
    42:42:int compareTo(java.lang.Object) -> compareTo
org.jf.dexlib2.base.value.BaseShortEncodedValue -> org.c.b.b.b.n:
    43:43:void <init>() -> <init>
    46:46:int hashCode() -> hashCode
    51:54:boolean equals(java.lang.Object) -> equals
    59:61:int compareTo(org.jf.dexlib2.iface.value.EncodedValue) -> a
    64:64:int getValueType() -> a
    43:43:int compareTo(java.lang.Object) -> compareTo
org.jf.dexlib2.base.value.BaseStringEncodedValue -> org.c.b.b.b.o:
    42:42:void <init>() -> <init>
    45:45:int hashCode() -> hashCode
    50:53:boolean equals(java.lang.Object) -> equals
    58:60:int compareTo(org.jf.dexlib2.iface.value.EncodedValue) -> a
    63:63:int getValueType() -> a
    42:42:int compareTo(java.lang.Object) -> compareTo
org.jf.dexlib2.base.value.BaseTypeEncodedValue -> org.c.b.b.b.p:
    42:42:void <init>() -> <init>
    45:45:int hashCode() -> hashCode
    50:53:boolean equals(java.lang.Object) -> equals
    58:60:int compareTo(org.jf.dexlib2.iface.value.EncodedValue) -> a
    63:63:int getValueType() -> a
    42:42:int compareTo(java.lang.Object) -> compareTo
org.jf.dexlib2.builder.BuilderDebugItem -> org.c.b.c.a:
    org.jf.dexlib2.builder.MethodLocation location -> a
    41:42:void <init>() -> <init>
    45:49:int getCodeAddress() -> c
org.jf.dexlib2.builder.BuilderExceptionHandler -> org.c.b.c.b:
    org.jf.dexlib2.builder.Label handler -> b
    43:45:void <init>(org.jf.dexlib2.builder.Label) -> <init>
    54:57:org.jf.dexlib2.builder.BuilderExceptionHandler newExceptionHandler(org.jf.dexlib2.iface.reference.TypeReference,org.jf.dexlib2.builder.Label) -> a
    73:73:org.jf.dexlib2.builder.BuilderExceptionHandler newExceptionHandler(org.jf.dexlib2.builder.Label) -> a
    40:40:void <init>(org.jf.dexlib2.builder.Label,org.jf.dexlib2.builder.BuilderExceptionHandler$1) -> <init>
org.jf.dexlib2.builder.BuilderExceptionHandler$1 -> org.c.b.c.c:
    org.jf.dexlib2.iface.reference.TypeReference val$exceptionType -> c
    57:57:void <init>(org.jf.dexlib2.builder.Label,org.jf.dexlib2.iface.reference.TypeReference) -> <init>
    59:59:java.lang.String getExceptionType() -> b
    63:63:int getHandlerCodeAddress() -> c
    67:67:org.jf.dexlib2.iface.reference.TypeReference getExceptionTypeReference() -> a
org.jf.dexlib2.builder.BuilderExceptionHandler$2 -> org.c.b.c.d:
    73:73:void <init>(org.jf.dexlib2.builder.Label) -> <init>
    75:75:java.lang.String getExceptionType() -> b
    79:79:int getHandlerCodeAddress() -> c
org.jf.dexlib2.builder.BuilderInstruction -> org.c.b.c.e:
    org.jf.dexlib2.Opcode opcode -> a
    org.jf.dexlib2.builder.MethodLocation location -> b
    47:50:void <init>(org.jf.dexlib2.Opcode) -> <init>
    53:53:org.jf.dexlib2.Opcode getOpcode() -> a
    org.jf.dexlib2.Format getFormat() -> c
    59:59:int getCodeUnits() -> b
    64:68:org.jf.dexlib2.builder.MethodLocation getLocation() -> d
org.jf.dexlib2.builder.BuilderOffsetInstruction -> org.c.b.c.f:
    org.jf.dexlib2.builder.Label target -> c
    46:48:void <init>(org.jf.dexlib2.Opcode,org.jf.dexlib2.builder.Label) -> <init>
    51:63:int getCodeOffset() -> e
    68:68:int internalGetCodeOffset() -> f
    73:73:org.jf.dexlib2.builder.Label getTarget() -> g
org.jf.dexlib2.builder.BuilderSwitchPayload -> org.c.b.c.g:
    org.jf.dexlib2.builder.MethodLocation referrer -> c
    47:48:void <init>(org.jf.dexlib2.Opcode) -> <init>
    52:55:org.jf.dexlib2.builder.MethodLocation getReferrer() -> e
org.jf.dexlib2.builder.BuilderTryBlock -> org.c.b.c.h:
    org.jf.dexlib2.builder.BuilderExceptionHandler exceptionHandler -> a
    org.jf.dexlib2.builder.Label start -> b
    org.jf.dexlib2.builder.Label end -> c
    58:62:void <init>(org.jf.dexlib2.builder.Label,org.jf.dexlib2.builder.Label,org.jf.dexlib2.iface.reference.TypeReference,org.jf.dexlib2.builder.Label) -> <init>
    64:68:void <init>(org.jf.dexlib2.builder.Label,org.jf.dexlib2.builder.Label,org.jf.dexlib2.builder.Label) -> <init>
    71:71:int getStartCodeAddress() -> a
    75:75:int getCodeUnitCount() -> b
    79:79:java.util.List getExceptionHandlers() -> c
org.jf.dexlib2.builder.Label -> org.c.b.c.i:
    org.jf.dexlib2.builder.MethodLocation location -> a
    40:41:void <init>() -> <init>
    43:45:void <init>(org.jf.dexlib2.builder.MethodLocation) -> <init>
    48:48:int getCodeAddress() -> a
    53:56:org.jf.dexlib2.builder.MethodLocation getLocation() -> b
    60:60:boolean isPlaced() -> c
org.jf.dexlib2.builder.MethodImplementationBuilder -> org.c.b.c.j:
    java.util.HashMap labels -> a
    org.jf.dexlib2.builder.MutableMethodImplementation impl -> b
    org.jf.dexlib2.builder.MethodLocation currentLocation -> c
    44:54:void <init>(int) -> <init>
    57:57:org.jf.dexlib2.iface.MethodImplementation getMethodImplementation() -> a
    70:83:org.jf.dexlib2.builder.Label addLabel(java.lang.String) -> a
    98:103:org.jf.dexlib2.builder.Label getLabel(java.lang.String) -> b
    108:109:void addCatch(org.jf.dexlib2.iface.reference.TypeReference,org.jf.dexlib2.builder.Label,org.jf.dexlib2.builder.Label,org.jf.dexlib2.builder.Label) -> a
    117:118:void addCatch(org.jf.dexlib2.builder.Label,org.jf.dexlib2.builder.Label,org.jf.dexlib2.builder.Label) -> a
    121:122:void addLineNumber(int) -> a
    126:127:void addStartLocal(int,org.jf.dexlib2.iface.reference.StringReference,org.jf.dexlib2.iface.reference.TypeReference,org.jf.dexlib2.iface.reference.StringReference) -> a
    130:131:void addEndLocal(int) -> b
    134:135:void addRestartLocal(int) -> c
    138:139:void addPrologue() -> b
    142:143:void addEpilogue() -> c
    146:147:void addSetSourceFile(org.jf.dexlib2.iface.reference.StringReference) -> a
    150:152:void addInstruction(org.jf.dexlib2.builder.BuilderInstruction) -> a
org.jf.dexlib2.builder.MethodLocation -> org.c.b.c.k:
    org.jf.dexlib2.builder.BuilderInstruction instruction -> a
    int codeAddress -> b
    int index -> c
    java.util.List labels -> d
    java.util.List debugItems -> e
    53:62:void <init>(org.jf.dexlib2.builder.BuilderInstruction,int,int) -> <init>
    66:66:org.jf.dexlib2.iface.instruction.Instruction getInstruction() -> a
    70:70:int getCodeAddress() -> b
    79:86:java.util.List getLabels(boolean) -> a
    91:98:java.util.List getDebugItems(boolean) -> b
    102:122:void mergeInto(org.jf.dexlib2.builder.MethodLocation) -> a
    126:126:java.util.Set getLabels() -> c
    170:172:org.jf.dexlib2.builder.Label addNewLabel() -> d
    177:177:java.util.Set getDebugItems() -> e
    220:221:void addLineNumber(int) -> a
    225:226:void addStartLocal(int,org.jf.dexlib2.iface.reference.StringReference,org.jf.dexlib2.iface.reference.TypeReference,org.jf.dexlib2.iface.reference.StringReference) -> a
    229:230:void addEndLocal(int) -> b
    233:234:void addRestartLocal(int) -> c
    237:238:void addPrologue() -> f
    241:242:void addEpilogue() -> g
    245:246:void addSetSourceFile(org.jf.dexlib2.iface.reference.StringReference) -> a
    44:44:java.util.List access$000(org.jf.dexlib2.builder.MethodLocation,boolean) -> a
    44:44:java.util.List access$100(org.jf.dexlib2.builder.MethodLocation,boolean) -> b
org.jf.dexlib2.builder.MethodLocation$1 -> org.c.b.c.l:
    org.jf.dexlib2.builder.MethodLocation this$0 -> a
    126:126:void <init>(org.jf.dexlib2.builder.MethodLocation) -> <init>
    129:131:java.util.Iterator iterator() -> iterator
    153:153:int size() -> size
    157:163:boolean add(org.jf.dexlib2.builder.Label) -> a
    126:126:boolean add(java.lang.Object) -> add
org.jf.dexlib2.builder.MethodLocation$1$1 -> org.c.b.c.m:
    org.jf.dexlib2.builder.Label currentLabel -> c
    java.util.Iterator val$it -> a
    org.jf.dexlib2.builder.MethodLocation$1 this$1 -> b
    131:132:void <init>(org.jf.dexlib2.builder.MethodLocation$1,java.util.Iterator) -> <init>
    135:135:boolean hasNext() -> hasNext
    139:140:org.jf.dexlib2.builder.Label next() -> a
    144:148:void remove() -> remove
    131:131:java.lang.Object next() -> next
org.jf.dexlib2.builder.MethodLocation$2 -> org.c.b.c.n:
    org.jf.dexlib2.builder.MethodLocation this$0 -> a
    177:177:void <init>(org.jf.dexlib2.builder.MethodLocation) -> <init>
    180:182:java.util.Iterator iterator() -> iterator
    204:204:int size() -> size
    208:214:boolean add(org.jf.dexlib2.builder.BuilderDebugItem) -> a
    177:177:boolean add(java.lang.Object) -> add
org.jf.dexlib2.builder.MethodLocation$2$1 -> org.c.b.c.o:
    org.jf.dexlib2.builder.BuilderDebugItem currentDebugItem -> c
    java.util.Iterator val$it -> a
    org.jf.dexlib2.builder.MethodLocation$2 this$1 -> b
    182:183:void <init>(org.jf.dexlib2.builder.MethodLocation$2,java.util.Iterator) -> <init>
    186:186:boolean hasNext() -> hasNext
    190:191:org.jf.dexlib2.builder.BuilderDebugItem next() -> a
    195:199:void remove() -> remove
    182:182:java.lang.Object next() -> next
org.jf.dexlib2.builder.MutableMethodImplementation -> org.c.b.c.p:
    int registerCount -> c
    java.util.ArrayList instructionList -> a
    java.util.ArrayList tryBlocks -> d
    boolean fixInstructions -> e
    boolean $assertionsDisabled -> b
    58:124:void <init>(org.jf.dexlib2.iface.MethodImplementation) -> <init>
    58:132:void <init>(int) -> <init>
    135:135:int getRegisterCount() -> a
    140:144:java.util.List getInstructions() -> b
    166:169:java.util.List getTryBlocks() -> c
    173:177:java.lang.Iterable getDebugItems() -> d
    191:192:void addCatch(org.jf.dexlib2.iface.reference.TypeReference,org.jf.dexlib2.builder.Label,org.jf.dexlib2.builder.Label,org.jf.dexlib2.builder.Label) -> a
    200:201:void addCatch(org.jf.dexlib2.builder.Label,org.jf.dexlib2.builder.Label,org.jf.dexlib2.builder.Label) -> a
    207:235:void addInstruction(int,org.jf.dexlib2.builder.BuilderInstruction) -> a
    238:246:void addInstruction(org.jf.dexlib2.builder.BuilderInstruction) -> a
    249:275:void replaceInstruction(int,org.jf.dexlib2.builder.BuilderInstruction) -> b
    278:303:void removeInstruction(int) -> a
    347:354:org.jf.dexlib2.builder.BuilderInstruction getFirstNonNop(int) -> b
    358:471:void fixInstructions() -> f
    476:480:int mapCodeAddressToIndex(int[],int) -> a
    530:531:org.jf.dexlib2.builder.Label newLabel(int[],int) -> b
    541:545:org.jf.dexlib2.builder.Label newSwitchPayloadReferenceLabel(org.jf.dexlib2.builder.MethodLocation,int[],int) -> a
    549:551:void setInstruction(org.jf.dexlib2.builder.MethodLocation,org.jf.dexlib2.builder.BuilderInstruction) -> a
    555:672:void convertAndSetInstruction(org.jf.dexlib2.builder.MethodLocation,int[],org.jf.dexlib2.iface.instruction.Instruction) -> a
    679:681:org.jf.dexlib2.builder.instruction.BuilderInstruction10t newBuilderInstruction10t(int,int[],org.jf.dexlib2.iface.instruction.formats.Instruction10t) -> a
    686:687:org.jf.dexlib2.builder.instruction.BuilderInstruction10x newBuilderInstruction10x(org.jf.dexlib2.iface.instruction.formats.Instruction10x) -> a
    692:695:org.jf.dexlib2.builder.instruction.BuilderInstruction11n newBuilderInstruction11n(org.jf.dexlib2.iface.instruction.formats.Instruction11n) -> a
    700:702:org.jf.dexlib2.builder.instruction.BuilderInstruction11x newBuilderInstruction11x(org.jf.dexlib2.iface.instruction.formats.Instruction11x) -> a
    707:710:org.jf.dexlib2.builder.instruction.BuilderInstruction12x newBuilderInstruction12x(org.jf.dexlib2.iface.instruction.formats.Instruction12x) -> a
    715:718:org.jf.dexlib2.builder.instruction.BuilderInstruction20bc newBuilderInstruction20bc(org.jf.dexlib2.iface.instruction.formats.Instruction20bc) -> a
    724:726:org.jf.dexlib2.builder.instruction.BuilderInstruction20t newBuilderInstruction20t(int,int[],org.jf.dexlib2.iface.instruction.formats.Instruction20t) -> a
    731:734:org.jf.dexlib2.builder.instruction.BuilderInstruction21c newBuilderInstruction21c(org.jf.dexlib2.iface.instruction.formats.Instruction21c) -> a
    739:742:org.jf.dexlib2.builder.instruction.BuilderInstruction21ih newBuilderInstruction21ih(org.jf.dexlib2.iface.instruction.formats.Instruction21ih) -> a
    747:750:org.jf.dexlib2.builder.instruction.BuilderInstruction21lh newBuilderInstruction21lh(org.jf.dexlib2.iface.instruction.formats.Instruction21lh) -> a
    755:758:org.jf.dexlib2.builder.instruction.BuilderInstruction21s newBuilderInstruction21s(org.jf.dexlib2.iface.instruction.formats.Instruction21s) -> a
    764:767:org.jf.dexlib2.builder.instruction.BuilderInstruction21t newBuilderInstruction21t(int,int[],org.jf.dexlib2.iface.instruction.formats.Instruction21t) -> a
    772:776:org.jf.dexlib2.builder.instruction.BuilderInstruction22b newBuilderInstruction22b(org.jf.dexlib2.iface.instruction.formats.Instruction22b) -> a
    781:785:org.jf.dexlib2.builder.instruction.BuilderInstruction22c newBuilderInstruction22c(org.jf.dexlib2.iface.instruction.formats.Instruction22c) -> a
    790:794:org.jf.dexlib2.builder.instruction.BuilderInstruction22cs newBuilderInstruction22cs(org.jf.dexlib2.iface.instruction.formats.Instruction22cs) -> a
    799:803:org.jf.dexlib2.builder.instruction.BuilderInstruction22s newBuilderInstruction22s(org.jf.dexlib2.iface.instruction.formats.Instruction22s) -> a
    809:813:org.jf.dexlib2.builder.instruction.BuilderInstruction22t newBuilderInstruction22t(int,int[],org.jf.dexlib2.iface.instruction.formats.Instruction22t) -> a
    818:821:org.jf.dexlib2.builder.instruction.BuilderInstruction22x newBuilderInstruction22x(org.jf.dexlib2.iface.instruction.formats.Instruction22x) -> a
    826:830:org.jf.dexlib2.builder.instruction.BuilderInstruction23x newBuilderInstruction23x(org.jf.dexlib2.iface.instruction.formats.Instruction23x) -> a
    836:838:org.jf.dexlib2.builder.instruction.BuilderInstruction30t newBuilderInstruction30t(int,int[],org.jf.dexlib2.iface.instruction.formats.Instruction30t) -> a
    843:846:org.jf.dexlib2.builder.instruction.BuilderInstruction31c newBuilderInstruction31c(org.jf.dexlib2.iface.instruction.formats.Instruction31c) -> a
    851:854:org.jf.dexlib2.builder.instruction.BuilderInstruction31i newBuilderInstruction31i(org.jf.dexlib2.iface.instruction.formats.Instruction31i) -> a
    860:870:org.jf.dexlib2.builder.instruction.BuilderInstruction31t newBuilderInstruction31t(org.jf.dexlib2.builder.MethodLocation,int[],org.jf.dexlib2.iface.instruction.formats.Instruction31t) -> a
    876:879:org.jf.dexlib2.builder.instruction.BuilderInstruction32x newBuilderInstruction32x(org.jf.dexlib2.iface.instruction.formats.Instruction32x) -> a
    884:892:org.jf.dexlib2.builder.instruction.BuilderInstruction35c newBuilderInstruction35c(org.jf.dexlib2.iface.instruction.formats.Instruction35c) -> a
    897:905:org.jf.dexlib2.builder.instruction.BuilderInstruction35mi newBuilderInstruction35mi(org.jf.dexlib2.iface.instruction.formats.Instruction35mi) -> a
    910:918:org.jf.dexlib2.builder.instruction.BuilderInstruction35ms newBuilderInstruction35ms(org.jf.dexlib2.iface.instruction.formats.Instruction35ms) -> a
    923:927:org.jf.dexlib2.builder.instruction.BuilderInstruction3rc newBuilderInstruction3rc(org.jf.dexlib2.iface.instruction.formats.Instruction3rc) -> a
    932:936:org.jf.dexlib2.builder.instruction.BuilderInstruction3rmi newBuilderInstruction3rmi(org.jf.dexlib2.iface.instruction.formats.Instruction3rmi) -> a
    941:945:org.jf.dexlib2.builder.instruction.BuilderInstruction3rms newBuilderInstruction3rms(org.jf.dexlib2.iface.instruction.formats.Instruction3rms) -> a
    950:953:org.jf.dexlib2.builder.instruction.BuilderInstruction51l newBuilderInstruction51l(org.jf.dexlib2.iface.instruction.formats.Instruction51l) -> a
    958:981:org.jf.dexlib2.builder.MethodLocation findSwitchForPayload(org.jf.dexlib2.builder.MethodLocation) -> a
    990:1008:org.jf.dexlib2.builder.instruction.BuilderPackedSwitchPayload newBuilderPackedSwitchPayload(org.jf.dexlib2.builder.MethodLocation,int[],org.jf.dexlib2.iface.instruction.formats.PackedSwitchPayload) -> a
    1015:1034:org.jf.dexlib2.builder.instruction.BuilderSparseSwitchPayload newBuilderSparseSwitchPayload(org.jf.dexlib2.builder.MethodLocation,int[],org.jf.dexlib2.iface.instruction.formats.SparseSwitchPayload) -> a
    1039:1039:org.jf.dexlib2.builder.instruction.BuilderArrayPayload newBuilderArrayPayload(org.jf.dexlib2.iface.instruction.formats.ArrayPayload) -> a
    1044:1071:org.jf.dexlib2.builder.BuilderDebugItem convertDebugItem(org.jf.dexlib2.iface.debug.DebugItem) -> a
    56:56:java.lang.Iterable getInstructions() -> e
    56:56:void access$000(org.jf.dexlib2.builder.MutableMethodImplementation,org.jf.dexlib2.builder.MethodLocation,int[],org.jf.dexlib2.iface.instruction.Instruction) -> a
    56:56:boolean access$100(org.jf.dexlib2.builder.MutableMethodImplementation) -> a
    56:56:void access$200(org.jf.dexlib2.builder.MutableMethodImplementation) -> b
    56:56:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.MutableMethodImplementation$1 -> org.c.b.c.q:
    org.jf.dexlib2.builder.MethodLocation val$location -> a
    int[] val$codeAddressToIndex -> b
    org.jf.dexlib2.iface.instruction.Instruction val$instruction -> c
    org.jf.dexlib2.builder.MutableMethodImplementation this$0 -> d
    88:88:void <init>(org.jf.dexlib2.builder.MutableMethodImplementation,org.jf.dexlib2.builder.MethodLocation,int[],org.jf.dexlib2.iface.instruction.Instruction) -> <init>
    90:91:void perform() -> a
org.jf.dexlib2.builder.MutableMethodImplementation$2 -> org.c.b.c.r:
    org.jf.dexlib2.builder.MutableMethodImplementation this$0 -> a
    144:144:void <init>(org.jf.dexlib2.builder.MutableMethodImplementation) -> <init>
    146:152:org.jf.dexlib2.builder.BuilderInstruction get(int) -> a
    156:160:int size() -> size
    144:144:java.lang.Object get(int) -> get
org.jf.dexlib2.builder.MutableMethodImplementation$3 -> org.c.b.c.s:
    boolean $assertionsDisabled -> a
    org.jf.dexlib2.builder.MutableMethodImplementation this$0 -> b
    177:177:void <init>(org.jf.dexlib2.builder.MutableMethodImplementation) -> <init>
    179:184:java.lang.Iterable apply(org.jf.dexlib2.builder.MethodLocation) -> a
    177:177:java.lang.Object apply(java.lang.Object) -> a
    177:177:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.MutableMethodImplementation$4 -> org.c.b.c.t:
    int[] $SwitchMap$org$jf$dexlib2$Opcode -> a
    int[] $SwitchMap$org$jf$dexlib2$Format -> b
    363:555:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.MutableMethodImplementation$SwitchPayloadReferenceLabel -> org.c.b.c.u:
    org.jf.dexlib2.builder.MethodLocation switchLocation -> b
    534:534:void <init>() -> <init>
    534:534:void <init>(org.jf.dexlib2.builder.MutableMethodImplementation$1) -> <init>
org.jf.dexlib2.builder.MutableMethodImplementation$Task -> org.c.b.c.v:
    void perform() -> a
org.jf.dexlib2.builder.SwitchLabelElement -> org.c.b.c.w:
    int key -> a
    org.jf.dexlib2.builder.Label target -> b
    40:43:void <init>(int,org.jf.dexlib2.builder.Label) -> <init>
org.jf.dexlib2.builder.debug.BuilderEndLocal -> org.c.b.c.a.a:
    int register -> b
    43:45:void <init>(int) -> <init>
    47:47:int getRegister() -> d
    48:48:java.lang.String getName() -> e
    49:49:java.lang.String getType() -> a
    50:50:java.lang.String getSignature() -> b
    52:52:int getDebugItemType() -> f
org.jf.dexlib2.builder.debug.BuilderEpilogueBegin -> org.c.b.c.a.b:
    39:40:void <init>() -> <init>
    42:42:int getDebugItemType() -> f
org.jf.dexlib2.builder.debug.BuilderLineNumber -> org.c.b.c.a.c:
    int lineNumber -> b
    41:43:void <init>(int) -> <init>
    45:45:int getLineNumber() -> a
    47:47:int getDebugItemType() -> f
org.jf.dexlib2.builder.debug.BuilderPrologueEnd -> org.c.b.c.a.d:
    39:40:void <init>() -> <init>
    42:42:int getDebugItemType() -> f
org.jf.dexlib2.builder.debug.BuilderRestartLocal -> org.c.b.c.a.e:
    int register -> b
    43:45:void <init>(int) -> <init>
    47:47:int getRegister() -> d
    48:48:java.lang.String getName() -> e
    49:49:java.lang.String getType() -> a
    50:50:java.lang.String getSignature() -> b
    52:52:int getDebugItemType() -> f
org.jf.dexlib2.builder.debug.BuilderSetSourceFile -> org.c.b.c.a.f:
    org.jf.dexlib2.iface.reference.StringReference sourceFile -> b
    45:47:void <init>(org.jf.dexlib2.iface.reference.StringReference) -> <init>
    49:49:int getDebugItemType() -> f
    52:52:java.lang.String getSourceFile() -> a
    56:56:org.jf.dexlib2.iface.reference.StringReference getSourceFileReference() -> b
org.jf.dexlib2.builder.debug.BuilderStartLocal -> org.c.b.c.a.g:
    int register -> b
    org.jf.dexlib2.iface.reference.StringReference name -> c
    org.jf.dexlib2.iface.reference.TypeReference type -> d
    org.jf.dexlib2.iface.reference.StringReference signature -> e
    51:56:void <init>(int,org.jf.dexlib2.iface.reference.StringReference,org.jf.dexlib2.iface.reference.TypeReference,org.jf.dexlib2.iface.reference.StringReference) -> <init>
    58:58:int getRegister() -> d
    60:60:org.jf.dexlib2.iface.reference.StringReference getNameReference() -> g
    61:61:org.jf.dexlib2.iface.reference.TypeReference getTypeReference() -> h
    62:62:org.jf.dexlib2.iface.reference.StringReference getSignatureReference() -> i
    65:65:java.lang.String getName() -> e
    69:69:java.lang.String getType() -> a
    73:73:java.lang.String getSignature() -> b
    76:76:int getDebugItemType() -> f
org.jf.dexlib2.builder.instruction.BuilderArrayPayload -> org.c.b.c.b.a:
    org.jf.dexlib2.Opcode OPCODE -> c
    int elementWidth -> d
    java.util.List arrayElements -> e
    52:55:void <init>(int,java.util.List) -> <init>
    57:57:int getElementWidth() -> e
    58:58:java.util.List getArrayElements() -> f
    60:60:int getCodeUnits() -> b
    61:61:org.jf.dexlib2.Format getFormat() -> c
    45:45:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.instruction.BuilderInstruction10t -> org.c.b.c.b.b:
    org.jf.dexlib2.Format FORMAT -> d
    47:48:void <init>(org.jf.dexlib2.Opcode,org.jf.dexlib2.builder.Label) -> <init>
    50:50:org.jf.dexlib2.Format getFormat() -> c
    43:43:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.instruction.BuilderInstruction10x -> org.c.b.c.b.c:
    org.jf.dexlib2.Format FORMAT -> c
    45:46:void <init>(org.jf.dexlib2.Opcode) -> <init>
    48:48:org.jf.dexlib2.Format getFormat() -> c
    42:42:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.instruction.BuilderInstruction11n -> org.c.b.c.b.d:
    org.jf.dexlib2.Format FORMAT -> c
    int registerA -> d
    int literal -> e
    51:54:void <init>(org.jf.dexlib2.Opcode,int,int) -> <init>
    56:56:int getRegisterA() -> d_
    57:57:int getNarrowLiteral() -> f
    58:58:long getWideLiteral() -> g
    60:60:org.jf.dexlib2.Format getFormat() -> c
    43:43:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.instruction.BuilderInstruction11x -> org.c.b.c.b.e:
    org.jf.dexlib2.Format FORMAT -> c
    int registerA -> d
    49:51:void <init>(org.jf.dexlib2.Opcode,int) -> <init>
    53:53:int getRegisterA() -> d_
    55:55:org.jf.dexlib2.Format getFormat() -> c
    43:43:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.instruction.BuilderInstruction12x -> org.c.b.c.b.f:
    org.jf.dexlib2.Format FORMAT -> c
    int registerA -> d
    int registerB -> e
    51:54:void <init>(org.jf.dexlib2.Opcode,int,int) -> <init>
    56:56:int getRegisterA() -> d_
    57:57:int getRegisterB() -> e_
    59:59:org.jf.dexlib2.Format getFormat() -> c
    43:43:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.instruction.BuilderInstruction20bc -> org.c.b.c.b.g:
    org.jf.dexlib2.Format FORMAT -> c
    int verificationError -> d
    org.jf.dexlib2.iface.reference.Reference reference -> e
    53:56:void <init>(org.jf.dexlib2.Opcode,int,org.jf.dexlib2.iface.reference.Reference) -> <init>
    58:58:int getVerificationError() -> e
    59:59:org.jf.dexlib2.iface.reference.Reference getReference() -> f
    60:60:int getReferenceType() -> g
    62:62:org.jf.dexlib2.Format getFormat() -> c
    45:45:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.instruction.BuilderInstruction20t -> org.c.b.c.b.h:
    org.jf.dexlib2.Format FORMAT -> d
    47:48:void <init>(org.jf.dexlib2.Opcode,org.jf.dexlib2.builder.Label) -> <init>
    50:50:org.jf.dexlib2.Format getFormat() -> c
    43:43:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.instruction.BuilderInstruction21c -> org.c.b.c.b.i:
    org.jf.dexlib2.Format FORMAT -> c
    int registerA -> d
    org.jf.dexlib2.iface.reference.Reference reference -> e
    52:55:void <init>(org.jf.dexlib2.Opcode,int,org.jf.dexlib2.iface.reference.Reference) -> <init>
    57:57:int getRegisterA() -> d_
    58:58:org.jf.dexlib2.iface.reference.Reference getReference() -> f
    59:59:int getReferenceType() -> g
    61:61:org.jf.dexlib2.Format getFormat() -> c
    44:44:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.instruction.BuilderInstruction21ih -> org.c.b.c.b.j:
    org.jf.dexlib2.Format FORMAT -> c
    int registerA -> d
    int literal -> e
    51:54:void <init>(org.jf.dexlib2.Opcode,int,int) -> <init>
    56:56:int getRegisterA() -> d_
    57:57:int getNarrowLiteral() -> f
    58:58:long getWideLiteral() -> g
    59:59:short getHatLiteral() -> h
    61:61:org.jf.dexlib2.Format getFormat() -> c
    43:43:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.instruction.BuilderInstruction21lh -> org.c.b.c.b.k:
    org.jf.dexlib2.Format FORMAT -> c
    int registerA -> d
    long literal -> e
    51:54:void <init>(org.jf.dexlib2.Opcode,int,long) -> <init>
    56:56:int getRegisterA() -> d_
    57:57:long getWideLiteral() -> g
    58:58:short getHatLiteral() -> h
    60:60:org.jf.dexlib2.Format getFormat() -> c
    43:43:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.instruction.BuilderInstruction21s -> org.c.b.c.b.l:
    org.jf.dexlib2.Format FORMAT -> c
    int registerA -> d
    int literal -> e
    51:54:void <init>(org.jf.dexlib2.Opcode,int,int) -> <init>
    56:56:int getRegisterA() -> d_
    57:57:int getNarrowLiteral() -> f
    58:58:long getWideLiteral() -> g
    60:60:org.jf.dexlib2.Format getFormat() -> c
    43:43:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.instruction.BuilderInstruction21t -> org.c.b.c.b.m:
    org.jf.dexlib2.Format FORMAT -> d
    int registerA -> e
    51:53:void <init>(org.jf.dexlib2.Opcode,int,org.jf.dexlib2.builder.Label) -> <init>
    55:55:int getRegisterA() -> d_
    57:57:org.jf.dexlib2.Format getFormat() -> c
    44:44:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.instruction.BuilderInstruction22b -> org.c.b.c.b.n:
    org.jf.dexlib2.Format FORMAT -> c
    int registerA -> d
    int registerB -> e
    int literal -> f
    53:57:void <init>(org.jf.dexlib2.Opcode,int,int,int) -> <init>
    59:59:int getRegisterA() -> d_
    60:60:int getRegisterB() -> e_
    61:61:int getNarrowLiteral() -> f
    62:62:long getWideLiteral() -> g
    64:64:org.jf.dexlib2.Format getFormat() -> c
    43:43:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.instruction.BuilderInstruction22c -> org.c.b.c.b.o:
    org.jf.dexlib2.Format FORMAT -> c
    int registerA -> d
    int registerB -> e
    org.jf.dexlib2.iface.reference.Reference reference -> f
    54:58:void <init>(org.jf.dexlib2.Opcode,int,int,org.jf.dexlib2.iface.reference.Reference) -> <init>
    60:60:int getRegisterA() -> d_
    61:61:int getRegisterB() -> e_
    62:62:org.jf.dexlib2.iface.reference.Reference getReference() -> f
    63:63:int getReferenceType() -> g
    65:65:org.jf.dexlib2.Format getFormat() -> c
    44:44:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.instruction.BuilderInstruction22cs -> org.c.b.c.b.p:
    org.jf.dexlib2.Format FORMAT -> c
    int registerA -> d
    int registerB -> e
    int fieldOffset -> f
    55:59:void <init>(org.jf.dexlib2.Opcode,int,int,int) -> <init>
    61:61:int getRegisterA() -> d_
    62:62:int getRegisterB() -> e_
    63:63:int getFieldOffset() -> g
    64:64:org.jf.dexlib2.Format getFormat() -> c
    45:45:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.instruction.BuilderInstruction22s -> org.c.b.c.b.q:
    org.jf.dexlib2.Format FORMAT -> c
    int registerA -> d
    int registerB -> e
    int literal -> f
    53:57:void <init>(org.jf.dexlib2.Opcode,int,int,int) -> <init>
    59:59:int getRegisterA() -> d_
    60:60:int getRegisterB() -> e_
    61:61:int getNarrowLiteral() -> f
    62:62:long getWideLiteral() -> g
    64:64:org.jf.dexlib2.Format getFormat() -> c
    43:43:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.instruction.BuilderInstruction22t -> org.c.b.c.b.r:
    org.jf.dexlib2.Format FORMAT -> d
    int registerA -> e
    int registerB -> f
    53:56:void <init>(org.jf.dexlib2.Opcode,int,int,org.jf.dexlib2.builder.Label) -> <init>
    58:58:int getRegisterA() -> d_
    59:59:int getRegisterB() -> e_
    61:61:org.jf.dexlib2.Format getFormat() -> c
    44:44:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.instruction.BuilderInstruction22x -> org.c.b.c.b.s:
    org.jf.dexlib2.Format FORMAT -> c
    int registerA -> d
    int registerB -> e
    51:54:void <init>(org.jf.dexlib2.Opcode,int,int) -> <init>
    56:56:int getRegisterA() -> d_
    57:57:int getRegisterB() -> e_
    59:59:org.jf.dexlib2.Format getFormat() -> c
    43:43:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.instruction.BuilderInstruction23x -> org.c.b.c.b.t:
    org.jf.dexlib2.Format FORMAT -> c
    int registerA -> d
    int registerB -> e
    int registerC -> f
    53:57:void <init>(org.jf.dexlib2.Opcode,int,int,int) -> <init>
    59:59:int getRegisterA() -> d_
    60:60:int getRegisterB() -> e_
    61:61:int getRegisterC() -> g
    63:63:org.jf.dexlib2.Format getFormat() -> c
    43:43:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.instruction.BuilderInstruction30t -> org.c.b.c.b.u:
    org.jf.dexlib2.Format FORMAT -> d
    47:48:void <init>(org.jf.dexlib2.Opcode,org.jf.dexlib2.builder.Label) -> <init>
    50:50:org.jf.dexlib2.Format getFormat() -> c
    43:43:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.instruction.BuilderInstruction31c -> org.c.b.c.b.v:
    org.jf.dexlib2.Format FORMAT -> c
    int registerA -> d
    org.jf.dexlib2.iface.reference.Reference reference -> e
    52:55:void <init>(org.jf.dexlib2.Opcode,int,org.jf.dexlib2.iface.reference.Reference) -> <init>
    57:57:int getRegisterA() -> d_
    58:58:org.jf.dexlib2.iface.reference.Reference getReference() -> f
    59:59:int getReferenceType() -> g
    61:61:org.jf.dexlib2.Format getFormat() -> c
    44:44:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.instruction.BuilderInstruction31i -> org.c.b.c.b.w:
    org.jf.dexlib2.Format FORMAT -> c
    int registerA -> d
    int literal -> e
    51:54:void <init>(org.jf.dexlib2.Opcode,int,int) -> <init>
    56:56:int getRegisterA() -> d_
    57:57:int getNarrowLiteral() -> f
    58:58:long getWideLiteral() -> g
    60:60:org.jf.dexlib2.Format getFormat() -> c
    43:43:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.instruction.BuilderInstruction31t -> org.c.b.c.b.x:
    org.jf.dexlib2.Format FORMAT -> d
    int registerA -> e
    51:53:void <init>(org.jf.dexlib2.Opcode,int,org.jf.dexlib2.builder.Label) -> <init>
    55:55:int getRegisterA() -> d_
    57:57:org.jf.dexlib2.Format getFormat() -> c
    44:44:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.instruction.BuilderInstruction32x -> org.c.b.c.b.y:
    org.jf.dexlib2.Format FORMAT -> c
    int registerA -> d
    int registerB -> e
    51:54:void <init>(org.jf.dexlib2.Opcode,int,int) -> <init>
    56:56:int getRegisterA() -> d_
    57:57:int getRegisterB() -> e_
    59:59:org.jf.dexlib2.Format getFormat() -> c
    43:43:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.instruction.BuilderInstruction35c -> org.c.b.c.b.z:
    org.jf.dexlib2.Format FORMAT -> c
    int registerCount -> d
    int registerC -> e
    int registerD -> f
    int registerE -> g
    int registerF -> h
    int registerG -> i
    org.jf.dexlib2.iface.reference.Reference reference -> j
    62:70:void <init>(org.jf.dexlib2.Opcode,int,int,int,int,int,int,org.jf.dexlib2.iface.reference.Reference) -> <init>
    72:72:int getRegisterCount() -> e
    73:73:int getRegisterC() -> h
    74:74:int getRegisterD() -> i
    75:75:int getRegisterE() -> j
    76:76:int getRegisterF() -> k
    77:77:int getRegisterG() -> l
    78:78:org.jf.dexlib2.iface.reference.Reference getReference() -> f
    79:79:int getReferenceType() -> g
    81:81:org.jf.dexlib2.Format getFormat() -> c
    44:44:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.instruction.BuilderInstruction35mi -> org.c.b.c.b.aa:
    org.jf.dexlib2.Format FORMAT -> c
    int registerCount -> d
    int registerC -> e
    int registerD -> f
    int registerE -> g
    int registerF -> h
    int registerG -> i
    int inlineIndex -> j
    61:69:void <init>(org.jf.dexlib2.Opcode,int,int,int,int,int,int,int) -> <init>
    71:71:int getRegisterCount() -> e
    72:72:int getRegisterC() -> h
    73:73:int getRegisterD() -> i
    74:74:int getRegisterE() -> j
    75:75:int getRegisterF() -> k
    76:76:int getRegisterG() -> l
    77:77:int getInlineIndex() -> f
    78:78:org.jf.dexlib2.Format getFormat() -> c
    43:43:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.instruction.BuilderInstruction35ms -> org.c.b.c.b.ab:
    org.jf.dexlib2.Format FORMAT -> c
    int registerCount -> d
    int registerC -> e
    int registerD -> f
    int registerE -> g
    int registerF -> h
    int registerG -> i
    int vtableIndex -> j
    61:69:void <init>(org.jf.dexlib2.Opcode,int,int,int,int,int,int,int) -> <init>
    71:71:int getRegisterCount() -> e
    72:72:int getRegisterC() -> h
    73:73:int getRegisterD() -> i
    74:74:int getRegisterE() -> j
    75:75:int getRegisterF() -> k
    76:76:int getRegisterG() -> l
    77:77:int getVtableIndex() -> f
    78:78:org.jf.dexlib2.Format getFormat() -> c
    43:43:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.instruction.BuilderInstruction3rc -> org.c.b.c.b.ac:
    org.jf.dexlib2.Format FORMAT -> c
    int startRegister -> d
    int registerCount -> e
    org.jf.dexlib2.iface.reference.Reference reference -> f
    55:59:void <init>(org.jf.dexlib2.Opcode,int,int,org.jf.dexlib2.iface.reference.Reference) -> <init>
    61:61:int getStartRegister() -> h
    62:62:int getRegisterCount() -> e
    63:63:org.jf.dexlib2.iface.reference.Reference getReference() -> f
    64:64:int getReferenceType() -> g
    66:66:org.jf.dexlib2.Format getFormat() -> c
    44:44:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.instruction.BuilderInstruction3rmi -> org.c.b.c.b.ad:
    org.jf.dexlib2.Format FORMAT -> c
    int startRegister -> d
    int registerCount -> e
    int inlineIndex -> f
    54:58:void <init>(org.jf.dexlib2.Opcode,int,int,int) -> <init>
    60:60:int getStartRegister() -> h
    61:61:int getRegisterCount() -> e
    62:62:int getInlineIndex() -> f
    63:63:org.jf.dexlib2.Format getFormat() -> c
    44:44:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.instruction.BuilderInstruction3rms -> org.c.b.c.b.ae:
    org.jf.dexlib2.Format FORMAT -> c
    int startRegister -> d
    int registerCount -> e
    int vtableIndex -> f
    55:59:void <init>(org.jf.dexlib2.Opcode,int,int,int) -> <init>
    61:61:int getStartRegister() -> h
    62:62:int getRegisterCount() -> e
    63:63:int getVtableIndex() -> f
    64:64:org.jf.dexlib2.Format getFormat() -> c
    45:45:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.instruction.BuilderInstruction45cc -> org.c.b.c.b.af:
    org.jf.dexlib2.Format FORMAT -> c
    int registerCount -> d
    int registerC -> e
    int registerD -> f
    int registerE -> g
    int registerF -> h
    int registerG -> i
    org.jf.dexlib2.iface.reference.Reference reference -> j
    org.jf.dexlib2.iface.reference.Reference reference2 -> k
    64:73:void <init>(org.jf.dexlib2.Opcode,int,int,int,int,int,int,org.jf.dexlib2.iface.reference.Reference,org.jf.dexlib2.iface.reference.Reference) -> <init>
    75:75:int getRegisterCount() -> e
    76:76:int getRegisterC() -> h
    77:77:int getRegisterD() -> i
    78:78:int getRegisterE() -> j
    79:79:int getRegisterF() -> k
    80:80:int getRegisterG() -> l
    81:81:org.jf.dexlib2.iface.reference.Reference getReference() -> f
    82:82:int getReferenceType() -> g
    83:83:org.jf.dexlib2.iface.reference.Reference getReference2() -> m
    84:84:int getReferenceType2() -> n
    86:86:org.jf.dexlib2.Format getFormat() -> c
    44:44:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.instruction.BuilderInstruction4rcc -> org.c.b.c.b.ag:
    org.jf.dexlib2.Format FORMAT -> c
    int startRegister -> d
    int registerCount -> e
    org.jf.dexlib2.iface.reference.Reference reference -> f
    org.jf.dexlib2.iface.reference.Reference reference2 -> g
    57:62:void <init>(org.jf.dexlib2.Opcode,int,int,org.jf.dexlib2.iface.reference.Reference,org.jf.dexlib2.iface.reference.Reference) -> <init>
    64:64:int getStartRegister() -> h
    65:65:int getRegisterCount() -> e
    66:66:org.jf.dexlib2.iface.reference.Reference getReference() -> f
    67:67:int getReferenceType() -> g
    68:68:org.jf.dexlib2.iface.reference.Reference getReference2() -> m
    69:69:int getReferenceType2() -> n
    71:71:org.jf.dexlib2.Format getFormat() -> c
    44:44:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.instruction.BuilderInstruction51l -> org.c.b.c.b.ah:
    org.jf.dexlib2.Format FORMAT -> c
    int registerA -> d
    long literal -> e
    51:54:void <init>(org.jf.dexlib2.Opcode,int,long) -> <init>
    56:56:int getRegisterA() -> d_
    57:57:long getWideLiteral() -> g
    59:59:org.jf.dexlib2.Format getFormat() -> c
    43:43:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.instruction.BuilderPackedSwitchPayload -> org.c.b.c.b.ai:
    org.jf.dexlib2.Opcode OPCODE -> d
    java.util.List switchElements -> e
    53:63:void <init>(int,java.util.List) -> <init>
    65:65:java.util.List getSwitchElements() -> f
    67:67:int getCodeUnits() -> b
    68:68:org.jf.dexlib2.Format getFormat() -> c
    47:47:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.instruction.BuilderSparseSwitchPayload -> org.c.b.c.b.aj:
    org.jf.dexlib2.Opcode OPCODE -> d
    java.util.List switchElements -> e
    53:64:void <init>(java.util.List) -> <init>
    66:66:java.util.List getSwitchElements() -> f
    68:68:int getCodeUnits() -> b
    69:69:org.jf.dexlib2.Format getFormat() -> c
    48:48:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.instruction.BuilderSparseSwitchPayload$1 -> org.c.b.c.b.ak:
    boolean $assertionsDisabled -> a
    org.jf.dexlib2.builder.instruction.BuilderSparseSwitchPayload this$0 -> b
    57:57:void <init>(org.jf.dexlib2.builder.instruction.BuilderSparseSwitchPayload) -> <init>
    59:60:org.jf.dexlib2.builder.instruction.BuilderSwitchElement apply(org.jf.dexlib2.builder.SwitchLabelElement) -> a
    57:57:java.lang.Object apply(java.lang.Object) -> a
    57:57:void <clinit>() -> <clinit>
org.jf.dexlib2.builder.instruction.BuilderSwitchElement -> org.c.b.c.b.al:
    org.jf.dexlib2.builder.BuilderSwitchPayload parent -> a
    int key -> b
    org.jf.dexlib2.builder.Label target -> c
    16:20:void <init>(org.jf.dexlib2.builder.BuilderSwitchPayload,int,org.jf.dexlib2.builder.Label) -> <init>
    23:23:int getKey() -> a
    27:27:int getOffset() -> b
org.jf.dexlib2.dexbacked.BaseDexBuffer -> org.c.b.d.a:
    byte[] buf -> a
    int baseOffset -> b
    43:44:void <init>(byte[]) -> <init>
    45:48:void <init>(byte[],int) -> <init>
    51:60:int readSmallUint(int) -> a
    64:73:int readOptionalUint(int) -> b
    77:79:int readUshort(int) -> c
    84:84:int readUbyte(int) -> d
    88:90:long readLong(int) -> e
    101:114:int readLongAsSmallUint(int) -> f
    118:120:int readInt(int) -> g
    127:129:int readShort(int) -> h
    134:134:int readByte(int) -> i
org.jf.dexlib2.dexbacked.BaseDexReader -> org.c.b.d.b:
    org.jf.dexlib2.dexbacked.BaseDexBuffer dexBuf -> a
    int offset -> b
    43:46:void <init>(org.jf.dexlib2.dexbacked.BaseDexBuffer,int) -> <init>
    48:48:int getOffset() -> a
    49:49:void setOffset(int) -> a
    52:88:int readSleb128() -> b
    119:119:int readSmallUleb128() -> c
    127:164:int readUleb128(boolean) -> a
    211:211:int readLargeUleb128() -> d
    221:251:int readBigUleb128() -> e
    284:307:void skipUleb128() -> f
    324:324:int peekUshort() -> g
    335:335:int peekUbyte() -> h
    339:342:int readUbyte() -> i
    367:370:int readByte() -> j
    373:373:void skipByte() -> k
    374:374:void moveRelative(int) -> b
    385:412:int readSizedInt(int) -> c
    416:442:int readSizedSmallUint(int) -> d
    446:474:int readSizedRightExtendedInt(int) -> e
    478:540:long readSizedRightExtendedLong(int) -> f
    544:606:long readSizedLong(int) -> g
    610:614:java.lang.String readString(int) -> h
org.jf.dexlib2.dexbacked.DexBackedAnnotation -> org.c.b.d.c:
    org.jf.dexlib2.dexbacked.DexBackedDexFile dexFile -> b
    int visibility -> c
    int typeIndex -> d
    int elementsOffset -> e
    48:55:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,int) -> <init>
    57:57:int getVisibility() -> a
    58:58:java.lang.String getType() -> b
    63:66:java.util.Set getElements() -> c
org.jf.dexlib2.dexbacked.DexBackedAnnotation$1 -> org.c.b.d.d:
    org.jf.dexlib2.dexbacked.DexBackedAnnotation this$0 -> a
    66:66:void <init>(org.jf.dexlib2.dexbacked.DexBackedAnnotation,org.jf.dexlib2.dexbacked.DexBackedDexFile,int,int) -> <init>
    70:70:org.jf.dexlib2.dexbacked.DexBackedAnnotationElement readNextItem(org.jf.dexlib2.dexbacked.DexReader,int) -> a
    66:66:java.lang.Object readNextItem(org.jf.dexlib2.dexbacked.DexReader,int) -> b
org.jf.dexlib2.dexbacked.DexBackedAnnotationElement -> org.c.b.d.e:
    org.jf.dexlib2.dexbacked.DexBackedDexFile dexFile -> d
    int nameIndex -> b
    org.jf.dexlib2.iface.value.EncodedValue value -> c
    45:49:void <init>(org.jf.dexlib2.dexbacked.DexReader) -> <init>
    51:51:java.lang.String getName() -> a
    52:52:org.jf.dexlib2.iface.value.EncodedValue getValue() -> b
org.jf.dexlib2.dexbacked.DexBackedCatchAllExceptionHandler -> org.c.b.d.f:
    int handlerCodeAddress -> b
    43:45:void <init>(org.jf.dexlib2.dexbacked.DexReader) -> <init>
    47:47:java.lang.String getExceptionType() -> b
    48:48:int getHandlerCodeAddress() -> c
org.jf.dexlib2.dexbacked.DexBackedClassDef -> org.c.b.d.g:
    org.jf.dexlib2.dexbacked.DexBackedDexFile dexFile -> a
    int classDefOffset -> b
    int staticFieldsOffset -> c
    int instanceFieldsOffset -> d
    int directMethodsOffset -> e
    int virtualMethodsOffset -> f
    int staticFieldCount -> g
    int instanceFieldCount -> h
    int directMethodCount -> i
    int virtualMethodCount -> j
    org.jf.dexlib2.dexbacked.util.AnnotationsDirectory annotationsDirectory -> k
    62:94:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,int) -> <init>
    99:99:java.lang.String getType() -> a
    105:105:java.lang.String getSuperclass() -> b
    110:110:int getAccessFlags() -> c
    116:116:java.lang.String getSourceFile() -> d
    122:135:java.util.List getInterfaces() -> e
    141:141:java.util.Set getAnnotations() -> f
    147:147:java.lang.Iterable getStaticFields() -> g
    152:203:java.lang.Iterable getStaticFields(boolean) -> a
    210:210:java.lang.Iterable getInstanceFields() -> h
    215:264:java.lang.Iterable getInstanceFields(boolean) -> b
    277:277:java.lang.Iterable getDirectMethods() -> i
    282:333:java.lang.Iterable getDirectMethods(boolean) -> c
    339:385:java.lang.Iterable getVirtualMethods(boolean) -> d
    392:392:java.lang.Iterable getVirtualMethods() -> j
    398:398:java.lang.Iterable getMethods() -> k
    402:406:org.jf.dexlib2.dexbacked.util.AnnotationsDirectory getAnnotationsDirectory() -> l
    410:416:int getInstanceFieldsOffset() -> m
    420:426:int getDirectMethodsOffset() -> n
    430:436:int getVirtualMethodsOffset() -> o
    57:57:int access$000(org.jf.dexlib2.dexbacked.DexBackedClassDef) -> a
    57:57:int access$102(org.jf.dexlib2.dexbacked.DexBackedClassDef,int) -> a
    57:57:int access$200(org.jf.dexlib2.dexbacked.DexBackedClassDef) -> b
    57:57:int access$302(org.jf.dexlib2.dexbacked.DexBackedClassDef,int) -> b
    57:57:int access$400(org.jf.dexlib2.dexbacked.DexBackedClassDef) -> c
    57:57:int access$502(org.jf.dexlib2.dexbacked.DexBackedClassDef,int) -> c
    57:57:int access$600(org.jf.dexlib2.dexbacked.DexBackedClassDef) -> d
org.jf.dexlib2.dexbacked.DexBackedClassDef$1 -> org.c.b.d.h:
    int val$interfacesOffset -> a
    int val$size -> b
    org.jf.dexlib2.dexbacked.DexBackedClassDef this$0 -> c
    125:125:void <init>(org.jf.dexlib2.dexbacked.DexBackedClassDef,int,int) -> <init>
    129:129:java.lang.String get(int) -> a
    132:132:int size() -> size
    125:125:java.lang.Object get(int) -> get
org.jf.dexlib2.dexbacked.DexBackedClassDef$2 -> org.c.b.d.i:
    org.jf.dexlib2.dexbacked.util.AnnotationsDirectory val$annotationsDirectory -> a
    int val$staticInitialValuesOffset -> b
    int val$fieldsStartOffset -> c
    boolean val$skipDuplicates -> d
    org.jf.dexlib2.dexbacked.DexBackedClassDef this$0 -> e
    160:160:void <init>(org.jf.dexlib2.dexbacked.DexBackedClassDef,org.jf.dexlib2.dexbacked.util.AnnotationsDirectory,int,int,boolean) -> <init>
    164:169:java.util.Iterator iterator() -> iterator
org.jf.dexlib2.dexbacked.DexBackedClassDef$2$1 -> org.c.b.d.j:
    int count -> d
    org.jf.dexlib2.iface.reference.FieldReference previousField -> e
    int previousIndex -> f
    org.jf.dexlib2.dexbacked.util.StaticInitialValueIterator val$staticInitialValueIterator -> a
    org.jf.dexlib2.dexbacked.util.AnnotationsDirectory$AnnotationIterator val$annotationIterator -> b
    org.jf.dexlib2.dexbacked.DexBackedClassDef$2 this$1 -> c
    169:169:void <init>(org.jf.dexlib2.dexbacked.DexBackedClassDef$2,org.jf.dexlib2.dexbacked.DexBackedDexFile,int,org.jf.dexlib2.dexbacked.util.StaticInitialValueIterator,org.jf.dexlib2.dexbacked.util.AnnotationsDirectory$AnnotationIterator) -> <init>
    178:195:org.jf.dexlib2.dexbacked.DexBackedField readNextItem(org.jf.dexlib2.dexbacked.DexReader) -> a
    169:169:java.lang.Object readNextItem(org.jf.dexlib2.dexbacked.DexReader) -> b
org.jf.dexlib2.dexbacked.DexBackedClassDef$3 -> org.c.b.d.k:
    org.jf.dexlib2.dexbacked.util.AnnotationsDirectory val$annotationsDirectory -> a
    int val$fieldsStartOffset -> b
    boolean val$skipDuplicates -> c
    org.jf.dexlib2.dexbacked.DexBackedClassDef this$0 -> d
    221:221:void <init>(org.jf.dexlib2.dexbacked.DexBackedClassDef,org.jf.dexlib2.dexbacked.util.AnnotationsDirectory,int,boolean) -> <init>
    225:228:java.util.Iterator iterator() -> iterator
org.jf.dexlib2.dexbacked.DexBackedClassDef$3$1 -> org.c.b.d.l:
    int count -> c
    org.jf.dexlib2.iface.reference.FieldReference previousField -> d
    int previousIndex -> e
    org.jf.dexlib2.dexbacked.util.AnnotationsDirectory$AnnotationIterator val$annotationIterator -> a
    org.jf.dexlib2.dexbacked.DexBackedClassDef$3 this$1 -> b
    228:228:void <init>(org.jf.dexlib2.dexbacked.DexBackedClassDef$3,org.jf.dexlib2.dexbacked.DexBackedDexFile,int,org.jf.dexlib2.dexbacked.util.AnnotationsDirectory$AnnotationIterator) -> <init>
    237:254:org.jf.dexlib2.dexbacked.DexBackedField readNextItem(org.jf.dexlib2.dexbacked.DexReader) -> a
    228:228:java.lang.Object readNextItem(org.jf.dexlib2.dexbacked.DexReader) -> b
org.jf.dexlib2.dexbacked.DexBackedClassDef$4 -> org.c.b.d.m:
    org.jf.dexlib2.dexbacked.util.AnnotationsDirectory val$annotationsDirectory -> a
    int val$methodsStartOffset -> b
    boolean val$skipDuplicates -> c
    org.jf.dexlib2.dexbacked.DexBackedClassDef this$0 -> d
    288:288:void <init>(org.jf.dexlib2.dexbacked.DexBackedClassDef,org.jf.dexlib2.dexbacked.util.AnnotationsDirectory,int,boolean) -> <init>
    292:297:java.util.Iterator iterator() -> iterator
org.jf.dexlib2.dexbacked.DexBackedClassDef$4$1 -> org.c.b.d.n:
    int count -> d
    org.jf.dexlib2.iface.reference.MethodReference previousMethod -> e
    int previousIndex -> f
    org.jf.dexlib2.dexbacked.util.AnnotationsDirectory$AnnotationIterator val$methodAnnotationIterator -> a
    org.jf.dexlib2.dexbacked.util.AnnotationsDirectory$AnnotationIterator val$parameterAnnotationIterator -> b
    org.jf.dexlib2.dexbacked.DexBackedClassDef$4 this$1 -> c
    297:297:void <init>(org.jf.dexlib2.dexbacked.DexBackedClassDef$4,org.jf.dexlib2.dexbacked.DexBackedDexFile,int,org.jf.dexlib2.dexbacked.util.AnnotationsDirectory$AnnotationIterator,org.jf.dexlib2.dexbacked.util.AnnotationsDirectory$AnnotationIterator) -> <init>
    306:323:org.jf.dexlib2.dexbacked.DexBackedMethod readNextItem(org.jf.dexlib2.dexbacked.DexReader) -> a
    297:297:java.lang.Object readNextItem(org.jf.dexlib2.dexbacked.DexReader) -> b
org.jf.dexlib2.dexbacked.DexBackedClassDef$5 -> org.c.b.d.o:
    org.jf.dexlib2.dexbacked.util.AnnotationsDirectory$AnnotationIterator methodAnnotationIterator -> a
    org.jf.dexlib2.dexbacked.util.AnnotationsDirectory$AnnotationIterator parameterAnnotationIterator -> b
    org.jf.dexlib2.dexbacked.util.AnnotationsDirectory val$annotationsDirectory -> c
    int val$methodsStartOffset -> d
    boolean val$skipDuplicates -> e
    org.jf.dexlib2.dexbacked.DexBackedClassDef this$0 -> f
    345:349:void <init>(org.jf.dexlib2.dexbacked.DexBackedClassDef,org.jf.dexlib2.dexbacked.util.AnnotationsDirectory,int,boolean) -> <init>
    354:354:java.util.Iterator iterator() -> iterator
org.jf.dexlib2.dexbacked.DexBackedClassDef$5$1 -> org.c.b.d.p:
    int count -> b
    org.jf.dexlib2.iface.reference.MethodReference previousMethod -> c
    int previousIndex -> d
    org.jf.dexlib2.dexbacked.DexBackedClassDef$5 this$1 -> a
    354:354:void <init>(org.jf.dexlib2.dexbacked.DexBackedClassDef$5,org.jf.dexlib2.dexbacked.DexBackedDexFile,int) -> <init>
    363:378:org.jf.dexlib2.dexbacked.DexBackedMethod readNextItem(org.jf.dexlib2.dexbacked.DexReader) -> a
    354:354:java.lang.Object readNextItem(org.jf.dexlib2.dexbacked.DexReader) -> b
org.jf.dexlib2.dexbacked.DexBackedDexFile -> org.c.b.d.q:
    org.jf.dexlib2.Opcodes opcodes -> c
    int stringCount -> d
    int stringStartOffset -> e
    int typeCount -> f
    int typeStartOffset -> g
    int protoCount -> h
    int protoStartOffset -> i
    int fieldCount -> j
    int fieldStartOffset -> k
    int methodCount -> l
    int methodStartOffset -> m
    int classCount -> n
    int classStartOffset -> o
    73:93:void <init>(org.jf.dexlib2.Opcodes,byte[],int,boolean) -> <init>
    100:101:void <init>(org.jf.dexlib2.Opcodes,byte[],int) -> <init>
    117:117:org.jf.dexlib2.Opcodes getOpcodes() -> a
    122:122:boolean isOdexFile() -> b
    133:133:java.util.Set getClasses() -> c
    148:151:int getStringIdItemOffset(int) -> j
    155:158:int getTypeIdItemOffset(int) -> k
    162:165:int getFieldIdItemOffset(int) -> l
    169:172:int getMethodIdItemOffset(int) -> m
    176:179:int getProtoIdItemOffset(int) -> n
    183:186:int getClassDefItemOffset(int) -> o
    215:219:java.lang.String getString(int) -> p
    224:227:java.lang.String getOptionalString(int) -> q
    232:234:java.lang.String getType(int) -> r
    239:242:java.lang.String getOptionalType(int) -> s
    323:323:org.jf.dexlib2.dexbacked.DexReader readerAt(int) -> t
    56:56:int access$000(org.jf.dexlib2.dexbacked.DexBackedDexFile) -> a
org.jf.dexlib2.dexbacked.DexBackedDexFile$1 -> org.c.b.d.r:
    org.jf.dexlib2.dexbacked.DexBackedDexFile this$0 -> a
    133:133:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile) -> <init>
    137:137:org.jf.dexlib2.dexbacked.DexBackedClassDef readItem(int) -> a
    142:142:int size() -> size
    133:133:java.lang.Object readItem(int) -> b
org.jf.dexlib2.dexbacked.DexBackedDexFile$InvalidItemIndex -> org.c.b.d.s:
    int itemIndex -> a
    352:354:void <init>(int,java.lang.String,java.lang.Object[]) -> <init>
    357:357:int getInvalidIndex() -> a
org.jf.dexlib2.dexbacked.DexBackedDexFile$NotADexFile -> org.c.b.d.t:
    327:328:void <init>() -> <init>
    335:336:void <init>(java.lang.String) -> <init>
org.jf.dexlib2.dexbacked.DexBackedExceptionHandler -> org.c.b.d.u:
    36:36:void <init>() -> <init>
org.jf.dexlib2.dexbacked.DexBackedField -> org.c.b.d.v:
    org.jf.dexlib2.dexbacked.DexBackedDexFile dexFile -> a
    org.jf.dexlib2.iface.ClassDef classDef -> b
    int accessFlags -> c
    org.jf.dexlib2.iface.value.EncodedValue initialValue -> d
    int annotationSetOffset -> e
    int fieldIndex -> f
    int startOffset -> g
    int initialValueOffset -> h
    int fieldIdItemOffset -> i
    66:80:void <init>(org.jf.dexlib2.dexbacked.DexReader,org.jf.dexlib2.dexbacked.DexBackedClassDef,int,org.jf.dexlib2.dexbacked.util.StaticInitialValueIterator,org.jf.dexlib2.dexbacked.util.AnnotationsDirectory$AnnotationIterator) -> <init>
    85:99:void <init>(org.jf.dexlib2.dexbacked.DexReader,org.jf.dexlib2.dexbacked.DexBackedClassDef,int,org.jf.dexlib2.dexbacked.util.AnnotationsDirectory$AnnotationIterator) -> <init>
    104:104:java.lang.String getName() -> a
    110:110:java.lang.String getType() -> b
    113:113:java.lang.String getDefiningClass() -> c
    114:114:int getAccessFlags() -> d
    115:115:org.jf.dexlib2.iface.value.EncodedValue getInitialValue() -> e
    120:120:java.util.Set getAnnotations() -> f
    130:134:void skipFields(org.jf.dexlib2.dexbacked.DexReader,int) -> a
    137:140:int getFieldIdItemOffset() -> g
org.jf.dexlib2.dexbacked.DexBackedMethod -> org.c.b.d.w:
    org.jf.dexlib2.dexbacked.DexBackedDexFile dexFile -> a
    org.jf.dexlib2.dexbacked.DexBackedClassDef classDef -> b
    int accessFlags -> c
    int codeOffset -> e
    int parameterAnnotationSetListOffset -> f
    int methodAnnotationSetOffset -> g
    int methodIndex -> d
    int startOffset -> h
    int methodIdItemOffset -> i
    int protoIdItemOffset -> j
    int parametersOffset -> k
    71:109:void <init>(org.jf.dexlib2.dexbacked.DexReader,org.jf.dexlib2.dexbacked.DexBackedClassDef,int,org.jf.dexlib2.dexbacked.util.AnnotationsDirectory$AnnotationIterator,org.jf.dexlib2.dexbacked.util.AnnotationsDirectory$AnnotationIterator) -> <init>
    112:112:java.lang.String getDefiningClass() -> d
    113:113:int getAccessFlags() -> e
    118:118:java.lang.String getName() -> a
    124:124:java.lang.String getReturnType() -> c
    130:146:java.util.List getParameters() -> f
    151:151:java.util.List getParameterAnnotations() -> g
    156:160:java.util.Iterator getParameterNames() -> h
    166:179:java.util.List getParameterTypes() -> b
    185:185:java.util.Set getAnnotations() -> i
    191:194:org.jf.dexlib2.dexbacked.DexBackedMethodImplementation getImplementation() -> j
    198:201:int getMethodIdItemOffset() -> l
    205:209:int getProtoIdItemOffset() -> m
    213:216:int getParametersOffset() -> n
    226:231:void skipMethods(org.jf.dexlib2.dexbacked.DexReader,int) -> a
    56:56:org.jf.dexlib2.iface.MethodImplementation getImplementation() -> k
org.jf.dexlib2.dexbacked.DexBackedMethod$1 -> org.c.b.d.x:
    java.util.List val$parameterTypes -> a
    org.jf.dexlib2.dexbacked.DexBackedMethod this$0 -> b
    134:134:void <init>(org.jf.dexlib2.dexbacked.DexBackedMethod,java.util.List) -> <init>
    136:138:java.util.Iterator iterator() -> iterator
    142:142:int size() -> size
org.jf.dexlib2.dexbacked.DexBackedMethod$2 -> org.c.b.d.y:
    int val$paramListStart -> a
    int val$parameterCount -> b
    org.jf.dexlib2.dexbacked.DexBackedMethod this$0 -> c
    170:170:void <init>(org.jf.dexlib2.dexbacked.DexBackedMethod,int,int) -> <init>
    174:174:java.lang.String readItem(int) -> a
    176:176:int size() -> size
    170:170:java.lang.Object readItem(int) -> b
org.jf.dexlib2.dexbacked.DexBackedMethodImplementation -> org.c.b.d.z:
    org.jf.dexlib2.dexbacked.DexBackedDexFile dexFile -> a
    org.jf.dexlib2.dexbacked.DexBackedMethod method -> b
    int codeOffset -> c
    59:63:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,org.jf.dexlib2.dexbacked.DexBackedMethod,int) -> <init>
    65:65:int getRegisterCount() -> a
    69:73:java.lang.Iterable getInstructions() -> e
    100:122:java.util.List getTryBlocks() -> c
    127:140:org.jf.dexlib2.dexbacked.util.DebugInfo getDebugInfo() -> b
    145:145:java.lang.Iterable getDebugItems() -> d
    150:150:java.util.Iterator getParameterNames(org.jf.dexlib2.dexbacked.DexReader) -> a
org.jf.dexlib2.dexbacked.DexBackedMethodImplementation$1 -> org.c.b.d.aa:
    int val$instructionsStartOffset -> a
    int val$endOffset -> b
    org.jf.dexlib2.dexbacked.DexBackedMethodImplementation this$0 -> c
    73:73:void <init>(org.jf.dexlib2.dexbacked.DexBackedMethodImplementation,int,int) -> <init>
    76:76:java.util.Iterator iterator() -> iterator
org.jf.dexlib2.dexbacked.DexBackedMethodImplementation$1$1 -> org.c.b.d.ab:
    org.jf.dexlib2.dexbacked.DexBackedMethodImplementation$1 this$1 -> a
    76:76:void <init>(org.jf.dexlib2.dexbacked.DexBackedMethodImplementation$1,org.jf.dexlib2.dexbacked.DexBackedDexFile,int) -> <init>
    79:90:org.jf.dexlib2.iface.instruction.Instruction readNextItem(org.jf.dexlib2.dexbacked.DexReader) -> a
    76:76:java.lang.Object readNextItem(org.jf.dexlib2.dexbacked.DexReader) -> b
org.jf.dexlib2.dexbacked.DexBackedMethodImplementation$2 -> org.c.b.d.ac:
    int val$triesStartOffset -> a
    int val$handlersStartOffset -> b
    int val$triesSize -> c
    org.jf.dexlib2.dexbacked.DexBackedMethodImplementation this$0 -> d
    107:107:void <init>(org.jf.dexlib2.dexbacked.DexBackedMethodImplementation,int,int,int) -> <init>
    111:111:org.jf.dexlib2.dexbacked.DexBackedTryBlock readItem(int) -> a
    118:118:int size() -> size
    107:107:java.lang.Object readItem(int) -> b
org.jf.dexlib2.dexbacked.DexBackedOdexFile -> org.c.b.d.ad:
    byte[] odexBuf -> c
    59:59:boolean isOdexFile() -> b
    105:105:int getOdexVersion() -> d
org.jf.dexlib2.dexbacked.DexBackedTryBlock -> org.c.b.d.ae:
    org.jf.dexlib2.dexbacked.DexBackedDexFile dexFile -> a
    int tryItemOffset -> b
    int handlersStartOffset -> c
    48:52:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,int,int) -> <init>
    55:55:int getStartCodeAddress() -> a
    59:59:int getCodeUnitCount() -> b
    65:81:java.util.List getExceptionHandlers() -> c
org.jf.dexlib2.dexbacked.DexBackedTryBlock$1 -> org.c.b.d.af:
    org.jf.dexlib2.dexbacked.DexBackedTryBlock this$0 -> a
    71:71:void <init>(org.jf.dexlib2.dexbacked.DexBackedTryBlock,org.jf.dexlib2.dexbacked.DexBackedDexFile,int,int) -> <init>
    75:75:org.jf.dexlib2.dexbacked.DexBackedTypedExceptionHandler readNextItem(org.jf.dexlib2.dexbacked.DexReader,int) -> a
    71:71:java.lang.Object readNextItem(org.jf.dexlib2.dexbacked.DexReader,int) -> b
org.jf.dexlib2.dexbacked.DexBackedTryBlock$2 -> org.c.b.d.ag:
    int val$sizeWithCatchAll -> a
    org.jf.dexlib2.dexbacked.DexBackedTryBlock this$0 -> b
    81:81:void <init>(org.jf.dexlib2.dexbacked.DexBackedTryBlock,org.jf.dexlib2.dexbacked.DexBackedDexFile,int,int,int) -> <init>
    85:88:org.jf.dexlib2.dexbacked.DexBackedExceptionHandler readNextItem(org.jf.dexlib2.dexbacked.DexReader,int) -> a
    81:81:java.lang.Object readNextItem(org.jf.dexlib2.dexbacked.DexReader,int) -> b
org.jf.dexlib2.dexbacked.DexBackedTypedExceptionHandler -> org.c.b.d.ah:
    org.jf.dexlib2.dexbacked.DexBackedDexFile dexFile -> b
    int typeId -> c
    int handlerCodeAddress -> d
    41:45:void <init>(org.jf.dexlib2.dexbacked.DexReader) -> <init>
    47:47:java.lang.String getExceptionType() -> b
    48:48:int getHandlerCodeAddress() -> c
org.jf.dexlib2.dexbacked.DexReader -> org.c.b.d.ai:
    38:39:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,int) -> <init>
org.jf.dexlib2.dexbacked.OatFile -> org.c.b.d.aj:
    byte[] ELF_MAGIC -> c
    byte[] OAT_MAGIC -> d
    boolean is64bit -> e
    org.jf.dexlib2.dexbacked.OatFile$OatHeader oatHeader -> f
    org.jf.dexlib2.Opcodes opcodes -> g
    org.jf.dexlib2.dexbacked.OatFile$VdexProvider vdexProvider -> h
    80:116:void <init>(byte[],org.jf.dexlib2.dexbacked.OatFile$VdexProvider) -> <init>
    119:124:void verifyMagic(byte[]) -> a
    132:150:org.jf.dexlib2.dexbacked.OatFile fromInputStream(java.io.InputStream,org.jf.dexlib2.dexbacked.OatFile$VdexProvider) -> a
    154:154:int getOatVersion() -> a
    158:165:int isSupportedVersion() -> b
    186:186:java.util.List getDexFiles() -> c
    202:202:java.util.List getDexEntryNames() -> d
    218:226:org.jf.dexlib2.dexbacked.OatFile$OatDexFile getEntry(java.lang.String) -> a
    340:354:java.util.List getSections() -> f
    374:379:org.jf.dexlib2.dexbacked.OatFile$SymbolTable getSymbolTable() -> g
    56:56:org.jf.dexlib2.iface.DexFile getEntry(java.lang.String) -> b
    56:56:org.jf.dexlib2.dexbacked.OatFile$OatHeader access$000(org.jf.dexlib2.dexbacked.OatFile) -> a
    56:56:org.jf.dexlib2.Opcodes access$200(org.jf.dexlib2.dexbacked.OatFile) -> b
    56:56:byte[] access$300() -> e
    56:56:boolean access$400(org.jf.dexlib2.dexbacked.OatFile) -> c
    56:56:java.util.List access$600(org.jf.dexlib2.dexbacked.OatFile) -> d
    56:56:org.jf.dexlib2.dexbacked.OatFile$VdexProvider access$1100(org.jf.dexlib2.dexbacked.OatFile) -> e
    57:58:void <clinit>() -> <clinit>
org.jf.dexlib2.dexbacked.OatFile$1 -> org.c.b.d.ak:
    org.jf.dexlib2.dexbacked.OatFile this$0 -> a
    186:186:void <init>(org.jf.dexlib2.dexbacked.OatFile) -> <init>
    188:188:int size() -> size
    192:192:java.util.Iterator iterator() -> iterator
org.jf.dexlib2.dexbacked.OatFile$1$1 -> org.c.b.d.al:
    org.jf.dexlib2.dexbacked.OatFile$1 this$1 -> a
    192:192:void <init>(org.jf.dexlib2.dexbacked.OatFile$1) -> <init>
    194:194:org.jf.dexlib2.dexbacked.OatFile$OatDexFile apply(org.jf.dexlib2.dexbacked.OatFile$DexEntry) -> a
    192:192:java.lang.Object apply(java.lang.Object) -> a
org.jf.dexlib2.dexbacked.OatFile$2 -> org.c.b.d.am:
    org.jf.dexlib2.dexbacked.OatFile this$0 -> a
    202:202:void <init>(org.jf.dexlib2.dexbacked.OatFile) -> <init>
    204:204:int size() -> size
    208:208:java.util.Iterator iterator() -> iterator
org.jf.dexlib2.dexbacked.OatFile$2$1 -> org.c.b.d.an:
    org.jf.dexlib2.dexbacked.OatFile$2 this$1 -> a
    208:208:void <init>(org.jf.dexlib2.dexbacked.OatFile$2) -> <init>
    210:210:java.lang.String apply(org.jf.dexlib2.dexbacked.OatFile$DexEntry) -> a
    208:208:java.lang.Object apply(java.lang.Object) -> a
org.jf.dexlib2.dexbacked.OatFile$3 -> org.c.b.d.ao:
    int val$entryCount -> a
    int val$offset -> b
    int val$entrySize -> c
    org.jf.dexlib2.dexbacked.OatFile this$0 -> d
    354:354:void <init>(org.jf.dexlib2.dexbacked.OatFile,int,int,int) -> <init>
    356:362:org.jf.dexlib2.dexbacked.OatFile$SectionHeader get(int) -> a
    367:367:int size() -> size
    354:354:java.lang.Object get(int) -> get
org.jf.dexlib2.dexbacked.OatFile$DexEntry -> org.c.b.d.ap:
    java.lang.String entryName -> a
    byte[] buf -> b
    int dexOffset -> c
    org.jf.dexlib2.dexbacked.OatFile this$0 -> d
    559:563:void <init>(org.jf.dexlib2.dexbacked.OatFile,java.lang.String,byte[],int) -> <init>
    566:566:org.jf.dexlib2.dexbacked.OatFile$OatDexFile getDexFile() -> a
org.jf.dexlib2.dexbacked.OatFile$DexEntryIterator -> org.c.b.d.aq:
    int index -> a
    int offset -> b
    org.jf.dexlib2.dexbacked.OatFile this$0 -> c
    570:572:void <init>(org.jf.dexlib2.dexbacked.OatFile) -> <init>
    575:575:boolean hasNext() -> hasNext
    579:613:org.jf.dexlib2.dexbacked.OatFile$DexEntry next() -> a
    617:617:void remove() -> remove
    570:570:java.lang.Object next() -> next
    570:570:void <init>(org.jf.dexlib2.dexbacked.OatFile,org.jf.dexlib2.dexbacked.OatFile$1) -> <init>
org.jf.dexlib2.dexbacked.OatFile$InvalidOatFileException -> org.c.b.d.ar:
    623:624:void <init>(java.lang.String) -> <init>
org.jf.dexlib2.dexbacked.OatFile$NotAnOatFileException -> org.c.b.d.as:
    628:628:void <init>() -> <init>
org.jf.dexlib2.dexbacked.OatFile$OatDexFile -> org.c.b.d.at:
    java.lang.String filename -> c
    org.jf.dexlib2.dexbacked.OatFile this$0 -> d
    232:235:void <init>(org.jf.dexlib2.dexbacked.OatFile,byte[],int,java.lang.String) -> <init>
org.jf.dexlib2.dexbacked.OatFile$OatHeader -> org.c.b.d.au:
    int headerOffset -> b
    org.jf.dexlib2.dexbacked.OatFile this$0 -> a
    253:255:void <init>(org.jf.dexlib2.dexbacked.OatFile,int) -> <init>
    258:270:boolean isValid() -> a
    274:274:int getVersion() -> b
    278:278:int getDexFileCount() -> c
    282:286:int getKeyValueStoreSize() -> d
    290:293:int getHeaderSize() -> e
    331:331:int getDexListStart() -> f
    250:250:int access$1200(org.jf.dexlib2.dexbacked.OatFile$OatHeader) -> a
org.jf.dexlib2.dexbacked.OatFile$SectionHeader -> org.c.b.d.av:
    int offset -> a
    org.jf.dexlib2.dexbacked.OatFile this$0 -> b
    399:399:void <init>(org.jf.dexlib2.dexbacked.OatFile,int) -> <init>
    401:401:int getType() -> a
    long getAddress() -> b
    int getOffset() -> c
    int getSize() -> d
    int getLink() -> e
    int getEntrySize() -> f
org.jf.dexlib2.dexbacked.OatFile$SectionHeader32Bit -> org.c.b.d.aw:
    org.jf.dexlib2.dexbacked.OatFile this$0 -> c
    410:410:void <init>(org.jf.dexlib2.dexbacked.OatFile,int) -> <init>
    411:411:long getAddress() -> b
    412:412:int getOffset() -> c
    413:413:int getSize() -> d
    414:414:int getLink() -> e
    415:415:int getEntrySize() -> f
org.jf.dexlib2.dexbacked.OatFile$SectionHeader64Bit -> org.c.b.d.ax:
    org.jf.dexlib2.dexbacked.OatFile this$0 -> c
    419:419:void <init>(org.jf.dexlib2.dexbacked.OatFile,int) -> <init>
    420:420:long getAddress() -> b
    421:421:int getOffset() -> c
    422:422:int getSize() -> d
    423:423:int getLink() -> e
    424:424:int getEntrySize() -> f
org.jf.dexlib2.dexbacked.OatFile$StringTable -> org.c.b.d.ay:
    int offset -> b
    int size -> c
    org.jf.dexlib2.dexbacked.OatFile this$0 -> a
    525:532:void <init>(org.jf.dexlib2.dexbacked.OatFile,org.jf.dexlib2.dexbacked.OatFile$SectionHeader) -> <init>
    536:549:java.lang.String getString(int) -> a
org.jf.dexlib2.dexbacked.OatFile$SymbolTable -> org.c.b.d.az:
    org.jf.dexlib2.dexbacked.OatFile$StringTable stringTable -> b
    int offset -> c
    int entryCount -> d
    int entrySize -> e
    org.jf.dexlib2.dexbacked.OatFile this$0 -> a
    433:446:void <init>(org.jf.dexlib2.dexbacked.OatFile,org.jf.dexlib2.dexbacked.OatFile$SectionHeader) -> <init>
    450:450:java.util.List getSymbols() -> a
    427:427:int access$700(org.jf.dexlib2.dexbacked.OatFile$SymbolTable) -> a
    427:427:int access$800(org.jf.dexlib2.dexbacked.OatFile$SymbolTable) -> b
    427:427:int access$900(org.jf.dexlib2.dexbacked.OatFile$SymbolTable) -> c
    427:427:org.jf.dexlib2.dexbacked.OatFile$StringTable access$1000(org.jf.dexlib2.dexbacked.OatFile$SymbolTable) -> d
org.jf.dexlib2.dexbacked.OatFile$SymbolTable$1 -> org.c.b.d.ba:
    org.jf.dexlib2.dexbacked.OatFile$SymbolTable this$1 -> a
    450:450:void <init>(org.jf.dexlib2.dexbacked.OatFile$SymbolTable) -> <init>
    452:458:org.jf.dexlib2.dexbacked.OatFile$SymbolTable$Symbol get(int) -> a
    463:463:int size() -> size
    450:450:java.lang.Object get(int) -> get
org.jf.dexlib2.dexbacked.OatFile$SymbolTable$Symbol -> org.c.b.d.bb:
    int offset -> a
    boolean $assertionsDisabled -> b
    org.jf.dexlib2.dexbacked.OatFile$SymbolTable this$1 -> c
    470:470:void <init>(org.jf.dexlib2.dexbacked.OatFile$SymbolTable,int) -> <init>
    java.lang.String getName() -> a
    long getValue() -> b
    int getSectionIndex() -> c
    479:496:int getFileOffset() -> d
    468:468:void <clinit>() -> <clinit>
org.jf.dexlib2.dexbacked.OatFile$SymbolTable$Symbol32 -> org.c.b.d.bc:
    org.jf.dexlib2.dexbacked.OatFile$SymbolTable this$1 -> d
    501:501:void <init>(org.jf.dexlib2.dexbacked.OatFile$SymbolTable,int) -> <init>
    504:504:java.lang.String getName() -> a
    505:505:long getValue() -> b
    507:507:int getSectionIndex() -> c
org.jf.dexlib2.dexbacked.OatFile$SymbolTable$Symbol64 -> org.c.b.d.bd:
    org.jf.dexlib2.dexbacked.OatFile$SymbolTable this$1 -> d
    511:511:void <init>(org.jf.dexlib2.dexbacked.OatFile$SymbolTable,int) -> <init>
    514:514:java.lang.String getName() -> a
    515:515:long getValue() -> b
    517:517:int getSectionIndex() -> c
org.jf.dexlib2.dexbacked.OatFile$VdexProvider -> org.c.b.d.be:
    byte[] getVdex() -> a
org.jf.dexlib2.dexbacked.ZipDexContainer -> org.c.b.d.bf:
    java.io.File zipFilePath -> a
    org.jf.dexlib2.Opcodes opcodes -> b
    69:72:void <init>(java.io.File,org.jf.dexlib2.Opcodes) -> <init>
    84:101:java.util.List getDexEntryNames() -> d
    113:122:org.jf.dexlib2.dexbacked.ZipDexContainer$ZipDexFile getEntry(java.lang.String) -> a
    165:177:boolean isDex(java.util.zip.ZipFile,java.util.zip.ZipEntry) -> a
    182:184:java.util.zip.ZipFile getZipFile() -> a
    190:195:org.jf.dexlib2.dexbacked.ZipDexContainer$ZipDexFile loadEntry(java.util.zip.ZipFile,java.util.zip.ZipEntry) -> b
    58:58:org.jf.dexlib2.iface.DexFile getEntry(java.lang.String) -> b
org.jf.dexlib2.dexbacked.ZipDexContainer$NotAZipFileException -> org.c.b.d.bg:
    199:199:void <init>() -> <init>
org.jf.dexlib2.dexbacked.ZipDexContainer$ZipDexFile -> org.c.b.d.bh:
    java.lang.String entryName -> d
    org.jf.dexlib2.dexbacked.ZipDexContainer this$0 -> c
    150:153:void <init>(org.jf.dexlib2.dexbacked.ZipDexContainer,org.jf.dexlib2.Opcodes,byte[],java.lang.String) -> <init>
org.jf.dexlib2.dexbacked.instruction.DexBackedArrayPayload -> org.c.b.d.a.a:
    org.jf.dexlib2.Opcode OPCODE -> a
    int elementWidth -> b
    int elementCount -> c
    55:62:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,int) -> <init>
    64:64:int getElementWidth() -> e
    69:109:java.util.List getArrayElements() -> f
    115:115:int getCodeUnits() -> b
    44:44:void <clinit>() -> <clinit>
org.jf.dexlib2.dexbacked.instruction.DexBackedArrayPayload$1 -> org.c.b.d.a.b:
    int val$elementsStart -> a
    org.jf.dexlib2.dexbacked.instruction.DexBackedArrayPayload this$0 -> b
    77:77:void <init>(org.jf.dexlib2.dexbacked.instruction.DexBackedArrayPayload,int) -> <init>
    81:81:java.lang.Number readItem(int) -> a
    77:77:java.lang.Object readItem(int) -> b
org.jf.dexlib2.dexbacked.instruction.DexBackedArrayPayload$1ReturnedList -> org.c.b.d.a.c:
    org.jf.dexlib2.dexbacked.instruction.DexBackedArrayPayload this$0 -> c
    71:71:void <init>(org.jf.dexlib2.dexbacked.instruction.DexBackedArrayPayload) -> <init>
    72:72:int size() -> size
org.jf.dexlib2.dexbacked.instruction.DexBackedArrayPayload$2 -> org.c.b.d.a.d:
    int val$elementsStart -> a
    org.jf.dexlib2.dexbacked.instruction.DexBackedArrayPayload this$0 -> b
    85:85:void <init>(org.jf.dexlib2.dexbacked.instruction.DexBackedArrayPayload,int) -> <init>
    89:89:java.lang.Number readItem(int) -> a
    85:85:java.lang.Object readItem(int) -> b
org.jf.dexlib2.dexbacked.instruction.DexBackedArrayPayload$3 -> org.c.b.d.a.e:
    int val$elementsStart -> a
    org.jf.dexlib2.dexbacked.instruction.DexBackedArrayPayload this$0 -> b
    93:93:void <init>(org.jf.dexlib2.dexbacked.instruction.DexBackedArrayPayload,int) -> <init>
    97:97:java.lang.Number readItem(int) -> a
    93:93:java.lang.Object readItem(int) -> b
org.jf.dexlib2.dexbacked.instruction.DexBackedArrayPayload$4 -> org.c.b.d.a.f:
    int val$elementsStart -> a
    org.jf.dexlib2.dexbacked.instruction.DexBackedArrayPayload this$0 -> b
    101:101:void <init>(org.jf.dexlib2.dexbacked.instruction.DexBackedArrayPayload,int) -> <init>
    105:105:java.lang.Number readItem(int) -> a
    101:101:java.lang.Object readItem(int) -> b
org.jf.dexlib2.dexbacked.instruction.DexBackedInstruction -> org.c.b.d.a.g:
    org.jf.dexlib2.dexbacked.DexBackedDexFile dexFile -> d
    org.jf.dexlib2.Opcode opcode -> e
    int instructionStart -> f
    50:54:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,org.jf.dexlib2.Opcode,int) -> <init>
    56:56:org.jf.dexlib2.Opcode getOpcode() -> a
    57:57:int getCodeUnits() -> b
    61:71:org.jf.dexlib2.iface.instruction.Instruction readFrom(org.jf.dexlib2.dexbacked.DexReader) -> a
    76:153:org.jf.dexlib2.dexbacked.instruction.DexBackedInstruction buildInstruction(org.jf.dexlib2.dexbacked.DexBackedDexFile,org.jf.dexlib2.Opcode,int) -> a
org.jf.dexlib2.dexbacked.instruction.DexBackedInstruction$1 -> org.c.b.d.a.h:
    int[] $SwitchMap$org$jf$dexlib2$Format -> a
    79:79:void <clinit>() -> <clinit>
org.jf.dexlib2.dexbacked.instruction.DexBackedInstruction10t -> org.c.b.d.a.i:
    44:45:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,org.jf.dexlib2.Opcode,int) -> <init>
    47:47:int getCodeOffset() -> e
org.jf.dexlib2.dexbacked.instruction.DexBackedInstruction10x -> org.c.b.d.a.j:
    44:45:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,org.jf.dexlib2.Opcode,int) -> <init>
org.jf.dexlib2.dexbacked.instruction.DexBackedInstruction11n -> org.c.b.d.a.k:
    45:46:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,org.jf.dexlib2.Opcode,int) -> <init>
    50:50:int getRegisterA() -> d_
    55:55:int getNarrowLiteral() -> f
    58:58:long getWideLiteral() -> g
org.jf.dexlib2.dexbacked.instruction.DexBackedInstruction11x -> org.c.b.d.a.l:
    44:45:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,org.jf.dexlib2.Opcode,int) -> <init>
    47:47:int getRegisterA() -> d_
org.jf.dexlib2.dexbacked.instruction.DexBackedInstruction12x -> org.c.b.d.a.m:
    45:46:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,org.jf.dexlib2.Opcode,int) -> <init>
    50:50:int getRegisterA() -> d_
    55:55:int getRegisterB() -> e_
org.jf.dexlib2.dexbacked.instruction.DexBackedInstruction20bc -> org.c.b.d.a.n:
    47:48:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,org.jf.dexlib2.Opcode,int) -> <init>
    50:50:int getVerificationError() -> e
    55:56:org.jf.dexlib2.iface.reference.Reference getReference() -> f
    60:62:int getReferenceType() -> g
org.jf.dexlib2.dexbacked.instruction.DexBackedInstruction20t -> org.c.b.d.a.o:
    44:45:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,org.jf.dexlib2.Opcode,int) -> <init>
    47:47:int getCodeOffset() -> e
org.jf.dexlib2.dexbacked.instruction.DexBackedInstruction21c -> org.c.b.d.a.p:
    46:47:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,org.jf.dexlib2.Opcode,int) -> <init>
    49:49:int getRegisterA() -> d_
    54:54:org.jf.dexlib2.iface.reference.Reference getReference() -> f
    59:59:int getReferenceType() -> g
org.jf.dexlib2.dexbacked.instruction.DexBackedInstruction21ih -> org.c.b.d.a.q:
    44:45:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,org.jf.dexlib2.Opcode,int) -> <init>
    47:47:int getRegisterA() -> d_
    48:48:int getNarrowLiteral() -> f
    49:49:long getWideLiteral() -> g
    50:50:short getHatLiteral() -> h
org.jf.dexlib2.dexbacked.instruction.DexBackedInstruction21lh -> org.c.b.d.a.r:
    44:45:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,org.jf.dexlib2.Opcode,int) -> <init>
    47:47:int getRegisterA() -> d_
    48:48:long getWideLiteral() -> g
    49:49:short getHatLiteral() -> h
org.jf.dexlib2.dexbacked.instruction.DexBackedInstruction21s -> org.c.b.d.a.s:
    44:45:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,org.jf.dexlib2.Opcode,int) -> <init>
    47:47:int getRegisterA() -> d_
    48:48:int getNarrowLiteral() -> f
    49:49:long getWideLiteral() -> g
org.jf.dexlib2.dexbacked.instruction.DexBackedInstruction21t -> org.c.b.d.a.t:
    44:45:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,org.jf.dexlib2.Opcode,int) -> <init>
    47:47:int getRegisterA() -> d_
    48:48:int getCodeOffset() -> e
org.jf.dexlib2.dexbacked.instruction.DexBackedInstruction22b -> org.c.b.d.a.u:
    44:45:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,org.jf.dexlib2.Opcode,int) -> <init>
    47:47:int getRegisterA() -> d_
    48:48:int getRegisterB() -> e_
    49:49:int getNarrowLiteral() -> f
    50:50:long getWideLiteral() -> g
org.jf.dexlib2.dexbacked.instruction.DexBackedInstruction22c -> org.c.b.d.a.v:
    47:48:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,org.jf.dexlib2.Opcode,int) -> <init>
    52:52:int getRegisterA() -> d_
    57:57:int getRegisterB() -> e_
    63:63:org.jf.dexlib2.iface.reference.Reference getReference() -> f
    68:68:int getReferenceType() -> g
org.jf.dexlib2.dexbacked.instruction.DexBackedInstruction22cs -> org.c.b.d.a.w:
    45:46:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,org.jf.dexlib2.Opcode,int) -> <init>
    50:50:int getRegisterA() -> d_
    55:55:int getRegisterB() -> e_
    60:60:int getFieldOffset() -> g
org.jf.dexlib2.dexbacked.instruction.DexBackedInstruction22s -> org.c.b.d.a.x:
    45:46:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,org.jf.dexlib2.Opcode,int) -> <init>
    50:50:int getRegisterA() -> d_
    55:55:int getRegisterB() -> e_
    58:58:int getNarrowLiteral() -> f
    59:59:long getWideLiteral() -> g
org.jf.dexlib2.dexbacked.instruction.DexBackedInstruction22t -> org.c.b.d.a.y:
    45:46:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,org.jf.dexlib2.Opcode,int) -> <init>
    50:50:int getRegisterA() -> d_
    55:55:int getRegisterB() -> e_
    58:58:int getCodeOffset() -> e
org.jf.dexlib2.dexbacked.instruction.DexBackedInstruction22x -> org.c.b.d.a.z:
    44:45:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,org.jf.dexlib2.Opcode,int) -> <init>
    47:47:int getRegisterA() -> d_
    48:48:int getRegisterB() -> e_
org.jf.dexlib2.dexbacked.instruction.DexBackedInstruction23x -> org.c.b.d.a.aa:
    44:45:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,org.jf.dexlib2.Opcode,int) -> <init>
    47:47:int getRegisterA() -> d_
    48:48:int getRegisterB() -> e_
    49:49:int getRegisterC() -> g
org.jf.dexlib2.dexbacked.instruction.DexBackedInstruction30t -> org.c.b.d.a.ab:
    44:45:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,org.jf.dexlib2.Opcode,int) -> <init>
    47:47:int getCodeOffset() -> e
org.jf.dexlib2.dexbacked.instruction.DexBackedInstruction31c -> org.c.b.d.a.ac:
    46:47:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,org.jf.dexlib2.Opcode,int) -> <init>
    49:49:int getRegisterA() -> d_
    54:55:org.jf.dexlib2.iface.reference.Reference getReference() -> f
    60:60:int getReferenceType() -> g
org.jf.dexlib2.dexbacked.instruction.DexBackedInstruction31i -> org.c.b.d.a.ad:
    44:45:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,org.jf.dexlib2.Opcode,int) -> <init>
    47:47:int getRegisterA() -> d_
    48:48:int getNarrowLiteral() -> f
    49:49:long getWideLiteral() -> g
org.jf.dexlib2.dexbacked.instruction.DexBackedInstruction31t -> org.c.b.d.a.ae:
    44:45:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,org.jf.dexlib2.Opcode,int) -> <init>
    47:47:int getRegisterA() -> d_
    48:48:int getCodeOffset() -> e
org.jf.dexlib2.dexbacked.instruction.DexBackedInstruction32x -> org.c.b.d.a.af:
    44:45:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,org.jf.dexlib2.Opcode,int) -> <init>
    47:47:int getRegisterA() -> d_
    48:48:int getRegisterB() -> e_
org.jf.dexlib2.dexbacked.instruction.DexBackedInstruction35c -> org.c.b.d.a.ag:
    47:48:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,org.jf.dexlib2.Opcode,int) -> <init>
    51:51:int getRegisterCount() -> e
    56:56:int getRegisterC() -> h
    61:61:int getRegisterD() -> i
    66:66:int getRegisterE() -> j
    71:71:int getRegisterF() -> k
    76:76:int getRegisterG() -> l
    82:83:org.jf.dexlib2.iface.reference.Reference getReference() -> f
    88:88:int getReferenceType() -> g
org.jf.dexlib2.dexbacked.instruction.DexBackedInstruction35mi -> org.c.b.d.a.ah:
    45:46:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,org.jf.dexlib2.Opcode,int) -> <init>
    49:49:int getRegisterCount() -> e
    54:54:int getRegisterC() -> h
    59:59:int getRegisterD() -> i
    64:64:int getRegisterE() -> j
    69:69:int getRegisterF() -> k
    74:74:int getRegisterG() -> l
    79:79:int getInlineIndex() -> f
org.jf.dexlib2.dexbacked.instruction.DexBackedInstruction35ms -> org.c.b.d.a.ai:
    45:46:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,org.jf.dexlib2.Opcode,int) -> <init>
    49:49:int getRegisterCount() -> e
    54:54:int getRegisterC() -> h
    59:59:int getRegisterD() -> i
    64:64:int getRegisterE() -> j
    69:69:int getRegisterF() -> k
    74:74:int getRegisterG() -> l
    79:79:int getVtableIndex() -> f
org.jf.dexlib2.dexbacked.instruction.DexBackedInstruction3rc -> org.c.b.d.a.aj:
    46:47:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,org.jf.dexlib2.Opcode,int) -> <init>
    50:50:int getRegisterCount() -> e
    55:55:int getStartRegister() -> h
    61:62:org.jf.dexlib2.iface.reference.Reference getReference() -> f
    67:67:int getReferenceType() -> g
org.jf.dexlib2.dexbacked.instruction.DexBackedInstruction3rmi -> org.c.b.d.a.ak:
    44:45:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,org.jf.dexlib2.Opcode,int) -> <init>
    48:48:int getRegisterCount() -> e
    53:53:int getStartRegister() -> h
    58:58:int getInlineIndex() -> f
org.jf.dexlib2.dexbacked.instruction.DexBackedInstruction3rms -> org.c.b.d.a.al:
    44:45:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,org.jf.dexlib2.Opcode,int) -> <init>
    48:48:int getRegisterCount() -> e
    53:53:int getStartRegister() -> h
    58:58:int getVtableIndex() -> f
org.jf.dexlib2.dexbacked.instruction.DexBackedInstruction45cc -> org.c.b.d.a.am:
    47:48:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,org.jf.dexlib2.Opcode,int) -> <init>
    51:51:int getRegisterCount() -> e
    56:56:int getRegisterC() -> h
    61:61:int getRegisterD() -> i
    66:66:int getRegisterE() -> j
    71:71:int getRegisterF() -> k
    76:76:int getRegisterG() -> l
    82:83:org.jf.dexlib2.iface.reference.Reference getReference() -> f
    88:88:int getReferenceType() -> g
    93:94:org.jf.dexlib2.iface.reference.Reference getReference2() -> m
    99:99:int getReferenceType2() -> n
org.jf.dexlib2.dexbacked.instruction.DexBackedInstruction4rcc -> org.c.b.d.a.an:
    46:47:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,org.jf.dexlib2.Opcode,int) -> <init>
    50:50:int getRegisterCount() -> e
    55:55:int getStartRegister() -> h
    61:62:org.jf.dexlib2.iface.reference.Reference getReference() -> f
    67:67:int getReferenceType() -> g
    72:73:org.jf.dexlib2.iface.reference.Reference getReference2() -> m
    78:78:int getReferenceType2() -> n
org.jf.dexlib2.dexbacked.instruction.DexBackedInstruction51l -> org.c.b.d.a.ao:
    44:45:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,org.jf.dexlib2.Opcode,int) -> <init>
    47:47:int getRegisterA() -> d_
    48:48:long getWideLiteral() -> g
org.jf.dexlib2.dexbacked.instruction.DexBackedPackedSwitchPayload -> org.c.b.d.a.ap:
    int elementCount -> a
    52:55:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,int) -> <init>
    60:61:java.util.List getSwitchElements() -> f
    82:82:int getCodeUnits() -> b
org.jf.dexlib2.dexbacked.instruction.DexBackedPackedSwitchPayload$1 -> org.c.b.d.a.aq:
    int val$firstKey -> a
    org.jf.dexlib2.dexbacked.instruction.DexBackedPackedSwitchPayload this$0 -> b
    61:61:void <init>(org.jf.dexlib2.dexbacked.instruction.DexBackedPackedSwitchPayload,int) -> <init>
    65:65:org.jf.dexlib2.iface.instruction.SwitchElement readItem(int) -> a
    78:78:int size() -> size
    61:61:java.lang.Object readItem(int) -> b
org.jf.dexlib2.dexbacked.instruction.DexBackedPackedSwitchPayload$1$1 -> org.c.b.d.a.ar:
    int val$index -> a
    org.jf.dexlib2.dexbacked.instruction.DexBackedPackedSwitchPayload$1 this$1 -> b
    65:65:void <init>(org.jf.dexlib2.dexbacked.instruction.DexBackedPackedSwitchPayload$1,int) -> <init>
    68:68:int getKey() -> a
    73:73:int getOffset() -> b
org.jf.dexlib2.dexbacked.instruction.DexBackedSparseSwitchPayload -> org.c.b.d.a.as:
    int elementCount -> a
    51:54:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,int) -> <init>
    59:59:java.util.List getSwitchElements() -> f
    80:80:int getCodeUnits() -> b
org.jf.dexlib2.dexbacked.instruction.DexBackedSparseSwitchPayload$1 -> org.c.b.d.a.at:
    org.jf.dexlib2.dexbacked.instruction.DexBackedSparseSwitchPayload this$0 -> a
    59:59:void <init>(org.jf.dexlib2.dexbacked.instruction.DexBackedSparseSwitchPayload) -> <init>
    63:63:org.jf.dexlib2.iface.instruction.SwitchElement readItem(int) -> a
    76:76:int size() -> size
    59:59:java.lang.Object readItem(int) -> b
org.jf.dexlib2.dexbacked.instruction.DexBackedSparseSwitchPayload$1$1 -> org.c.b.d.a.au:
    int val$index -> a
    org.jf.dexlib2.dexbacked.instruction.DexBackedSparseSwitchPayload$1 this$1 -> b
    63:63:void <init>(org.jf.dexlib2.dexbacked.instruction.DexBackedSparseSwitchPayload$1,int) -> <init>
    66:66:int getKey() -> a
    71:71:int getOffset() -> b
org.jf.dexlib2.dexbacked.instruction.DexBackedUnknownInstruction -> org.c.b.d.a.av:
    43:44:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,int) -> <init>
    47:52:int getOriginalOpcode() -> f_
org.jf.dexlib2.dexbacked.raw.HeaderItem -> org.c.b.d.b.a:
    byte[] MAGIC_VALUE -> a
    int[] SUPPORTED_DEX_VERSIONS -> b
    232:237:byte[] getMagicForApi(int) -> a
    242:254:byte[] getMagicForDexVersion(int) -> b
    265:284:boolean verifyMagic(byte[],int) -> a
    295:299:int getVersion(byte[],int) -> b
    303:307:int getVersionUnchecked(byte[],int) -> d
    311:316:boolean isSupportedDexVersion(int) -> c
    320:321:int getEndian(byte[],int) -> c
    45:46:void <clinit>() -> <clinit>
org.jf.dexlib2.dexbacked.raw.OdexHeaderItem -> org.c.b.d.b.b:
    byte[] MAGIC_VALUE -> a
    int[] SUPPORTED_ODEX_VERSIONS -> b
    60:79:boolean verifyMagic(byte[],int) -> a
    90:94:int getVersion(byte[],int) -> b
    98:102:int getVersionUnchecked(byte[],int) -> c
    39:40:void <clinit>() -> <clinit>
org.jf.dexlib2.dexbacked.reference.DexBackedFieldReference -> org.c.b.d.c.a:
    org.jf.dexlib2.dexbacked.DexBackedDexFile dexFile -> a
    int fieldIdItemOffset -> b
    44:47:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,int) -> <init>
    52:52:java.lang.String getDefiningClass() -> c
    58:58:java.lang.String getName() -> a
    64:64:java.lang.String getType() -> b
org.jf.dexlib2.dexbacked.reference.DexBackedMethodProtoReference -> org.c.b.d.c.b:
    org.jf.dexlib2.dexbacked.DexBackedDexFile dexFile -> a
    int protoIdItemOffset -> b
    48:51:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,int) -> <init>
    56:69:java.util.List getParameterTypes() -> a
    75:75:java.lang.String getReturnType() -> b
org.jf.dexlib2.dexbacked.reference.DexBackedMethodProtoReference$1 -> org.c.b.d.c.c:
    int val$paramListStart -> a
    int val$parameterCount -> b
    org.jf.dexlib2.dexbacked.reference.DexBackedMethodProtoReference this$0 -> c
    60:60:void <init>(org.jf.dexlib2.dexbacked.reference.DexBackedMethodProtoReference,int,int) -> <init>
    64:64:java.lang.String readItem(int) -> a
    66:66:int size() -> size
    60:60:java.lang.Object readItem(int) -> b
org.jf.dexlib2.dexbacked.reference.DexBackedMethodReference -> org.c.b.d.c.d:
    org.jf.dexlib2.dexbacked.DexBackedDexFile dexFile -> a
    int methodIdItemOffset -> b
    int protoIdItemOffset -> c
    50:53:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,int) -> <init>
    58:58:java.lang.String getDefiningClass() -> d
    64:64:java.lang.String getName() -> a
    70:84:java.util.List getParameterTypes() -> b
    90:91:java.lang.String getReturnType() -> c
    95:99:int getProtoIdItemOffset() -> e
org.jf.dexlib2.dexbacked.reference.DexBackedMethodReference$1 -> org.c.b.d.c.e:
    int val$paramListStart -> a
    int val$parameterCount -> b
    org.jf.dexlib2.dexbacked.reference.DexBackedMethodReference this$0 -> c
    75:75:void <init>(org.jf.dexlib2.dexbacked.reference.DexBackedMethodReference,int,int) -> <init>
    79:79:java.lang.String readItem(int) -> a
    81:81:int size() -> size
    75:75:java.lang.Object readItem(int) -> b
org.jf.dexlib2.dexbacked.reference.DexBackedReference -> org.c.b.d.c.f:
    43:55:org.jf.dexlib2.iface.reference.Reference makeReference(org.jf.dexlib2.dexbacked.DexBackedDexFile,int,int) -> a
org.jf.dexlib2.dexbacked.reference.DexBackedStringReference -> org.c.b.d.c.g:
    org.jf.dexlib2.dexbacked.DexBackedDexFile dexFile -> a
    int stringIndex -> b
    46:49:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,int) -> <init>
    53:53:java.lang.String getString() -> a
org.jf.dexlib2.dexbacked.reference.DexBackedTypeReference -> org.c.b.d.c.h:
    org.jf.dexlib2.dexbacked.DexBackedDexFile dexFile -> a
    int typeIndex -> b
    45:48:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,int) -> <init>
    51:51:java.lang.String getType() -> a
org.jf.dexlib2.dexbacked.util.AnnotationsDirectory -> org.c.b.d.d.a:
    org.jf.dexlib2.dexbacked.util.AnnotationsDirectory EMPTY -> a
    43:43:void <init>() -> <init>
    java.util.Set getClassAnnotations() -> a
    org.jf.dexlib2.dexbacked.util.AnnotationsDirectory$AnnotationIterator getFieldAnnotationIterator() -> b
    org.jf.dexlib2.dexbacked.util.AnnotationsDirectory$AnnotationIterator getMethodAnnotationIterator() -> c
    org.jf.dexlib2.dexbacked.util.AnnotationsDirectory$AnnotationIterator getParameterAnnotationIterator() -> d
    61:64:org.jf.dexlib2.dexbacked.util.AnnotationsDirectory newOrEmpty(org.jf.dexlib2.dexbacked.DexBackedDexFile,int) -> a
    101:115:java.util.Set getAnnotations(org.jf.dexlib2.dexbacked.DexBackedDexFile,int) -> b
    121:135:java.util.List getParameterAnnotations(org.jf.dexlib2.dexbacked.DexBackedDexFile,int) -> c
    44:44:void <clinit>() -> <clinit>
org.jf.dexlib2.dexbacked.util.AnnotationsDirectory$1 -> org.c.b.d.d.b:
    44:44:void <init>() -> <init>
    46:46:java.util.Set getClassAnnotations() -> a
    47:47:org.jf.dexlib2.dexbacked.util.AnnotationsDirectory$AnnotationIterator getFieldAnnotationIterator() -> b
    48:48:org.jf.dexlib2.dexbacked.util.AnnotationsDirectory$AnnotationIterator getMethodAnnotationIterator() -> c
    49:49:org.jf.dexlib2.dexbacked.util.AnnotationsDirectory$AnnotationIterator getParameterAnnotationIterator() -> d
org.jf.dexlib2.dexbacked.util.AnnotationsDirectory$2 -> org.c.b.d.d.c:
    org.jf.dexlib2.dexbacked.DexBackedDexFile val$dexFile -> a
    int val$annotationSetOffset -> b
    int val$size -> c
    103:103:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,int,int) -> <init>
    107:108:org.jf.dexlib2.dexbacked.DexBackedAnnotation readItem(int) -> a
    111:111:int size() -> size
    103:103:java.lang.Object readItem(int) -> b
org.jf.dexlib2.dexbacked.util.AnnotationsDirectory$3 -> org.c.b.d.d.d:
    org.jf.dexlib2.dexbacked.DexBackedDexFile val$dexFile -> a
    int val$annotationSetListOffset -> b
    int val$size -> c
    124:124:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,int,int) -> <init>
    128:129:java.util.Set readItem(int) -> a
    132:132:int size() -> size
    124:124:java.lang.Object readItem(int) -> b
org.jf.dexlib2.dexbacked.util.AnnotationsDirectory$AnnotationIterator -> org.c.b.d.d.e:
    org.jf.dexlib2.dexbacked.util.AnnotationsDirectory$AnnotationIterator EMPTY -> a
    int seekTo(int) -> a
    75:75:void <clinit>() -> <clinit>
org.jf.dexlib2.dexbacked.util.AnnotationsDirectory$AnnotationIterator$1 -> org.c.b.d.d.f:
    75:75:void <init>() -> <init>
    76:76:int seekTo(int) -> a
org.jf.dexlib2.dexbacked.util.AnnotationsDirectory$AnnotationsDirectoryImpl -> org.c.b.d.d.g:
    org.jf.dexlib2.dexbacked.DexBackedDexFile dexFile -> b
    int directoryOffset -> c
    153:156:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,int) -> <init>
    159:159:int getFieldAnnotationCount() -> e
    163:163:int getMethodAnnotationCount() -> f
    167:167:int getParameterAnnotationCount() -> g
    172:172:java.util.Set getClassAnnotations() -> a
    177:181:org.jf.dexlib2.dexbacked.util.AnnotationsDirectory$AnnotationIterator getFieldAnnotationIterator() -> b
    186:193:org.jf.dexlib2.dexbacked.util.AnnotationsDirectory$AnnotationIterator getMethodAnnotationIterator() -> c
    198:207:org.jf.dexlib2.dexbacked.util.AnnotationsDirectory$AnnotationIterator getParameterAnnotationIterator() -> d
org.jf.dexlib2.dexbacked.util.AnnotationsDirectory$AnnotationsDirectoryImpl$AnnotationIteratorImpl -> org.c.b.d.d.h:
    int startOffset -> c
    int size -> d
    int currentIndex -> e
    int currentItemIndex -> f
    org.jf.dexlib2.dexbacked.util.AnnotationsDirectory$AnnotationsDirectoryImpl this$0 -> b
    216:221:void <init>(org.jf.dexlib2.dexbacked.util.AnnotationsDirectory$AnnotationsDirectoryImpl,int,int) -> <init>
    224:232:int seekTo(int) -> a
org.jf.dexlib2.dexbacked.util.DebugInfo -> org.c.b.d.d.i:
    52:52:void <init>() -> <init>
    java.util.Iterator getParameterNames(org.jf.dexlib2.dexbacked.DexReader) -> a
    71:74:org.jf.dexlib2.dexbacked.util.DebugInfo newOrEmpty(org.jf.dexlib2.dexbacked.DexBackedDexFile,int,org.jf.dexlib2.dexbacked.DexBackedMethodImplementation) -> a
org.jf.dexlib2.dexbacked.util.DebugInfo$DebugInfoImpl -> org.c.b.d.d.j:
    org.jf.dexlib2.dexbacked.DexBackedDexFile dexFile -> a
    int debugInfoOffset -> b
    org.jf.dexlib2.dexbacked.DexBackedMethodImplementation methodImpl -> c
    org.jf.dexlib2.iface.debug.LocalInfo EMPTY_LOCAL_INFO -> d
    102:106:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,int,org.jf.dexlib2.dexbacked.DexBackedMethodImplementation) -> <init>
    117:169:java.util.Iterator iterator() -> iterator
    282:288:org.jf.dexlib2.dexbacked.util.VariableSizeIterator getParameterNames(org.jf.dexlib2.dexbacked.DexReader) -> b
    95:95:java.util.Iterator getParameterNames(org.jf.dexlib2.dexbacked.DexReader) -> a
    95:95:org.jf.dexlib2.dexbacked.DexBackedMethodImplementation access$000(org.jf.dexlib2.dexbacked.util.DebugInfo$DebugInfoImpl) -> a
    95:95:org.jf.dexlib2.iface.debug.LocalInfo access$100() -> a
    108:108:void <clinit>() -> <clinit>
org.jf.dexlib2.dexbacked.util.DebugInfo$DebugInfoImpl$1 -> org.c.b.d.d.k:
    108:108:void <init>() -> <init>
    109:109:java.lang.String getName() -> e
    110:110:java.lang.String getType() -> a
    111:111:java.lang.String getSignature() -> b
org.jf.dexlib2.dexbacked.util.DebugInfo$DebugInfoImpl$2 -> org.c.b.d.d.l:
    org.jf.dexlib2.dexbacked.util.DebugInfo$DebugInfoImpl this$0 -> a
    140:140:void <init>(org.jf.dexlib2.dexbacked.util.DebugInfo$DebugInfoImpl) -> <init>
    141:141:java.lang.String getName() -> e
    142:142:java.lang.String getType() -> a
    143:143:java.lang.String getSignature() -> b
org.jf.dexlib2.dexbacked.util.DebugInfo$DebugInfoImpl$3 -> org.c.b.d.d.m:
    int codeAddress -> d
    int lineNumber -> e
    int val$lineNumberStart -> a
    org.jf.dexlib2.iface.debug.LocalInfo[] val$locals -> b
    org.jf.dexlib2.dexbacked.util.DebugInfo$DebugInfoImpl this$0 -> c
    169:171:void <init>(org.jf.dexlib2.dexbacked.util.DebugInfo$DebugInfoImpl,org.jf.dexlib2.dexbacked.DexBackedDexFile,int,int,org.jf.dexlib2.iface.debug.LocalInfo[]) -> <init>
    176:271:org.jf.dexlib2.iface.debug.DebugItem readNextItem(org.jf.dexlib2.dexbacked.DexReader) -> a
    169:169:java.lang.Object readNextItem(org.jf.dexlib2.dexbacked.DexReader) -> b
org.jf.dexlib2.dexbacked.util.DebugInfo$DebugInfoImpl$4 -> org.c.b.d.d.n:
    org.jf.dexlib2.dexbacked.util.DebugInfo$DebugInfoImpl this$0 -> a
    288:288:void <init>(org.jf.dexlib2.dexbacked.util.DebugInfo$DebugInfoImpl,org.jf.dexlib2.dexbacked.DexReader,int) -> <init>
    290:290:java.lang.String readNextItem(org.jf.dexlib2.dexbacked.DexReader,int) -> a
    288:288:java.lang.Object readNextItem(org.jf.dexlib2.dexbacked.DexReader,int) -> b
org.jf.dexlib2.dexbacked.util.DebugInfo$EmptyDebugInfo -> org.c.b.d.d.o:
    org.jf.dexlib2.dexbacked.util.DebugInfo$EmptyDebugInfo INSTANCE -> a
    79:79:void <init>() -> <init>
    82:82:java.util.Iterator iterator() -> iterator
    86:86:java.util.Iterator getParameterNames(org.jf.dexlib2.dexbacked.DexReader) -> a
    78:78:void <clinit>() -> <clinit>
org.jf.dexlib2.dexbacked.util.FixedSizeList -> org.c.b.d.d.p:
    41:41:void <init>() -> <init>
    44:47:java.lang.Object get(int) -> get
    java.lang.Object readItem(int) -> b
org.jf.dexlib2.dexbacked.util.FixedSizeSet -> org.c.b.d.d.q:
    43:43:void <init>() -> <init>
    46:46:java.util.Iterator iterator() -> iterator
    java.lang.Object readItem(int) -> b
org.jf.dexlib2.dexbacked.util.FixedSizeSet$1 -> org.c.b.d.d.r:
    int index -> a
    org.jf.dexlib2.dexbacked.util.FixedSizeSet this$0 -> b
    46:47:void <init>(org.jf.dexlib2.dexbacked.util.FixedSizeSet) -> <init>
    49:49:boolean hasNext() -> hasNext
    50:50:void remove() -> remove
    53:56:java.lang.Object next() -> next
org.jf.dexlib2.dexbacked.util.ParameterIterator -> org.c.b.d.d.s:
    java.util.Iterator parameterTypes -> a
    java.util.Iterator parameterAnnotations -> b
    java.util.Iterator parameterNames -> c
    52:56:void <init>(java.util.List,java.util.List,java.util.Iterator) -> <init>
    59:59:boolean hasNext() -> hasNext
    63:79:org.jf.dexlib2.iface.MethodParameter next() -> a
    87:87:void remove() -> remove
    45:45:java.lang.Object next() -> next
org.jf.dexlib2.dexbacked.util.ParameterIterator$1 -> org.c.b.d.d.t:
    java.util.Set val$annotations -> a
    java.lang.String val$name -> b
    java.lang.String val$type -> c
    org.jf.dexlib2.dexbacked.util.ParameterIterator this$0 -> d
    79:79:void <init>(org.jf.dexlib2.dexbacked.util.ParameterIterator,java.util.Set,java.lang.String,java.lang.String) -> <init>
    80:80:java.util.Set getAnnotations() -> c
    81:81:java.lang.String getName() -> e
    82:82:java.lang.String getType() -> a
org.jf.dexlib2.dexbacked.util.StaticInitialValueIterator -> org.c.b.d.d.u:
    org.jf.dexlib2.dexbacked.util.StaticInitialValueIterator EMPTY -> a
    42:42:void <init>() -> <init>
    org.jf.dexlib2.iface.value.EncodedValue getNextOrNull() -> a
    int getReaderOffset() -> b
    55:58:org.jf.dexlib2.dexbacked.util.StaticInitialValueIterator newOrEmpty(org.jf.dexlib2.dexbacked.DexBackedDexFile,int) -> a
    43:43:void <clinit>() -> <clinit>
org.jf.dexlib2.dexbacked.util.StaticInitialValueIterator$1 -> org.c.b.d.d.v:
    43:43:void <init>() -> <init>
    44:44:org.jf.dexlib2.iface.value.EncodedValue getNextOrNull() -> a
    46:46:int getReaderOffset() -> b
org.jf.dexlib2.dexbacked.util.StaticInitialValueIterator$StaticInitialValueIteratorImpl -> org.c.b.d.d.w:
    org.jf.dexlib2.dexbacked.DexReader reader -> b
    int size -> c
    int index -> d
    64:69:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,int) -> <init>
    73:77:org.jf.dexlib2.iface.value.EncodedValue getNextOrNull() -> a
    88:88:int getReaderOffset() -> b
org.jf.dexlib2.dexbacked.util.VariableSizeIterator -> org.c.b.d.d.x:
    org.jf.dexlib2.dexbacked.DexReader reader -> a
    int size -> b
    int index -> c
    47:50:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,int,int) -> <init>
    52:55:void <init>(org.jf.dexlib2.dexbacked.DexReader,int) -> <init>
    java.lang.Object readNextItem(org.jf.dexlib2.dexbacked.DexReader,int) -> b
    72:72:boolean hasNext() -> hasNext
    77:80:java.lang.Object next() -> next
    83:83:void remove() -> remove
org.jf.dexlib2.dexbacked.util.VariableSizeList -> org.c.b.d.d.y:
    org.jf.dexlib2.dexbacked.DexBackedDexFile dexFile -> a
    int offset -> b
    int size -> c
    45:49:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,int,int) -> <init>
    java.lang.Object readNextItem(org.jf.dexlib2.dexbacked.DexReader,int) -> b
    56:56:org.jf.dexlib2.dexbacked.util.VariableSizeListIterator listIterator() -> a
    59:59:int size() -> size
    64:73:org.jf.dexlib2.dexbacked.util.VariableSizeListIterator listIterator(int) -> a
    40:40:java.util.ListIterator listIterator(int) -> listIterator
    40:40:java.util.ListIterator listIterator() -> listIterator
org.jf.dexlib2.dexbacked.util.VariableSizeList$1 -> org.c.b.d.d.z:
    org.jf.dexlib2.dexbacked.util.VariableSizeList this$0 -> a
    64:64:void <init>(org.jf.dexlib2.dexbacked.util.VariableSizeList,org.jf.dexlib2.dexbacked.DexBackedDexFile,int,int) -> <init>
    67:67:java.lang.Object readNextItem(org.jf.dexlib2.dexbacked.DexReader,int) -> a
org.jf.dexlib2.dexbacked.util.VariableSizeListIterator -> org.c.b.d.d.aa:
    org.jf.dexlib2.dexbacked.DexReader reader -> a
    int size -> b
    int startOffset -> c
    int index -> d
    48:52:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,int,int) -> <init>
    java.lang.Object readNextItem(org.jf.dexlib2.dexbacked.DexReader,int) -> a
    69:69:boolean hasNext() -> hasNext
    74:77:java.lang.Object next() -> next
    82:82:boolean hasPrevious() -> hasPrevious
    87:93:java.lang.Object previous() -> previous
    98:98:int nextIndex() -> nextIndex
    103:103:int previousIndex() -> previousIndex
    106:106:void remove() -> remove
    107:107:void set(java.lang.Object) -> set
    108:108:void add(java.lang.Object) -> add
org.jf.dexlib2.dexbacked.util.VariableSizeLookaheadIterator -> org.c.b.d.d.ab:
    org.jf.dexlib2.dexbacked.DexReader reader -> a
    45:47:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,int) -> <init>
    java.lang.Object readNextItem(org.jf.dexlib2.dexbacked.DexReader) -> b
    60:60:java.lang.Object computeNext() -> a
org.jf.dexlib2.dexbacked.util.VariableSizeSet -> org.c.b.d.d.ac:
    org.jf.dexlib2.dexbacked.DexBackedDexFile dexFile -> a
    int offset -> b
    int size -> c
    45:49:void <init>(org.jf.dexlib2.dexbacked.DexBackedDexFile,int,int) -> <init>
    java.lang.Object readNextItem(org.jf.dexlib2.dexbacked.DexReader,int) -> b
    56:56:org.jf.dexlib2.dexbacked.util.VariableSizeIterator iterator() -> a
    64:64:int size() -> size
    40:40:java.util.Iterator iterator() -> iterator
org.jf.dexlib2.dexbacked.util.VariableSizeSet$1 -> org.c.b.d.d.ad:
    org.jf.dexlib2.dexbacked.util.VariableSizeSet this$0 -> a
    56:56:void <init>(org.jf.dexlib2.dexbacked.util.VariableSizeSet,org.jf.dexlib2.dexbacked.DexBackedDexFile,int,int) -> <init>
    59:59:java.lang.Object readNextItem(org.jf.dexlib2.dexbacked.DexReader,int) -> b
org.jf.dexlib2.dexbacked.value.DexBackedAnnotationEncodedValue -> org.c.b.d.e.a:
    org.jf.dexlib2.dexbacked.DexBackedDexFile dexFile -> a
    java.lang.String type -> b
    int elementCount -> c
    int elementsOffset -> d
    50:56:void <init>(org.jf.dexlib2.dexbacked.DexReader) -> <init>
    59:62:void skipFrom(org.jf.dexlib2.dexbacked.DexReader) -> a
    65:69:void skipElements(org.jf.dexlib2.dexbacked.DexReader,int) -> a
    71:71:java.lang.String getType() -> b
    76:76:java.util.Set getElements() -> c
org.jf.dexlib2.dexbacked.value.DexBackedAnnotationEncodedValue$1 -> org.c.b.d.e.b:
    org.jf.dexlib2.dexbacked.value.DexBackedAnnotationEncodedValue this$0 -> a
    76:76:void <init>(org.jf.dexlib2.dexbacked.value.DexBackedAnnotationEncodedValue,org.jf.dexlib2.dexbacked.DexBackedDexFile,int,int) -> <init>
    80:80:org.jf.dexlib2.dexbacked.DexBackedAnnotationElement readNextItem(org.jf.dexlib2.dexbacked.DexReader,int) -> a
    76:76:java.lang.Object readNextItem(org.jf.dexlib2.dexbacked.DexReader,int) -> b
org.jf.dexlib2.dexbacked.value.DexBackedArrayEncodedValue -> org.c.b.d.e.c:
    org.jf.dexlib2.dexbacked.DexBackedDexFile dexFile -> a
    int elementCount -> b
    int encodedArrayOffset -> c
    49:54:void <init>(org.jf.dexlib2.dexbacked.DexReader) -> <init>
    57:59:void skipFrom(org.jf.dexlib2.dexbacked.DexReader) -> a
    62:65:void skipElementsFrom(org.jf.dexlib2.dexbacked.DexReader,int) -> a
    70:70:java.util.List getValue() -> b
org.jf.dexlib2.dexbacked.value.DexBackedArrayEncodedValue$1 -> org.c.b.d.e.d:
    org.jf.dexlib2.dexbacked.value.DexBackedArrayEncodedValue this$0 -> a
    70:70:void <init>(org.jf.dexlib2.dexbacked.value.DexBackedArrayEncodedValue,org.jf.dexlib2.dexbacked.DexBackedDexFile,int,int) -> <init>
    74:74:org.jf.dexlib2.iface.value.EncodedValue readNextItem(org.jf.dexlib2.dexbacked.DexReader,int) -> a
    70:70:java.lang.Object readNextItem(org.jf.dexlib2.dexbacked.DexReader,int) -> b
org.jf.dexlib2.dexbacked.value.DexBackedEncodedValue -> org.c.b.d.e.e:
    46:108:org.jf.dexlib2.iface.value.EncodedValue readFrom(org.jf.dexlib2.dexbacked.DexReader) -> a
    113:153:void skipFrom(org.jf.dexlib2.dexbacked.DexReader) -> b
org.jf.dexlib2.dexbacked.value.DexBackedEnumEncodedValue -> org.c.b.d.e.f:
    org.jf.dexlib2.dexbacked.DexBackedDexFile dexFile -> a
    int fieldIndex -> b
    46:49:void <init>(org.jf.dexlib2.dexbacked.DexReader,int) -> <init>
    52:52:org.jf.dexlib2.iface.reference.FieldReference getValue() -> b
org.jf.dexlib2.dexbacked.value.DexBackedFieldEncodedValue -> org.c.b.d.e.g:
    org.jf.dexlib2.dexbacked.DexBackedDexFile dexFile -> a
    int fieldIndex -> b
    46:49:void <init>(org.jf.dexlib2.dexbacked.DexReader,int) -> <init>
    52:52:org.jf.dexlib2.iface.reference.FieldReference getValue() -> b
org.jf.dexlib2.dexbacked.value.DexBackedMethodEncodedValue -> org.c.b.d.e.h:
    org.jf.dexlib2.dexbacked.DexBackedDexFile dexFile -> a
    int MethodIndex -> b
    46:49:void <init>(org.jf.dexlib2.dexbacked.DexReader,int) -> <init>
    52:52:org.jf.dexlib2.iface.reference.MethodReference getValue() -> b
org.jf.dexlib2.dexbacked.value.DexBackedStringEncodedValue -> org.c.b.d.e.i:
    org.jf.dexlib2.dexbacked.DexBackedDexFile dexFile -> a
    int stringIndex -> b
    44:47:void <init>(org.jf.dexlib2.dexbacked.DexReader,int) -> <init>
    50:50:java.lang.String getValue() -> b
org.jf.dexlib2.dexbacked.value.DexBackedTypeEncodedValue -> org.c.b.d.e.j:
    org.jf.dexlib2.dexbacked.DexBackedDexFile dexFile -> a
    int typeIndex -> b
    44:47:void <init>(org.jf.dexlib2.dexbacked.DexReader,int) -> <init>
    50:50:java.lang.String getValue() -> b
org.jf.dexlib2.iface.Annotation -> org.c.b.e.a:
    int getVisibility() -> a
    java.lang.String getType() -> b
    java.util.Set getElements() -> c
org.jf.dexlib2.iface.AnnotationElement -> org.c.b.e.b:
    java.lang.String getName() -> a
    org.jf.dexlib2.iface.value.EncodedValue getValue() -> b
org.jf.dexlib2.iface.ClassDef -> org.c.b.e.c:
    java.lang.String getType() -> a
    int getAccessFlags() -> c
    java.lang.String getSuperclass() -> b
    java.util.List getInterfaces() -> e
    java.lang.String getSourceFile() -> d
    java.util.Set getAnnotations() -> f
    java.lang.Iterable getStaticFields() -> g
    java.lang.Iterable getInstanceFields() -> h
    java.lang.Iterable getDirectMethods() -> i
    java.lang.Iterable getVirtualMethods() -> j
    java.lang.Iterable getMethods() -> k
org.jf.dexlib2.iface.DexFile -> org.c.b.e.d:
    java.util.Set getClasses() -> c
org.jf.dexlib2.iface.ExceptionHandler -> org.c.b.e.e:
    java.lang.String getExceptionType() -> b
    org.jf.dexlib2.iface.reference.TypeReference getExceptionTypeReference() -> a
    int getHandlerCodeAddress() -> c
org.jf.dexlib2.iface.Field -> org.c.b.e.f:
    java.lang.String getDefiningClass() -> c
    java.lang.String getName() -> a
    java.lang.String getType() -> b
    int getAccessFlags() -> d
    org.jf.dexlib2.iface.value.EncodedValue getInitialValue() -> e
    java.util.Set getAnnotations() -> f
org.jf.dexlib2.iface.Method -> org.c.b.e.g:
    java.lang.String getDefiningClass() -> d
    java.lang.String getName() -> a
    java.util.List getParameters() -> f
    java.lang.String getReturnType() -> c
    int getAccessFlags() -> e
    java.util.Set getAnnotations() -> i
    org.jf.dexlib2.iface.MethodImplementation getImplementation() -> k
org.jf.dexlib2.iface.MethodImplementation -> org.c.b.e.h:
    int getRegisterCount() -> a
    java.lang.Iterable getInstructions() -> e
    java.util.List getTryBlocks() -> c
    java.lang.Iterable getDebugItems() -> d
org.jf.dexlib2.iface.MethodParameter -> org.c.b.e.i:
    java.lang.String getType() -> a
    java.util.Set getAnnotations() -> c
    java.lang.String getName() -> e
org.jf.dexlib2.iface.MultiDexContainer -> org.c.b.e.j:
    java.util.List getDexEntryNames() -> d
    org.jf.dexlib2.iface.DexFile getEntry(java.lang.String) -> b
org.jf.dexlib2.iface.MultiDexContainer$MultiDexFile -> org.c.b.e.k:
org.jf.dexlib2.iface.TryBlock -> org.c.b.e.l:
    int getStartCodeAddress() -> a
    int getCodeUnitCount() -> b
    java.util.List getExceptionHandlers() -> c
org.jf.dexlib2.iface.debug.DebugItem -> org.c.b.e.a.a:
    int getDebugItemType() -> f
    int getCodeAddress() -> c
org.jf.dexlib2.iface.debug.EndLocal -> org.c.b.e.a.b:
    int getRegister() -> d
org.jf.dexlib2.iface.debug.EpilogueBegin -> org.c.b.e.a.c:
org.jf.dexlib2.iface.debug.LineNumber -> org.c.b.e.a.d:
    int getLineNumber() -> a
org.jf.dexlib2.iface.debug.LocalInfo -> org.c.b.e.a.e:
    java.lang.String getName() -> e
    java.lang.String getType() -> a
    java.lang.String getSignature() -> b
org.jf.dexlib2.iface.debug.PrologueEnd -> org.c.b.e.a.f:
org.jf.dexlib2.iface.debug.RestartLocal -> org.c.b.e.a.g:
    int getRegister() -> d
org.jf.dexlib2.iface.debug.SetSourceFile -> org.c.b.e.a.h:
    java.lang.String getSourceFile() -> a
    org.jf.dexlib2.iface.reference.StringReference getSourceFileReference() -> b
org.jf.dexlib2.iface.debug.StartLocal -> org.c.b.e.a.i:
    int getRegister() -> d
    org.jf.dexlib2.iface.reference.StringReference getNameReference() -> g
    org.jf.dexlib2.iface.reference.TypeReference getTypeReference() -> h
    org.jf.dexlib2.iface.reference.StringReference getSignatureReference() -> i
org.jf.dexlib2.iface.instruction.DualReferenceInstruction -> org.c.b.e.b.a:
    org.jf.dexlib2.iface.reference.Reference getReference2() -> m
    int getReferenceType2() -> n
org.jf.dexlib2.iface.instruction.FieldOffsetInstruction -> org.c.b.e.b.b:
    int getFieldOffset() -> g
org.jf.dexlib2.iface.instruction.FiveRegisterInstruction -> org.c.b.e.b.c:
    int getRegisterC() -> h
    int getRegisterD() -> i
    int getRegisterE() -> j
    int getRegisterF() -> k
    int getRegisterG() -> l
org.jf.dexlib2.iface.instruction.HatLiteralInstruction -> org.c.b.e.b.d:
    short getHatLiteral() -> h
org.jf.dexlib2.iface.instruction.InlineIndexInstruction -> org.c.b.e.b.e:
    int getInlineIndex() -> f
org.jf.dexlib2.iface.instruction.Instruction -> org.c.b.e.b.f:
    org.jf.dexlib2.Opcode getOpcode() -> a
    int getCodeUnits() -> b
org.jf.dexlib2.iface.instruction.LongHatLiteralInstruction -> org.c.b.e.b.g:
org.jf.dexlib2.iface.instruction.NarrowHatLiteralInstruction -> org.c.b.e.b.h:
org.jf.dexlib2.iface.instruction.NarrowLiteralInstruction -> org.c.b.e.b.i:
    int getNarrowLiteral() -> f
org.jf.dexlib2.iface.instruction.OffsetInstruction -> org.c.b.e.b.j:
    int getCodeOffset() -> e
org.jf.dexlib2.iface.instruction.OneRegisterInstruction -> org.c.b.e.b.k:
    int getRegisterA() -> d_
org.jf.dexlib2.iface.instruction.PayloadInstruction -> org.c.b.e.b.l:
org.jf.dexlib2.iface.instruction.ReferenceInstruction -> org.c.b.e.b.m:
    org.jf.dexlib2.iface.reference.Reference getReference() -> f
    int getReferenceType() -> g
org.jf.dexlib2.iface.instruction.RegisterRangeInstruction -> org.c.b.e.b.n:
    int getStartRegister() -> h
org.jf.dexlib2.iface.instruction.SwitchElement -> org.c.b.e.b.o:
    int getKey() -> a
    int getOffset() -> b
org.jf.dexlib2.iface.instruction.SwitchPayload -> org.c.b.e.b.p:
    java.util.List getSwitchElements() -> f
org.jf.dexlib2.iface.instruction.ThreeRegisterInstruction -> org.c.b.e.b.q:
    int getRegisterC() -> g
org.jf.dexlib2.iface.instruction.TwoRegisterInstruction -> org.c.b.e.b.r:
    int getRegisterB() -> e_
org.jf.dexlib2.iface.instruction.VariableRegisterInstruction -> org.c.b.e.b.s:
    int getRegisterCount() -> e
org.jf.dexlib2.iface.instruction.VerificationErrorInstruction -> org.c.b.e.b.t:
    int getVerificationError() -> e
org.jf.dexlib2.iface.instruction.VtableIndexInstruction -> org.c.b.e.b.u:
    int getVtableIndex() -> f
org.jf.dexlib2.iface.instruction.WideLiteralInstruction -> org.c.b.e.b.v:
    long getWideLiteral() -> g
org.jf.dexlib2.iface.instruction.formats.ArrayPayload -> org.c.b.e.b.a.a:
    int getElementWidth() -> e
    java.util.List getArrayElements() -> f
org.jf.dexlib2.iface.instruction.formats.Instruction10t -> org.c.b.e.b.a.b:
org.jf.dexlib2.iface.instruction.formats.Instruction10x -> org.c.b.e.b.a.c:
org.jf.dexlib2.iface.instruction.formats.Instruction11n -> org.c.b.e.b.a.d:
org.jf.dexlib2.iface.instruction.formats.Instruction11x -> org.c.b.e.b.a.e:
org.jf.dexlib2.iface.instruction.formats.Instruction12x -> org.c.b.e.b.a.f:
org.jf.dexlib2.iface.instruction.formats.Instruction20bc -> org.c.b.e.b.a.g:
org.jf.dexlib2.iface.instruction.formats.Instruction20t -> org.c.b.e.b.a.h:
org.jf.dexlib2.iface.instruction.formats.Instruction21c -> org.c.b.e.b.a.i:
org.jf.dexlib2.iface.instruction.formats.Instruction21ih -> org.c.b.e.b.a.j:
org.jf.dexlib2.iface.instruction.formats.Instruction21lh -> org.c.b.e.b.a.k:
org.jf.dexlib2.iface.instruction.formats.Instruction21s -> org.c.b.e.b.a.l:
org.jf.dexlib2.iface.instruction.formats.Instruction21t -> org.c.b.e.b.a.m:
org.jf.dexlib2.iface.instruction.formats.Instruction22b -> org.c.b.e.b.a.n:
org.jf.dexlib2.iface.instruction.formats.Instruction22c -> org.c.b.e.b.a.o:
org.jf.dexlib2.iface.instruction.formats.Instruction22cs -> org.c.b.e.b.a.p:
org.jf.dexlib2.iface.instruction.formats.Instruction22s -> org.c.b.e.b.a.q:
org.jf.dexlib2.iface.instruction.formats.Instruction22t -> org.c.b.e.b.a.r:
org.jf.dexlib2.iface.instruction.formats.Instruction22x -> org.c.b.e.b.a.s:
org.jf.dexlib2.iface.instruction.formats.Instruction23x -> org.c.b.e.b.a.t:
org.jf.dexlib2.iface.instruction.formats.Instruction30t -> org.c.b.e.b.a.u:
org.jf.dexlib2.iface.instruction.formats.Instruction31c -> org.c.b.e.b.a.v:
org.jf.dexlib2.iface.instruction.formats.Instruction31i -> org.c.b.e.b.a.w:
org.jf.dexlib2.iface.instruction.formats.Instruction31t -> org.c.b.e.b.a.x:
org.jf.dexlib2.iface.instruction.formats.Instruction32x -> org.c.b.e.b.a.y:
org.jf.dexlib2.iface.instruction.formats.Instruction35c -> org.c.b.e.b.a.z:
org.jf.dexlib2.iface.instruction.formats.Instruction35mi -> org.c.b.e.b.a.aa:
org.jf.dexlib2.iface.instruction.formats.Instruction35ms -> org.c.b.e.b.a.ab:
org.jf.dexlib2.iface.instruction.formats.Instruction3rc -> org.c.b.e.b.a.ac:
org.jf.dexlib2.iface.instruction.formats.Instruction3rmi -> org.c.b.e.b.a.ad:
org.jf.dexlib2.iface.instruction.formats.Instruction3rms -> org.c.b.e.b.a.ae:
org.jf.dexlib2.iface.instruction.formats.Instruction45cc -> org.c.b.e.b.a.af:
org.jf.dexlib2.iface.instruction.formats.Instruction4rcc -> org.c.b.e.b.a.ag:
org.jf.dexlib2.iface.instruction.formats.Instruction51l -> org.c.b.e.b.a.ah:
org.jf.dexlib2.iface.instruction.formats.PackedSwitchPayload -> org.c.b.e.b.a.ai:
org.jf.dexlib2.iface.instruction.formats.SparseSwitchPayload -> org.c.b.e.b.a.aj:
org.jf.dexlib2.iface.instruction.formats.UnknownInstruction -> org.c.b.e.b.a.ak:
    int getOriginalOpcode() -> f_
org.jf.dexlib2.iface.reference.FieldReference -> org.c.b.e.c.a:
    java.lang.String getDefiningClass() -> c
    java.lang.String getName() -> a
    java.lang.String getType() -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int compareTo(org.jf.dexlib2.iface.reference.FieldReference) -> a
org.jf.dexlib2.iface.reference.MethodProtoReference -> org.c.b.e.c.b:
    java.util.List getParameterTypes() -> a
    java.lang.String getReturnType() -> b
org.jf.dexlib2.iface.reference.MethodReference -> org.c.b.e.c.c:
    java.lang.String getDefiningClass() -> d
    java.lang.String getName() -> a
    java.util.List getParameterTypes() -> b
    java.lang.String getReturnType() -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int compareTo(org.jf.dexlib2.iface.reference.MethodReference) -> a
org.jf.dexlib2.iface.reference.Reference -> org.c.b.e.c.d:
org.jf.dexlib2.iface.reference.StringReference -> org.c.b.e.c.e:
    java.lang.String getString() -> a
org.jf.dexlib2.iface.reference.TypeReference -> org.c.b.e.c.f:
    java.lang.String getType() -> a
org.jf.dexlib2.iface.value.AnnotationEncodedValue -> org.c.b.e.d.a:
    java.lang.String getType() -> b
    java.util.Set getElements() -> c
org.jf.dexlib2.iface.value.ArrayEncodedValue -> org.c.b.e.d.b:
    java.util.List getValue() -> b
org.jf.dexlib2.iface.value.BooleanEncodedValue -> org.c.b.e.d.c:
    boolean getValue() -> b
org.jf.dexlib2.iface.value.ByteEncodedValue -> org.c.b.e.d.d:
    byte getValue() -> b
org.jf.dexlib2.iface.value.CharEncodedValue -> org.c.b.e.d.e:
    char getValue() -> b
org.jf.dexlib2.iface.value.DoubleEncodedValue -> org.c.b.e.d.f:
    double getValue() -> b
org.jf.dexlib2.iface.value.EncodedValue -> org.c.b.e.d.g:
    int getValueType() -> a
org.jf.dexlib2.iface.value.EnumEncodedValue -> org.c.b.e.d.h:
    org.jf.dexlib2.iface.reference.FieldReference getValue() -> b
org.jf.dexlib2.iface.value.FieldEncodedValue -> org.c.b.e.d.i:
    org.jf.dexlib2.iface.reference.FieldReference getValue() -> b
org.jf.dexlib2.iface.value.FloatEncodedValue -> org.c.b.e.d.j:
    float getValue() -> b
org.jf.dexlib2.iface.value.IntEncodedValue -> org.c.b.e.d.k:
    int getValue() -> b
org.jf.dexlib2.iface.value.LongEncodedValue -> org.c.b.e.d.l:
    long getValue() -> b
org.jf.dexlib2.iface.value.MethodEncodedValue -> org.c.b.e.d.m:
    org.jf.dexlib2.iface.reference.MethodReference getValue() -> b
org.jf.dexlib2.iface.value.NullEncodedValue -> org.c.b.e.d.n:
org.jf.dexlib2.iface.value.ShortEncodedValue -> org.c.b.e.d.o:
    short getValue() -> b
org.jf.dexlib2.iface.value.StringEncodedValue -> org.c.b.e.d.p:
    java.lang.String getValue() -> b
org.jf.dexlib2.iface.value.TypeEncodedValue -> org.c.b.e.d.q:
    java.lang.String getValue() -> b
org.jf.dexlib2.immutable.ImmutableAnnotation -> org.c.b.f.a:
    int visibility -> b
    java.lang.String type -> c
    com.google.common.collect.ImmutableSet elements -> d
    org.jf.util.ImmutableConverter CONVERTER -> e
    52:56:void <init>(int,java.lang.String,java.util.Collection) -> <init>
    67:73:org.jf.dexlib2.immutable.ImmutableAnnotation of(org.jf.dexlib2.iface.Annotation) -> b
    76:76:int getVisibility() -> a
    77:77:java.lang.String getType() -> b
    78:78:com.google.common.collect.ImmutableSet getElements() -> d
    82:82:com.google.common.collect.ImmutableSet immutableSetOf(java.lang.Iterable) -> a
    45:45:java.util.Set getElements() -> c
    85:85:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.ImmutableAnnotation$1 -> org.c.b.f.b:
    86:86:void <init>() -> <init>
    89:89:boolean isImmutable(org.jf.dexlib2.iface.Annotation) -> a
    95:95:org.jf.dexlib2.immutable.ImmutableAnnotation makeImmutable(org.jf.dexlib2.iface.Annotation) -> b
    86:86:java.lang.Object makeImmutable(java.lang.Object) -> a
    86:86:boolean isImmutable(java.lang.Object) -> b
org.jf.dexlib2.immutable.ImmutableAnnotationElement -> org.c.b.f.c:
    java.lang.String name -> b
    org.jf.dexlib2.immutable.value.ImmutableEncodedValue value -> c
    org.jf.util.ImmutableConverter CONVERTER -> d
    50:53:void <init>(java.lang.String,org.jf.dexlib2.iface.value.EncodedValue) -> <init>
    62:67:org.jf.dexlib2.immutable.ImmutableAnnotationElement of(org.jf.dexlib2.iface.AnnotationElement) -> b
    70:70:java.lang.String getName() -> a
    71:71:org.jf.dexlib2.iface.value.EncodedValue getValue() -> b
    76:76:com.google.common.collect.ImmutableSet immutableSetOf(java.lang.Iterable) -> a
    79:79:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.ImmutableAnnotationElement$1 -> org.c.b.f.d:
    80:80:void <init>() -> <init>
    83:83:boolean isImmutable(org.jf.dexlib2.iface.AnnotationElement) -> a
    89:89:org.jf.dexlib2.immutable.ImmutableAnnotationElement makeImmutable(org.jf.dexlib2.iface.AnnotationElement) -> b
    80:80:java.lang.Object makeImmutable(java.lang.Object) -> a
    80:80:boolean isImmutable(java.lang.Object) -> b
org.jf.dexlib2.immutable.ImmutableExceptionHandler -> org.c.b.f.e:
    java.lang.String exceptionType -> b
    int handlerCodeAddress -> c
    org.jf.util.ImmutableConverter CONVERTER -> d
    47:50:void <init>(java.lang.String,int) -> <init>
    53:58:org.jf.dexlib2.immutable.ImmutableExceptionHandler of(org.jf.dexlib2.iface.ExceptionHandler) -> b
    61:61:java.lang.String getExceptionType() -> b
    62:62:int getHandlerCodeAddress() -> c
    67:67:com.google.common.collect.ImmutableList immutableListOf(java.lang.Iterable) -> a
    70:70:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.ImmutableExceptionHandler$1 -> org.c.b.f.f:
    71:71:void <init>() -> <init>
    74:74:boolean isImmutable(org.jf.dexlib2.iface.ExceptionHandler) -> a
    80:80:org.jf.dexlib2.immutable.ImmutableExceptionHandler makeImmutable(org.jf.dexlib2.iface.ExceptionHandler) -> b
    71:71:java.lang.Object makeImmutable(java.lang.Object) -> a
    71:71:boolean isImmutable(java.lang.Object) -> b
org.jf.dexlib2.immutable.ImmutableMethod -> org.c.b.f.g:
    java.lang.String definingClass -> a
    java.lang.String name -> b
    com.google.common.collect.ImmutableList parameters -> c
    java.lang.String returnType -> d
    int accessFlags -> e
    com.google.common.collect.ImmutableSet annotations -> f
    org.jf.dexlib2.immutable.ImmutableMethodImplementation methodImplementation -> g
    org.jf.util.ImmutableConverter CONVERTER -> h
    65:73:void <init>(java.lang.String,java.lang.String,java.lang.Iterable,java.lang.String,int,java.util.Set,org.jf.dexlib2.iface.MethodImplementation) -> <init>
    81:89:void <init>(java.lang.String,java.lang.String,com.google.common.collect.ImmutableList,java.lang.String,int,com.google.common.collect.ImmutableSet,org.jf.dexlib2.immutable.ImmutableMethodImplementation) -> <init>
    92:102:org.jf.dexlib2.immutable.ImmutableMethod of(org.jf.dexlib2.iface.Method) -> a
    105:105:java.lang.String getDefiningClass() -> d
    106:106:java.lang.String getName() -> a
    107:107:com.google.common.collect.ImmutableList getParameterTypes() -> g
    108:108:com.google.common.collect.ImmutableList getParameters() -> h
    109:109:java.lang.String getReturnType() -> c
    110:110:int getAccessFlags() -> e
    111:111:com.google.common.collect.ImmutableSet getAnnotations() -> j
    112:112:org.jf.dexlib2.immutable.ImmutableMethodImplementation getImplementation() -> l
    50:50:java.util.List getParameterTypes() -> b
    50:50:org.jf.dexlib2.iface.MethodImplementation getImplementation() -> k
    50:50:java.util.Set getAnnotations() -> i
    50:50:java.util.List getParameters() -> f
    119:119:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.ImmutableMethod$1 -> org.c.b.f.h:
    120:120:void <init>() -> <init>
    123:123:boolean isImmutable(org.jf.dexlib2.iface.Method) -> a
    129:129:org.jf.dexlib2.immutable.ImmutableMethod makeImmutable(org.jf.dexlib2.iface.Method) -> b
    120:120:java.lang.Object makeImmutable(java.lang.Object) -> a
    120:120:boolean isImmutable(java.lang.Object) -> b
org.jf.dexlib2.immutable.ImmutableMethodImplementation -> org.c.b.f.i:
    int registerCount -> a
    com.google.common.collect.ImmutableList instructions -> b
    com.google.common.collect.ImmutableList tryBlocks -> c
    com.google.common.collect.ImmutableList debugItems -> d
    57:62:void <init>(int,java.lang.Iterable,java.util.List,java.lang.Iterable) -> <init>
    76:86:org.jf.dexlib2.immutable.ImmutableMethodImplementation of(org.jf.dexlib2.iface.MethodImplementation) -> a
    89:89:int getRegisterCount() -> a
    90:90:com.google.common.collect.ImmutableList getInstructions() -> b
    91:91:com.google.common.collect.ImmutableList getTryBlocks() -> f
    92:92:com.google.common.collect.ImmutableList getDebugItems() -> g
    48:48:java.lang.Iterable getDebugItems() -> d
    48:48:java.util.List getTryBlocks() -> c
    48:48:java.lang.Iterable getInstructions() -> e
org.jf.dexlib2.immutable.ImmutableMethodParameter -> org.c.b.f.j:
    java.lang.String type -> a
    com.google.common.collect.ImmutableSet annotations -> b
    java.lang.String name -> c
    org.jf.util.ImmutableConverter CONVERTER -> d
    53:57:void <init>(java.lang.String,java.util.Set,java.lang.String) -> <init>
    61:65:void <init>(java.lang.String,com.google.common.collect.ImmutableSet,java.lang.String) -> <init>
    68:74:org.jf.dexlib2.immutable.ImmutableMethodParameter of(org.jf.dexlib2.iface.MethodParameter) -> a
    77:77:java.lang.String getType() -> a
    78:78:java.util.Set getAnnotations() -> c
    79:79:java.lang.String getName() -> e
    82:82:java.lang.String getSignature() -> b
    87:87:com.google.common.collect.ImmutableList immutableListOf(java.lang.Iterable) -> a
    90:90:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.ImmutableMethodParameter$1 -> org.c.b.f.k:
    91:91:void <init>() -> <init>
    94:94:boolean isImmutable(org.jf.dexlib2.iface.MethodParameter) -> a
    100:100:org.jf.dexlib2.immutable.ImmutableMethodParameter makeImmutable(org.jf.dexlib2.iface.MethodParameter) -> b
    91:91:java.lang.Object makeImmutable(java.lang.Object) -> a
    91:91:boolean isImmutable(java.lang.Object) -> b
org.jf.dexlib2.immutable.ImmutableTryBlock -> org.c.b.f.l:
    int startCodeAddress -> a
    int codeUnitCount -> b
    com.google.common.collect.ImmutableList exceptionHandlers -> c
    org.jf.util.ImmutableConverter CONVERTER -> d
    52:56:void <init>(int,int,java.util.List) -> <init>
    67:73:org.jf.dexlib2.immutable.ImmutableTryBlock of(org.jf.dexlib2.iface.TryBlock) -> a
    76:76:int getStartCodeAddress() -> a
    77:77:int getCodeUnitCount() -> b
    80:80:com.google.common.collect.ImmutableList getExceptionHandlers() -> d
    86:86:com.google.common.collect.ImmutableList immutableListOf(java.util.List) -> a
    45:45:java.util.List getExceptionHandlers() -> c
    89:89:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.ImmutableTryBlock$1 -> org.c.b.f.m:
    90:90:void <init>() -> <init>
    93:93:boolean isImmutable(org.jf.dexlib2.iface.TryBlock) -> a
    99:99:org.jf.dexlib2.immutable.ImmutableTryBlock makeImmutable(org.jf.dexlib2.iface.TryBlock) -> b
    90:90:java.lang.Object makeImmutable(java.lang.Object) -> a
    90:90:boolean isImmutable(java.lang.Object) -> b
org.jf.dexlib2.immutable.debug.ImmutableDebugItem -> org.c.b.f.a.a:
    int codeAddress -> a
    org.jf.util.ImmutableConverter CONVERTER -> b
    46:48:void <init>(int) -> <init>
    52:71:org.jf.dexlib2.immutable.debug.ImmutableDebugItem of(org.jf.dexlib2.iface.debug.DebugItem) -> a
    75:75:int getCodeAddress() -> c
    79:79:com.google.common.collect.ImmutableList immutableListOf(java.lang.Iterable) -> a
    82:82:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.debug.ImmutableDebugItem$1 -> org.c.b.f.a.b:
    83:83:void <init>() -> <init>
    86:86:boolean isImmutable(org.jf.dexlib2.iface.debug.DebugItem) -> a
    92:92:org.jf.dexlib2.immutable.debug.ImmutableDebugItem makeImmutable(org.jf.dexlib2.iface.debug.DebugItem) -> b
    83:83:java.lang.Object makeImmutable(java.lang.Object) -> a
    83:83:boolean isImmutable(java.lang.Object) -> b
org.jf.dexlib2.immutable.debug.ImmutableEndLocal -> org.c.b.f.a.c:
    int register -> b
    java.lang.String name -> c
    java.lang.String type -> d
    java.lang.String signature -> e
    60:65:void <init>(int,int,java.lang.String,java.lang.String,java.lang.String) -> <init>
    69:77:org.jf.dexlib2.immutable.debug.ImmutableEndLocal of(org.jf.dexlib2.iface.debug.EndLocal) -> a
    80:80:int getRegister() -> d
    81:81:java.lang.String getName() -> e
    82:82:java.lang.String getType() -> a
    83:83:java.lang.String getSignature() -> b
    85:85:int getDebugItemType() -> f
org.jf.dexlib2.immutable.debug.ImmutableEpilogueBegin -> org.c.b.f.a.d:
    41:42:void <init>(int) -> <init>
    46:49:org.jf.dexlib2.immutable.debug.ImmutableEpilogueBegin of(org.jf.dexlib2.iface.debug.EpilogueBegin) -> a
    52:52:int getDebugItemType() -> f
org.jf.dexlib2.immutable.debug.ImmutableLineNumber -> org.c.b.f.a.e:
    int lineNumber -> b
    44:46:void <init>(int,int) -> <init>
    50:55:org.jf.dexlib2.immutable.debug.ImmutableLineNumber of(org.jf.dexlib2.iface.debug.LineNumber) -> a
    58:58:int getLineNumber() -> a
    60:60:int getDebugItemType() -> f
org.jf.dexlib2.immutable.debug.ImmutablePrologueEnd -> org.c.b.f.a.f:
    41:42:void <init>(int) -> <init>
    46:49:org.jf.dexlib2.immutable.debug.ImmutablePrologueEnd of(org.jf.dexlib2.iface.debug.PrologueEnd) -> a
    52:52:int getDebugItemType() -> f
org.jf.dexlib2.immutable.debug.ImmutableRestartLocal -> org.c.b.f.a.g:
    int register -> b
    java.lang.String name -> c
    java.lang.String type -> d
    java.lang.String signature -> e
    60:65:void <init>(int,int,java.lang.String,java.lang.String,java.lang.String) -> <init>
    69:77:org.jf.dexlib2.immutable.debug.ImmutableRestartLocal of(org.jf.dexlib2.iface.debug.RestartLocal) -> a
    80:80:int getRegister() -> d
    81:81:java.lang.String getName() -> e
    82:82:java.lang.String getType() -> a
    83:83:java.lang.String getSignature() -> b
    85:85:int getDebugItemType() -> f
org.jf.dexlib2.immutable.debug.ImmutableSetSourceFile -> org.c.b.f.a.h:
    java.lang.String sourceFile -> b
    47:49:void <init>(int,java.lang.String) -> <init>
    53:58:org.jf.dexlib2.immutable.debug.ImmutableSetSourceFile of(org.jf.dexlib2.iface.debug.SetSourceFile) -> a
    61:61:java.lang.String getSourceFile() -> a
    64:64:org.jf.dexlib2.iface.reference.StringReference getSourceFileReference() -> b
    72:72:int getDebugItemType() -> f
org.jf.dexlib2.immutable.debug.ImmutableSetSourceFile$1 -> org.c.b.f.a.i:
    org.jf.dexlib2.immutable.debug.ImmutableSetSourceFile this$0 -> a
    64:64:void <init>(org.jf.dexlib2.immutable.debug.ImmutableSetSourceFile) -> <init>
    66:66:java.lang.String getString() -> a
org.jf.dexlib2.immutable.debug.ImmutableStartLocal -> org.c.b.f.a.j:
    int register -> b
    java.lang.String name -> c
    java.lang.String type -> d
    java.lang.String signature -> e
    55:60:void <init>(int,int,java.lang.String,java.lang.String,java.lang.String) -> <init>
    64:72:org.jf.dexlib2.immutable.debug.ImmutableStartLocal of(org.jf.dexlib2.iface.debug.StartLocal) -> a
    75:75:int getRegister() -> d
    78:78:org.jf.dexlib2.iface.reference.StringReference getNameReference() -> g
    86:86:org.jf.dexlib2.iface.reference.TypeReference getTypeReference() -> h
    94:94:org.jf.dexlib2.iface.reference.StringReference getSignatureReference() -> i
    101:101:java.lang.String getName() -> e
    102:102:java.lang.String getType() -> a
    103:103:java.lang.String getSignature() -> b
    105:105:int getDebugItemType() -> f
org.jf.dexlib2.immutable.debug.ImmutableStartLocal$1 -> org.c.b.f.a.k:
    org.jf.dexlib2.immutable.debug.ImmutableStartLocal this$0 -> a
    78:78:void <init>(org.jf.dexlib2.immutable.debug.ImmutableStartLocal) -> <init>
    80:80:java.lang.String getString() -> a
org.jf.dexlib2.immutable.debug.ImmutableStartLocal$2 -> org.c.b.f.a.l:
    org.jf.dexlib2.immutable.debug.ImmutableStartLocal this$0 -> a
    86:86:void <init>(org.jf.dexlib2.immutable.debug.ImmutableStartLocal) -> <init>
    88:88:java.lang.String getType() -> a
org.jf.dexlib2.immutable.debug.ImmutableStartLocal$3 -> org.c.b.f.a.m:
    org.jf.dexlib2.immutable.debug.ImmutableStartLocal this$0 -> a
    94:94:void <init>(org.jf.dexlib2.immutable.debug.ImmutableStartLocal) -> <init>
    96:96:java.lang.String getString() -> a
org.jf.dexlib2.immutable.instruction.ImmutableArrayPayload -> org.c.b.f.b.a:
    org.jf.dexlib2.Opcode OPCODE -> a
    int elementWidth -> b
    com.google.common.collect.ImmutableList arrayElements -> c
    52:55:void <init>(int,java.util.List) -> <init>
    68:73:org.jf.dexlib2.immutable.instruction.ImmutableArrayPayload of(org.jf.dexlib2.iface.instruction.formats.ArrayPayload) -> a
    76:76:int getElementWidth() -> e
    77:77:java.util.List getArrayElements() -> f
    79:79:int getCodeUnits() -> b
    80:80:org.jf.dexlib2.Format getFormat() -> c
    45:45:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.instruction.ImmutableInstruction -> org.c.b.f.b.b:
    org.jf.dexlib2.Opcode opcode -> d
    org.jf.util.ImmutableConverter CONVERTER -> a
    47:50:void <init>(org.jf.dexlib2.Opcode) -> <init>
    54:131:org.jf.dexlib2.immutable.instruction.ImmutableInstruction of(org.jf.dexlib2.iface.instruction.Instruction) -> a
    136:136:org.jf.dexlib2.Opcode getOpcode() -> a
    org.jf.dexlib2.Format getFormat() -> c
    142:142:int getCodeUnits() -> b
    147:147:com.google.common.collect.ImmutableList immutableListOf(java.lang.Iterable) -> a
    150:150:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.instruction.ImmutableInstruction$1 -> org.c.b.f.b.c:
    151:151:void <init>() -> <init>
    154:154:boolean isImmutable(org.jf.dexlib2.iface.instruction.Instruction) -> a
    160:160:org.jf.dexlib2.immutable.instruction.ImmutableInstruction makeImmutable(org.jf.dexlib2.iface.instruction.Instruction) -> b
    151:151:java.lang.Object makeImmutable(java.lang.Object) -> a
    151:151:boolean isImmutable(java.lang.Object) -> b
org.jf.dexlib2.immutable.instruction.ImmutableInstruction$2 -> org.c.b.f.b.d:
    int[] $SwitchMap$org$jf$dexlib2$Format -> a
    58:58:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.instruction.ImmutableInstruction10t -> org.c.b.f.b.e:
    org.jf.dexlib2.Format FORMAT -> a
    int codeOffset -> b
    48:50:void <init>(org.jf.dexlib2.Opcode,int) -> <init>
    53:58:org.jf.dexlib2.immutable.instruction.ImmutableInstruction10t of(org.jf.dexlib2.iface.instruction.formats.Instruction10t) -> a
    61:61:int getCodeOffset() -> e
    62:62:org.jf.dexlib2.Format getFormat() -> c
    42:42:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.instruction.ImmutableInstruction10x -> org.c.b.f.b.f:
    org.jf.dexlib2.Format FORMAT -> a
    44:45:void <init>(org.jf.dexlib2.Opcode) -> <init>
    48:51:org.jf.dexlib2.immutable.instruction.ImmutableInstruction10x of(org.jf.dexlib2.iface.instruction.formats.Instruction10x) -> a
    54:54:org.jf.dexlib2.Format getFormat() -> c
    41:41:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.instruction.ImmutableInstruction11n -> org.c.b.f.b.g:
    org.jf.dexlib2.Format FORMAT -> a
    int registerA -> b
    int literal -> c
    50:53:void <init>(org.jf.dexlib2.Opcode,int,int) -> <init>
    56:62:org.jf.dexlib2.immutable.instruction.ImmutableInstruction11n of(org.jf.dexlib2.iface.instruction.formats.Instruction11n) -> a
    65:65:int getRegisterA() -> d_
    66:66:int getNarrowLiteral() -> f
    67:67:long getWideLiteral() -> g
    69:69:org.jf.dexlib2.Format getFormat() -> c
    42:42:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.instruction.ImmutableInstruction11x -> org.c.b.f.b.h:
    org.jf.dexlib2.Format FORMAT -> a
    int registerA -> b
    48:50:void <init>(org.jf.dexlib2.Opcode,int) -> <init>
    53:58:org.jf.dexlib2.immutable.instruction.ImmutableInstruction11x of(org.jf.dexlib2.iface.instruction.formats.Instruction11x) -> a
    61:61:int getRegisterA() -> d_
    63:63:org.jf.dexlib2.Format getFormat() -> c
    42:42:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.instruction.ImmutableInstruction12x -> org.c.b.f.b.i:
    org.jf.dexlib2.Format FORMAT -> a
    int registerA -> b
    int registerB -> c
    50:53:void <init>(org.jf.dexlib2.Opcode,int,int) -> <init>
    56:62:org.jf.dexlib2.immutable.instruction.ImmutableInstruction12x of(org.jf.dexlib2.iface.instruction.formats.Instruction12x) -> a
    65:65:int getRegisterA() -> d_
    66:66:int getRegisterB() -> e_
    68:68:org.jf.dexlib2.Format getFormat() -> c
    42:42:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.instruction.ImmutableInstruction20bc -> org.c.b.f.b.j:
    org.jf.dexlib2.Format FORMAT -> a
    int verificationError -> b
    org.jf.dexlib2.immutable.reference.ImmutableReference reference -> c
    54:57:void <init>(org.jf.dexlib2.Opcode,int,org.jf.dexlib2.iface.reference.Reference) -> <init>
    60:66:org.jf.dexlib2.immutable.instruction.ImmutableInstruction20bc of(org.jf.dexlib2.iface.instruction.formats.Instruction20bc) -> a
    69:69:int getVerificationError() -> e
    70:70:org.jf.dexlib2.immutable.reference.ImmutableReference getReference() -> d
    71:71:int getReferenceType() -> g
    73:73:org.jf.dexlib2.Format getFormat() -> c
    45:45:org.jf.dexlib2.iface.reference.Reference getReference() -> f
    46:46:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.instruction.ImmutableInstruction20t -> org.c.b.f.b.k:
    org.jf.dexlib2.Format FORMAT -> a
    int codeOffset -> b
    48:50:void <init>(org.jf.dexlib2.Opcode,int) -> <init>
    53:58:org.jf.dexlib2.immutable.instruction.ImmutableInstruction20t of(org.jf.dexlib2.iface.instruction.formats.Instruction20t) -> a
    61:61:int getCodeOffset() -> e
    62:62:org.jf.dexlib2.Format getFormat() -> c
    42:42:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.instruction.ImmutableInstruction21c -> org.c.b.f.b.l:
    org.jf.dexlib2.Format FORMAT -> a
    int registerA -> b
    org.jf.dexlib2.immutable.reference.ImmutableReference reference -> c
    53:56:void <init>(org.jf.dexlib2.Opcode,int,org.jf.dexlib2.iface.reference.Reference) -> <init>
    59:65:org.jf.dexlib2.immutable.instruction.ImmutableInstruction21c of(org.jf.dexlib2.iface.instruction.formats.Instruction21c) -> a
    68:68:int getRegisterA() -> d_
    69:69:org.jf.dexlib2.immutable.reference.ImmutableReference getReference() -> d
    70:70:int getReferenceType() -> g
    72:72:org.jf.dexlib2.Format getFormat() -> c
    44:44:org.jf.dexlib2.iface.reference.Reference getReference() -> f
    45:45:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.instruction.ImmutableInstruction21ih -> org.c.b.f.b.m:
    org.jf.dexlib2.Format FORMAT -> a
    int registerA -> b
    int literal -> c
    50:53:void <init>(org.jf.dexlib2.Opcode,int,int) -> <init>
    56:62:org.jf.dexlib2.immutable.instruction.ImmutableInstruction21ih of(org.jf.dexlib2.iface.instruction.formats.Instruction21ih) -> a
    65:65:int getRegisterA() -> d_
    66:66:int getNarrowLiteral() -> f
    67:67:long getWideLiteral() -> g
    68:68:short getHatLiteral() -> h
    70:70:org.jf.dexlib2.Format getFormat() -> c
    42:42:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.instruction.ImmutableInstruction21lh -> org.c.b.f.b.n:
    org.jf.dexlib2.Format FORMAT -> a
    int registerA -> b
    long literal -> c
    50:53:void <init>(org.jf.dexlib2.Opcode,int,long) -> <init>
    56:62:org.jf.dexlib2.immutable.instruction.ImmutableInstruction21lh of(org.jf.dexlib2.iface.instruction.formats.Instruction21lh) -> a
    65:65:int getRegisterA() -> d_
    66:66:long getWideLiteral() -> g
    67:67:short getHatLiteral() -> h
    69:69:org.jf.dexlib2.Format getFormat() -> c
    42:42:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.instruction.ImmutableInstruction21s -> org.c.b.f.b.o:
    org.jf.dexlib2.Format FORMAT -> a
    int registerA -> b
    int literal -> c
    50:53:void <init>(org.jf.dexlib2.Opcode,int,int) -> <init>
    56:62:org.jf.dexlib2.immutable.instruction.ImmutableInstruction21s of(org.jf.dexlib2.iface.instruction.formats.Instruction21s) -> a
    65:65:int getRegisterA() -> d_
    66:66:int getNarrowLiteral() -> f
    67:67:long getWideLiteral() -> g
    69:69:org.jf.dexlib2.Format getFormat() -> c
    42:42:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.instruction.ImmutableInstruction21t -> org.c.b.f.b.p:
    org.jf.dexlib2.Format FORMAT -> a
    int registerA -> b
    int codeOffset -> c
    50:53:void <init>(org.jf.dexlib2.Opcode,int,int) -> <init>
    56:62:org.jf.dexlib2.immutable.instruction.ImmutableInstruction21t of(org.jf.dexlib2.iface.instruction.formats.Instruction21t) -> a
    65:65:int getRegisterA() -> d_
    66:66:int getCodeOffset() -> e
    68:68:org.jf.dexlib2.Format getFormat() -> c
    42:42:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.instruction.ImmutableInstruction22b -> org.c.b.f.b.q:
    org.jf.dexlib2.Format FORMAT -> a
    int registerA -> b
    int registerB -> c
    int literal -> e
    52:56:void <init>(org.jf.dexlib2.Opcode,int,int,int) -> <init>
    59:66:org.jf.dexlib2.immutable.instruction.ImmutableInstruction22b of(org.jf.dexlib2.iface.instruction.formats.Instruction22b) -> a
    69:69:int getRegisterA() -> d_
    70:70:int getRegisterB() -> e_
    71:71:int getNarrowLiteral() -> f
    72:72:long getWideLiteral() -> g
    74:74:org.jf.dexlib2.Format getFormat() -> c
    42:42:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.instruction.ImmutableInstruction22c -> org.c.b.f.b.r:
    org.jf.dexlib2.Format FORMAT -> a
    int registerA -> b
    int registerB -> c
    org.jf.dexlib2.immutable.reference.ImmutableReference reference -> e
    55:59:void <init>(org.jf.dexlib2.Opcode,int,int,org.jf.dexlib2.iface.reference.Reference) -> <init>
    62:69:org.jf.dexlib2.immutable.instruction.ImmutableInstruction22c of(org.jf.dexlib2.iface.instruction.formats.Instruction22c) -> a
    72:72:int getRegisterA() -> d_
    73:73:int getRegisterB() -> e_
    74:74:org.jf.dexlib2.immutable.reference.ImmutableReference getReference() -> d
    75:75:int getReferenceType() -> g
    77:77:org.jf.dexlib2.Format getFormat() -> c
    44:44:org.jf.dexlib2.iface.reference.Reference getReference() -> f
    45:45:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.instruction.ImmutableInstruction22cs -> org.c.b.f.b.s:
    org.jf.dexlib2.Format FORMAT -> a
    int registerA -> b
    int registerB -> c
    int fieldOffset -> e
    52:56:void <init>(org.jf.dexlib2.Opcode,int,int,int) -> <init>
    59:66:org.jf.dexlib2.immutable.instruction.ImmutableInstruction22cs of(org.jf.dexlib2.iface.instruction.formats.Instruction22cs) -> a
    69:69:int getRegisterA() -> d_
    70:70:int getRegisterB() -> e_
    71:71:int getFieldOffset() -> g
    73:73:org.jf.dexlib2.Format getFormat() -> c
    42:42:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.instruction.ImmutableInstruction22s -> org.c.b.f.b.t:
    org.jf.dexlib2.Format FORMAT -> a
    int registerA -> b
    int registerB -> c
    int literal -> e
    52:56:void <init>(org.jf.dexlib2.Opcode,int,int,int) -> <init>
    59:66:org.jf.dexlib2.immutable.instruction.ImmutableInstruction22s of(org.jf.dexlib2.iface.instruction.formats.Instruction22s) -> a
    69:69:int getRegisterA() -> d_
    70:70:int getRegisterB() -> e_
    71:71:int getNarrowLiteral() -> f
    72:72:long getWideLiteral() -> g
    74:74:org.jf.dexlib2.Format getFormat() -> c
    42:42:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.instruction.ImmutableInstruction22t -> org.c.b.f.b.u:
    org.jf.dexlib2.Format FORMAT -> a
    int registerA -> b
    int registerB -> c
    int codeOffset -> e
    52:56:void <init>(org.jf.dexlib2.Opcode,int,int,int) -> <init>
    59:66:org.jf.dexlib2.immutable.instruction.ImmutableInstruction22t of(org.jf.dexlib2.iface.instruction.formats.Instruction22t) -> a
    69:69:int getRegisterA() -> d_
    70:70:int getRegisterB() -> e_
    71:71:int getCodeOffset() -> e
    73:73:org.jf.dexlib2.Format getFormat() -> c
    42:42:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.instruction.ImmutableInstruction22x -> org.c.b.f.b.v:
    org.jf.dexlib2.Format FORMAT -> a
    int registerA -> b
    int registerB -> c
    50:53:void <init>(org.jf.dexlib2.Opcode,int,int) -> <init>
    56:62:org.jf.dexlib2.immutable.instruction.ImmutableInstruction22x of(org.jf.dexlib2.iface.instruction.formats.Instruction22x) -> a
    65:65:int getRegisterA() -> d_
    66:66:int getRegisterB() -> e_
    68:68:org.jf.dexlib2.Format getFormat() -> c
    42:42:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.instruction.ImmutableInstruction23x -> org.c.b.f.b.w:
    org.jf.dexlib2.Format FORMAT -> a
    int registerA -> b
    int registerB -> c
    int registerC -> e
    52:56:void <init>(org.jf.dexlib2.Opcode,int,int,int) -> <init>
    59:66:org.jf.dexlib2.immutable.instruction.ImmutableInstruction23x of(org.jf.dexlib2.iface.instruction.formats.Instruction23x) -> a
    69:69:int getRegisterA() -> d_
    70:70:int getRegisterB() -> e_
    71:71:int getRegisterC() -> g
    73:73:org.jf.dexlib2.Format getFormat() -> c
    42:42:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.instruction.ImmutableInstruction30t -> org.c.b.f.b.x:
    org.jf.dexlib2.Format FORMAT -> a
    int codeOffset -> b
    47:49:void <init>(org.jf.dexlib2.Opcode,int) -> <init>
    52:57:org.jf.dexlib2.immutable.instruction.ImmutableInstruction30t of(org.jf.dexlib2.iface.instruction.formats.Instruction30t) -> a
    60:60:int getCodeOffset() -> e
    61:61:org.jf.dexlib2.Format getFormat() -> c
    41:41:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.instruction.ImmutableInstruction31c -> org.c.b.f.b.y:
    org.jf.dexlib2.Format FORMAT -> a
    int registerA -> b
    org.jf.dexlib2.immutable.reference.ImmutableReference reference -> c
    53:56:void <init>(org.jf.dexlib2.Opcode,int,org.jf.dexlib2.iface.reference.Reference) -> <init>
    59:65:org.jf.dexlib2.immutable.instruction.ImmutableInstruction31c of(org.jf.dexlib2.iface.instruction.formats.Instruction31c) -> a
    68:68:int getRegisterA() -> d_
    69:69:org.jf.dexlib2.immutable.reference.ImmutableReference getReference() -> d
    70:70:int getReferenceType() -> g
    72:72:org.jf.dexlib2.Format getFormat() -> c
    44:44:org.jf.dexlib2.iface.reference.Reference getReference() -> f
    45:45:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.instruction.ImmutableInstruction31i -> org.c.b.f.b.z:
    org.jf.dexlib2.Format FORMAT -> a
    int registerA -> b
    int literal -> c
    50:53:void <init>(org.jf.dexlib2.Opcode,int,int) -> <init>
    56:62:org.jf.dexlib2.immutable.instruction.ImmutableInstruction31i of(org.jf.dexlib2.iface.instruction.formats.Instruction31i) -> a
    65:65:int getRegisterA() -> d_
    66:66:int getNarrowLiteral() -> f
    67:67:long getWideLiteral() -> g
    69:69:org.jf.dexlib2.Format getFormat() -> c
    42:42:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.instruction.ImmutableInstruction31t -> org.c.b.f.b.aa:
    org.jf.dexlib2.Format FORMAT -> a
    int registerA -> b
    int codeOffset -> c
    50:53:void <init>(org.jf.dexlib2.Opcode,int,int) -> <init>
    56:62:org.jf.dexlib2.immutable.instruction.ImmutableInstruction31t of(org.jf.dexlib2.iface.instruction.formats.Instruction31t) -> a
    65:65:int getRegisterA() -> d_
    66:66:int getCodeOffset() -> e
    68:68:org.jf.dexlib2.Format getFormat() -> c
    42:42:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.instruction.ImmutableInstruction32x -> org.c.b.f.b.ab:
    org.jf.dexlib2.Format FORMAT -> a
    int registerA -> b
    int registerB -> c
    50:53:void <init>(org.jf.dexlib2.Opcode,int,int) -> <init>
    56:62:org.jf.dexlib2.immutable.instruction.ImmutableInstruction32x of(org.jf.dexlib2.iface.instruction.formats.Instruction32x) -> a
    65:65:int getRegisterA() -> d_
    66:66:int getRegisterB() -> e_
    68:68:org.jf.dexlib2.Format getFormat() -> c
    42:42:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.instruction.ImmutableInstruction35c -> org.c.b.f.b.ac:
    org.jf.dexlib2.Format FORMAT -> a
    int registerCount -> b
    int registerC -> c
    int registerD -> e
    int registerE -> f
    int registerF -> g
    int registerG -> h
    org.jf.dexlib2.immutable.reference.ImmutableReference reference -> i
    63:71:void <init>(org.jf.dexlib2.Opcode,int,int,int,int,int,int,org.jf.dexlib2.iface.reference.Reference) -> <init>
    74:85:org.jf.dexlib2.immutable.instruction.ImmutableInstruction35c of(org.jf.dexlib2.iface.instruction.formats.Instruction35c) -> a
    88:88:int getRegisterCount() -> e
    89:89:int getRegisterC() -> h
    90:90:int getRegisterD() -> i
    91:91:int getRegisterE() -> j
    92:92:int getRegisterF() -> k
    93:93:int getRegisterG() -> l
    94:94:org.jf.dexlib2.immutable.reference.ImmutableReference getReference() -> d
    95:95:int getReferenceType() -> g
    97:97:org.jf.dexlib2.Format getFormat() -> c
    44:44:org.jf.dexlib2.iface.reference.Reference getReference() -> f
    45:45:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.instruction.ImmutableInstruction35mi -> org.c.b.f.b.ad:
    org.jf.dexlib2.Format FORMAT -> a
    int registerCount -> b
    int registerC -> c
    int registerD -> e
    int registerE -> f
    int registerF -> g
    int registerG -> h
    int inlineIndex -> i
    60:68:void <init>(org.jf.dexlib2.Opcode,int,int,int,int,int,int,int) -> <init>
    71:82:org.jf.dexlib2.immutable.instruction.ImmutableInstruction35mi of(org.jf.dexlib2.iface.instruction.formats.Instruction35mi) -> a
    85:85:int getRegisterCount() -> e
    86:86:int getRegisterC() -> h
    87:87:int getRegisterD() -> i
    88:88:int getRegisterE() -> j
    89:89:int getRegisterF() -> k
    90:90:int getRegisterG() -> l
    91:91:int getInlineIndex() -> f
    93:93:org.jf.dexlib2.Format getFormat() -> c
    42:42:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.instruction.ImmutableInstruction35ms -> org.c.b.f.b.ae:
    org.jf.dexlib2.Format FORMAT -> a
    int registerCount -> b
    int registerC -> c
    int registerD -> e
    int registerE -> f
    int registerF -> g
    int registerG -> h
    int vtableIndex -> i
    60:68:void <init>(org.jf.dexlib2.Opcode,int,int,int,int,int,int,int) -> <init>
    71:82:org.jf.dexlib2.immutable.instruction.ImmutableInstruction35ms of(org.jf.dexlib2.iface.instruction.formats.Instruction35ms) -> a
    85:85:int getRegisterCount() -> e
    86:86:int getRegisterC() -> h
    87:87:int getRegisterD() -> i
    88:88:int getRegisterE() -> j
    89:89:int getRegisterF() -> k
    90:90:int getRegisterG() -> l
    91:91:int getVtableIndex() -> f
    93:93:org.jf.dexlib2.Format getFormat() -> c
    42:42:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.instruction.ImmutableInstruction3rc -> org.c.b.f.b.af:
    org.jf.dexlib2.Format FORMAT -> a
    int startRegister -> b
    int registerCount -> c
    org.jf.dexlib2.immutable.reference.ImmutableReference reference -> e
    56:60:void <init>(org.jf.dexlib2.Opcode,int,int,org.jf.dexlib2.iface.reference.Reference) -> <init>
    63:70:org.jf.dexlib2.immutable.instruction.ImmutableInstruction3rc of(org.jf.dexlib2.iface.instruction.formats.Instruction3rc) -> a
    73:73:int getStartRegister() -> h
    74:74:int getRegisterCount() -> e
    75:75:org.jf.dexlib2.immutable.reference.ImmutableReference getReference() -> d
    76:76:int getReferenceType() -> g
    78:78:org.jf.dexlib2.Format getFormat() -> c
    44:44:org.jf.dexlib2.iface.reference.Reference getReference() -> f
    45:45:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.instruction.ImmutableInstruction3rmi -> org.c.b.f.b.ag:
    org.jf.dexlib2.Format FORMAT -> a
    int startRegister -> b
    int registerCount -> c
    int inlineIndex -> e
    52:56:void <init>(org.jf.dexlib2.Opcode,int,int,int) -> <init>
    59:66:org.jf.dexlib2.immutable.instruction.ImmutableInstruction3rmi of(org.jf.dexlib2.iface.instruction.formats.Instruction3rmi) -> a
    69:69:int getStartRegister() -> h
    70:70:int getRegisterCount() -> e
    71:71:int getInlineIndex() -> f
    73:73:org.jf.dexlib2.Format getFormat() -> c
    42:42:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.instruction.ImmutableInstruction3rms -> org.c.b.f.b.ah:
    org.jf.dexlib2.Format FORMAT -> a
    int startRegister -> b
    int registerCount -> c
    int vtableIndex -> e
    52:56:void <init>(org.jf.dexlib2.Opcode,int,int,int) -> <init>
    59:66:org.jf.dexlib2.immutable.instruction.ImmutableInstruction3rms of(org.jf.dexlib2.iface.instruction.formats.Instruction3rms) -> a
    69:69:int getStartRegister() -> h
    70:70:int getRegisterCount() -> e
    71:71:int getVtableIndex() -> f
    73:73:org.jf.dexlib2.Format getFormat() -> c
    42:42:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.instruction.ImmutableInstruction51l -> org.c.b.f.b.ai:
    org.jf.dexlib2.Format FORMAT -> a
    int registerA -> b
    long literal -> c
    50:53:void <init>(org.jf.dexlib2.Opcode,int,long) -> <init>
    56:62:org.jf.dexlib2.immutable.instruction.ImmutableInstruction51l of(org.jf.dexlib2.iface.instruction.formats.Instruction51l) -> a
    65:65:int getRegisterA() -> d_
    66:66:long getWideLiteral() -> g
    68:68:org.jf.dexlib2.Format getFormat() -> c
    42:42:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.instruction.ImmutablePackedSwitchPayload -> org.c.b.f.b.aj:
    org.jf.dexlib2.Opcode OPCODE -> a
    com.google.common.collect.ImmutableList switchElements -> b
    51:54:void <init>(java.util.List) -> <init>
    64:68:org.jf.dexlib2.immutable.instruction.ImmutablePackedSwitchPayload of(org.jf.dexlib2.iface.instruction.formats.PackedSwitchPayload) -> a
    71:71:java.util.List getSwitchElements() -> f
    73:73:int getCodeUnits() -> b
    74:74:org.jf.dexlib2.Format getFormat() -> c
    46:46:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.instruction.ImmutableSparseSwitchPayload -> org.c.b.f.b.ak:
    org.jf.dexlib2.Opcode OPCODE -> a
    com.google.common.collect.ImmutableList switchElements -> b
    51:53:void <init>(java.util.List) -> <init>
    63:67:org.jf.dexlib2.immutable.instruction.ImmutableSparseSwitchPayload of(org.jf.dexlib2.iface.instruction.formats.SparseSwitchPayload) -> a
    70:70:java.util.List getSwitchElements() -> f
    72:72:int getCodeUnits() -> b
    73:73:org.jf.dexlib2.Format getFormat() -> c
    46:46:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.instruction.ImmutableSwitchElement -> org.c.b.f.b.al:
    int key -> a
    int offset -> b
    org.jf.util.ImmutableConverter CONVERTER -> c
    47:50:void <init>(int,int) -> <init>
    54:59:org.jf.dexlib2.immutable.instruction.ImmutableSwitchElement of(org.jf.dexlib2.iface.instruction.SwitchElement) -> a
    62:62:int getKey() -> a
    63:63:int getOffset() -> b
    67:67:com.google.common.collect.ImmutableList immutableListOf(java.util.List) -> a
    70:70:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.instruction.ImmutableSwitchElement$1 -> org.c.b.f.b.am:
    71:71:void <init>() -> <init>
    74:74:boolean isImmutable(org.jf.dexlib2.iface.instruction.SwitchElement) -> a
    80:80:org.jf.dexlib2.immutable.instruction.ImmutableSwitchElement makeImmutable(org.jf.dexlib2.iface.instruction.SwitchElement) -> b
    71:71:java.lang.Object makeImmutable(java.lang.Object) -> a
    71:71:boolean isImmutable(java.lang.Object) -> b
org.jf.dexlib2.immutable.instruction.ImmutableUnknownInstruction -> org.c.b.f.b.an:
    org.jf.dexlib2.Format FORMAT -> a
    int originalOpcode -> b
    44:46:void <init>(int) -> <init>
    49:52:org.jf.dexlib2.immutable.instruction.ImmutableUnknownInstruction of(org.jf.dexlib2.iface.instruction.formats.UnknownInstruction) -> a
    55:55:org.jf.dexlib2.Format getFormat() -> c
    56:56:int getOriginalOpcode() -> f_
    39:39:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.reference.ImmutableFieldReference -> org.c.b.f.c.a:
    java.lang.String definingClass -> a
    java.lang.String name -> b
    java.lang.String type -> c
    46:50:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    54:60:org.jf.dexlib2.immutable.reference.ImmutableFieldReference of(org.jf.dexlib2.iface.reference.FieldReference) -> b
    63:63:java.lang.String getDefiningClass() -> c
    64:64:java.lang.String getName() -> a
    65:65:java.lang.String getType() -> b
org.jf.dexlib2.immutable.reference.ImmutableMethodProtoReference -> org.c.b.f.c.b:
    com.google.common.collect.ImmutableList parameters -> a
    java.lang.String returnType -> b
    49:52:void <init>(java.lang.Iterable,java.lang.String) -> <init>
    55:60:org.jf.dexlib2.immutable.reference.ImmutableMethodProtoReference of(org.jf.dexlib2.iface.reference.MethodProtoReference) -> b
    65:65:java.util.List getParameterTypes() -> a
    70:70:java.lang.String getReturnType() -> b
org.jf.dexlib2.immutable.reference.ImmutableMethodReference -> org.c.b.f.c.c:
    java.lang.String definingClass -> a
    java.lang.String name -> b
    com.google.common.collect.ImmutableList parameters -> c
    java.lang.String returnType -> d
    52:57:void <init>(java.lang.String,java.lang.String,java.lang.Iterable,java.lang.String) -> <init>
    71:78:org.jf.dexlib2.immutable.reference.ImmutableMethodReference of(org.jf.dexlib2.iface.reference.MethodReference) -> b
    81:81:java.lang.String getDefiningClass() -> d
    82:82:java.lang.String getName() -> a
    83:83:com.google.common.collect.ImmutableList getParameterTypes() -> e
    84:84:java.lang.String getReturnType() -> c
    43:43:java.util.List getParameterTypes() -> b
org.jf.dexlib2.immutable.reference.ImmutableReference -> org.c.b.f.c.d:
org.jf.dexlib2.immutable.reference.ImmutableReferenceFactory -> org.c.b.f.c.e:
    63:75:org.jf.dexlib2.immutable.reference.ImmutableReference of(int,org.jf.dexlib2.iface.reference.Reference) -> a
org.jf.dexlib2.immutable.reference.ImmutableStringReference -> org.c.b.f.c.f:
    java.lang.String str -> a
    42:44:void <init>(java.lang.String) -> <init>
    48:51:org.jf.dexlib2.immutable.reference.ImmutableStringReference of(org.jf.dexlib2.iface.reference.StringReference) -> a
    54:54:java.lang.String getString() -> a
org.jf.dexlib2.immutable.reference.ImmutableTypeReference -> org.c.b.f.c.g:
    java.lang.String type -> a
    org.jf.util.ImmutableConverter CONVERTER -> b
    46:48:void <init>(java.lang.String) -> <init>
    52:55:org.jf.dexlib2.immutable.reference.ImmutableTypeReference of(org.jf.dexlib2.iface.reference.TypeReference) -> a
    58:58:java.lang.String getType() -> a
    65:65:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.reference.ImmutableTypeReference$1 -> org.c.b.f.c.h:
    66:66:void <init>() -> <init>
    69:69:boolean isImmutable(org.jf.dexlib2.iface.reference.TypeReference) -> a
    75:75:org.jf.dexlib2.immutable.reference.ImmutableTypeReference makeImmutable(org.jf.dexlib2.iface.reference.TypeReference) -> b
    66:66:java.lang.Object makeImmutable(java.lang.Object) -> a
    66:66:boolean isImmutable(java.lang.Object) -> b
org.jf.dexlib2.immutable.util.CharSequenceConverter -> org.c.b.f.d.a:
    org.jf.util.ImmutableConverter CONVERTER -> a
    46:46:com.google.common.collect.ImmutableList immutableStringList(java.lang.Iterable) -> a
    49:49:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.util.CharSequenceConverter$1 -> org.c.b.f.d.b:
    50:50:void <init>() -> <init>
    53:53:boolean isImmutable(java.lang.CharSequence) -> a
    59:59:java.lang.String makeImmutable(java.lang.CharSequence) -> b
    50:50:java.lang.Object makeImmutable(java.lang.Object) -> a
    50:50:boolean isImmutable(java.lang.Object) -> b
org.jf.dexlib2.immutable.util.ParamUtil -> org.c.b.f.d.c:
    41:60:int findTypeEnd(java.lang.String,int) -> b
    66:66:java.lang.Iterable parseParamString(java.lang.String) -> a
    39:39:int access$000(java.lang.String,int) -> a
org.jf.dexlib2.immutable.util.ParamUtil$1 -> org.c.b.f.d.d:
    java.lang.String val$params -> a
    66:66:void <init>(java.lang.String) -> <init>
    68:68:java.util.Iterator iterator() -> iterator
org.jf.dexlib2.immutable.util.ParamUtil$1$1 -> org.c.b.f.d.e:
    int index -> b
    org.jf.dexlib2.immutable.util.ParamUtil$1 this$0 -> a
    68:70:void <init>(org.jf.dexlib2.immutable.util.ParamUtil$1) -> <init>
    73:73:boolean hasNext() -> hasNext
    77:80:org.jf.dexlib2.immutable.ImmutableMethodParameter next() -> a
    84:84:void remove() -> remove
    68:68:java.lang.Object next() -> next
org.jf.dexlib2.immutable.value.ImmutableAnnotationEncodedValue -> org.c.b.f.e.a:
    java.lang.String type -> a
    com.google.common.collect.ImmutableSet elements -> b
    50:53:void <init>(java.lang.String,java.util.Collection) -> <init>
    62:67:org.jf.dexlib2.immutable.value.ImmutableAnnotationEncodedValue of(org.jf.dexlib2.iface.value.AnnotationEncodedValue) -> a
    70:70:java.lang.String getType() -> b
    71:71:com.google.common.collect.ImmutableSet getElements() -> d
    45:45:java.util.Set getElements() -> c
org.jf.dexlib2.immutable.value.ImmutableArrayEncodedValue -> org.c.b.f.e.b:
    com.google.common.collect.ImmutableList value -> a
    45:47:void <init>(java.util.Collection) -> <init>
    54:57:org.jf.dexlib2.immutable.value.ImmutableArrayEncodedValue of(org.jf.dexlib2.iface.value.ArrayEncodedValue) -> a
    60:60:com.google.common.collect.ImmutableList getValue() -> c
    42:42:java.util.List getValue() -> b
org.jf.dexlib2.immutable.value.ImmutableBooleanEncodedValue -> org.c.b.f.e.c:
    org.jf.dexlib2.immutable.value.ImmutableBooleanEncodedValue TRUE_VALUE -> a
    org.jf.dexlib2.immutable.value.ImmutableBooleanEncodedValue FALSE_VALUE -> b
    boolean value -> c
    43:45:void <init>(boolean) -> <init>
    48:48:org.jf.dexlib2.immutable.value.ImmutableBooleanEncodedValue forBoolean(boolean) -> a
    52:52:org.jf.dexlib2.immutable.value.ImmutableBooleanEncodedValue of(org.jf.dexlib2.iface.value.BooleanEncodedValue) -> a
    55:55:boolean getValue() -> b
    38:39:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.value.ImmutableByteEncodedValue -> org.c.b.f.e.d:
    byte value -> a
    40:42:void <init>(byte) -> <init>
    45:48:org.jf.dexlib2.immutable.value.ImmutableByteEncodedValue of(org.jf.dexlib2.iface.value.ByteEncodedValue) -> a
    51:51:byte getValue() -> b
org.jf.dexlib2.immutable.value.ImmutableCharEncodedValue -> org.c.b.f.e.e:
    char value -> a
    40:42:void <init>(char) -> <init>
    45:48:org.jf.dexlib2.immutable.value.ImmutableCharEncodedValue of(org.jf.dexlib2.iface.value.CharEncodedValue) -> a
    51:51:char getValue() -> b
org.jf.dexlib2.immutable.value.ImmutableDoubleEncodedValue -> org.c.b.f.e.f:
    double value -> a
    40:42:void <init>(double) -> <init>
    45:48:org.jf.dexlib2.immutable.value.ImmutableDoubleEncodedValue of(org.jf.dexlib2.iface.value.DoubleEncodedValue) -> a
    51:51:double getValue() -> b
org.jf.dexlib2.immutable.value.ImmutableEncodedValue -> org.c.b.f.e.g:
org.jf.dexlib2.immutable.value.ImmutableEncodedValueFactory -> org.c.b.f.e.h:
    org.jf.util.ImmutableConverter CONVERTER -> a
    47:82:org.jf.dexlib2.immutable.value.ImmutableEncodedValue of(org.jf.dexlib2.iface.value.EncodedValue) -> a
    124:124:com.google.common.collect.ImmutableList immutableListOf(java.lang.Iterable) -> a
    127:127:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.value.ImmutableEncodedValueFactory$1 -> org.c.b.f.e.i:
    128:128:void <init>() -> <init>
    131:131:boolean isImmutable(org.jf.dexlib2.iface.value.EncodedValue) -> a
    137:137:org.jf.dexlib2.immutable.value.ImmutableEncodedValue makeImmutable(org.jf.dexlib2.iface.value.EncodedValue) -> b
    128:128:java.lang.Object makeImmutable(java.lang.Object) -> a
    128:128:boolean isImmutable(java.lang.Object) -> b
org.jf.dexlib2.immutable.value.ImmutableEnumEncodedValue -> org.c.b.f.e.j:
    org.jf.dexlib2.iface.reference.FieldReference value -> a
    43:45:void <init>(org.jf.dexlib2.iface.reference.FieldReference) -> <init>
    48:51:org.jf.dexlib2.immutable.value.ImmutableEnumEncodedValue of(org.jf.dexlib2.iface.value.EnumEncodedValue) -> a
    54:54:org.jf.dexlib2.iface.reference.FieldReference getValue() -> b
org.jf.dexlib2.immutable.value.ImmutableFieldEncodedValue -> org.c.b.f.e.k:
    org.jf.dexlib2.iface.reference.FieldReference value -> a
    43:45:void <init>(org.jf.dexlib2.iface.reference.FieldReference) -> <init>
    48:51:org.jf.dexlib2.immutable.value.ImmutableFieldEncodedValue of(org.jf.dexlib2.iface.value.FieldEncodedValue) -> a
    54:54:org.jf.dexlib2.iface.reference.FieldReference getValue() -> b
org.jf.dexlib2.immutable.value.ImmutableFloatEncodedValue -> org.c.b.f.e.l:
    float value -> a
    40:42:void <init>(float) -> <init>
    45:48:org.jf.dexlib2.immutable.value.ImmutableFloatEncodedValue of(org.jf.dexlib2.iface.value.FloatEncodedValue) -> a
    51:51:float getValue() -> b
org.jf.dexlib2.immutable.value.ImmutableIntEncodedValue -> org.c.b.f.e.m:
    int value -> a
    40:42:void <init>(int) -> <init>
    45:48:org.jf.dexlib2.immutable.value.ImmutableIntEncodedValue of(org.jf.dexlib2.iface.value.IntEncodedValue) -> a
    51:51:int getValue() -> b
org.jf.dexlib2.immutable.value.ImmutableLongEncodedValue -> org.c.b.f.e.n:
    long value -> a
    40:42:void <init>(long) -> <init>
    45:48:org.jf.dexlib2.immutable.value.ImmutableLongEncodedValue of(org.jf.dexlib2.iface.value.LongEncodedValue) -> a
    51:51:long getValue() -> b
org.jf.dexlib2.immutable.value.ImmutableMethodEncodedValue -> org.c.b.f.e.o:
    org.jf.dexlib2.iface.reference.MethodReference value -> a
    43:45:void <init>(org.jf.dexlib2.iface.reference.MethodReference) -> <init>
    48:51:org.jf.dexlib2.immutable.value.ImmutableMethodEncodedValue of(org.jf.dexlib2.iface.value.MethodEncodedValue) -> a
    54:54:org.jf.dexlib2.iface.reference.MethodReference getValue() -> b
org.jf.dexlib2.immutable.value.ImmutableNullEncodedValue -> org.c.b.f.e.p:
    org.jf.dexlib2.immutable.value.ImmutableNullEncodedValue INSTANCE -> a
    39:39:void <init>() -> <init>
    37:37:void <clinit>() -> <clinit>
org.jf.dexlib2.immutable.value.ImmutableShortEncodedValue -> org.c.b.f.e.q:
    short value -> a
    40:42:void <init>(short) -> <init>
    45:48:org.jf.dexlib2.immutable.value.ImmutableShortEncodedValue of(org.jf.dexlib2.iface.value.ShortEncodedValue) -> a
    51:51:short getValue() -> b
org.jf.dexlib2.immutable.value.ImmutableStringEncodedValue -> org.c.b.f.e.r:
    java.lang.String value -> a
    42:44:void <init>(java.lang.String) -> <init>
    47:50:org.jf.dexlib2.immutable.value.ImmutableStringEncodedValue of(org.jf.dexlib2.iface.value.StringEncodedValue) -> a
    53:53:java.lang.String getValue() -> b
org.jf.dexlib2.immutable.value.ImmutableTypeEncodedValue -> org.c.b.f.e.s:
    java.lang.String value -> a
    42:44:void <init>(java.lang.String) -> <init>
    47:50:org.jf.dexlib2.immutable.value.ImmutableTypeEncodedValue of(org.jf.dexlib2.iface.value.TypeEncodedValue) -> a
    53:53:java.lang.String getValue() -> b
org.jf.dexlib2.util.DexUtil -> org.c.b.g.a:
    58:72:void verifyDexHeader(java.io.InputStream) -> a
    84:105:void verifyDexHeader(byte[],int) -> a
org.jf.dexlib2.util.DexUtil$InvalidFile -> org.c.b.g.b:
    157:158:void <init>() -> <init>
    161:162:void <init>(java.lang.String) -> <init>
org.jf.dexlib2.util.DexUtil$UnsupportedFile -> org.c.b.g.c:
    174:175:void <init>() -> <init>
    178:179:void <init>(java.lang.String) -> <init>
org.jf.dexlib2.util.EncodedValueUtils -> org.c.b.g.d:
    39:59:boolean isDefaultValue(org.jf.dexlib2.iface.value.EncodedValue) -> a
org.jf.dexlib2.util.FieldUtil -> org.c.b.g.e:
    com.google.common.base.Predicate FIELD_IS_STATIC -> a
    com.google.common.base.Predicate FIELD_IS_INSTANCE -> b
    55:55:boolean isStatic(org.jf.dexlib2.iface.Field) -> a
    42:48:void <clinit>() -> <clinit>
org.jf.dexlib2.util.FieldUtil$1 -> org.c.b.g.f:
    42:42:void <init>() -> <init>
    44:44:boolean apply(org.jf.dexlib2.iface.Field) -> a
    42:42:boolean apply(java.lang.Object) -> a
org.jf.dexlib2.util.FieldUtil$2 -> org.c.b.g.g:
    48:48:void <init>() -> <init>
    50:50:boolean apply(org.jf.dexlib2.iface.Field) -> a
    48:48:boolean apply(java.lang.Object) -> a
org.jf.dexlib2.util.InstructionOffsetMap -> org.c.b.g.h:
    int[] instructionCodeOffsets -> a
    44:52:void <init>(java.util.List) -> <init>
    55:55:int getInstructionIndexAtCodeOffset(int) -> a
    59:70:int getInstructionIndexAtCodeOffset(int,boolean) -> a
    74:77:int getInstructionCodeOffset(int) -> b
org.jf.dexlib2.util.InstructionOffsetMap$InvalidInstructionIndex -> org.c.b.g.i:
    int instructionIndex -> a
    97:99:void <init>(int) -> <init>
org.jf.dexlib2.util.InstructionOffsetMap$InvalidInstructionOffset -> org.c.b.g.j:
    int instructionOffset -> a
    84:86:void <init>(int) -> <init>
org.jf.dexlib2.util.InstructionUtil -> org.c.b.g.k:
    38:38:boolean isInvokeStatic(org.jf.dexlib2.Opcode) -> a
org.jf.dexlib2.util.MethodUtil -> org.c.b.g.l:
    int directMask -> c
    com.google.common.base.Predicate METHOD_IS_DIRECT -> a
    com.google.common.base.Predicate METHOD_IS_VIRTUAL -> b
    61:61:boolean isDirect(org.jf.dexlib2.iface.Method) -> a
    65:65:boolean isStatic(org.jf.dexlib2.iface.Method) -> b
    69:69:boolean isConstructor(org.jf.dexlib2.iface.reference.MethodReference) -> a
    73:75:boolean isPackagePrivate(org.jf.dexlib2.iface.Method) -> c
    79:79:int getParameterRegisterCount(org.jf.dexlib2.iface.Method) -> d
    83:83:int getParameterRegisterCount(org.jf.dexlib2.iface.reference.MethodReference,boolean) -> a
    88:100:int getParameterRegisterCount(java.util.Collection,boolean) -> a
    104:107:char getShortyType(java.lang.CharSequence) -> a
    111:116:java.lang.String getShorty(java.util.Collection,java.lang.String) -> a
    120:122:boolean methodSignaturesMatch(org.jf.dexlib2.iface.reference.MethodReference,org.jf.dexlib2.iface.reference.MethodReference) -> a
    45:54:void <clinit>() -> <clinit>
org.jf.dexlib2.util.MethodUtil$1 -> org.c.b.g.m:
    48:48:void <init>() -> <init>
    50:50:boolean apply(org.jf.dexlib2.iface.Method) -> a
    48:48:boolean apply(java.lang.Object) -> a
org.jf.dexlib2.util.MethodUtil$2 -> org.c.b.g.n:
    54:54:void <init>() -> <init>
    56:56:boolean apply(org.jf.dexlib2.iface.Method) -> a
    54:54:boolean apply(java.lang.Object) -> a
org.jf.dexlib2.util.Preconditions -> org.c.b.g.o:
    42:46:void checkFormat(org.jf.dexlib2.Opcode,org.jf.dexlib2.Format) -> a
    49:53:int checkNibbleRegister(int) -> a
    57:61:int checkByteRegister(int) -> b
    65:69:int checkShortRegister(int) -> c
    73:77:int checkNibbleLiteral(int) -> d
    81:85:int checkByteLiteral(int) -> e
    89:93:int checkShortLiteral(int) -> f
    97:101:int checkIntegerHatLiteral(int) -> g
    105:109:long checkLongHatLiteral(long) -> a
    113:117:int checkByteCodeOffset(int) -> h
    121:125:int checkShortCodeOffset(int) -> i
    129:133:int check35cAnd45ccRegisterCount(int) -> j
    137:141:int checkRegisterRangeCount(int) -> k
    145:155:void checkValueArg(int,int) -> a
    158:163:int checkFieldOffset(int) -> l
    167:171:int checkVtableIndex(int) -> m
    175:179:int checkInlineIndex(int) -> n
    183:188:int checkVerificationError(int) -> o
org.jf.dexlib2.util.ReferenceUtil -> org.c.b.g.p:
    44:44:java.lang.String getMethodDescriptor(org.jf.dexlib2.iface.reference.MethodReference) -> a
    48:60:java.lang.String getMethodDescriptor(org.jf.dexlib2.iface.reference.MethodReference,boolean) -> a
    64:71:java.lang.String getMethodProtoDescriptor(org.jf.dexlib2.iface.reference.MethodProtoReference) -> a
    75:76:void writeMethodDescriptor(java.io.Writer,org.jf.dexlib2.iface.reference.MethodReference) -> a
    80:91:void writeMethodDescriptor(java.io.Writer,org.jf.dexlib2.iface.reference.MethodReference,boolean) -> a
    94:94:java.lang.String getFieldDescriptor(org.jf.dexlib2.iface.reference.FieldReference) -> a
    98:106:java.lang.String getFieldDescriptor(org.jf.dexlib2.iface.reference.FieldReference,boolean) -> a
    110:114:java.lang.String getShortFieldDescriptor(org.jf.dexlib2.iface.reference.FieldReference) -> b
    118:119:void writeFieldDescriptor(java.io.Writer,org.jf.dexlib2.iface.reference.FieldReference) -> a
    123:130:void writeFieldDescriptor(java.io.Writer,org.jf.dexlib2.iface.reference.FieldReference,boolean) -> a
    134:134:java.lang.String getReferenceString(org.jf.dexlib2.iface.reference.Reference) -> a
    139:159:java.lang.String getReferenceString(org.jf.dexlib2.iface.reference.Reference,java.lang.String) -> a
org.jf.dexlib2.util.SyntheticAccessorFSM -> org.c.b.g.q:
    byte[] _SyntheticAccessorFSM_actions -> a
    short[] _SyntheticAccessorFSM_key_offsets -> b
    short[] _SyntheticAccessorFSM_trans_keys -> c
    byte[] _SyntheticAccessorFSM_single_lengths -> d
    byte[] _SyntheticAccessorFSM_range_lengths -> e
    short[] _SyntheticAccessorFSM_index_offsets -> f
    byte[] _SyntheticAccessorFSM_indicies -> g
    byte[] _SyntheticAccessorFSM_trans_targs -> h
    byte[] _SyntheticAccessorFSM_trans_actions -> i
    org.jf.dexlib2.Opcodes opcodes -> j
    51:51:byte[] init__SyntheticAccessorFSM_actions_0() -> a
    66:66:short[] init__SyntheticAccessorFSM_key_offsets_0() -> b
    77:77:short[] init__SyntheticAccessorFSM_trans_keys_0() -> c
    103:103:byte[] init__SyntheticAccessorFSM_single_lengths_0() -> d
    114:114:byte[] init__SyntheticAccessorFSM_range_lengths_0() -> e
    125:125:short[] init__SyntheticAccessorFSM_index_offsets_0() -> f
    136:136:byte[] init__SyntheticAccessorFSM_indicies_0() -> g
    161:161:byte[] init__SyntheticAccessorFSM_trans_targs_0() -> h
    174:174:byte[] init__SyntheticAccessorFSM_trans_actions_0() -> i
    223:510:int test(java.util.List) -> a
    515:568:int getIncrementType(int,int,long,int,int) -> a
    61:182:void <clinit>() -> <clinit>
org.jf.dexlib2.util.SyntheticAccessorResolver -> org.c.b.g.r:
    org.jf.dexlib2.util.SyntheticAccessorFSM syntheticAccessorFSM -> a
    java.util.Map classDefMap -> b
    java.util.Map resolvedAccessors -> c
    88:88:boolean looksLikeSyntheticAccessor(java.lang.String) -> a
    93:139:org.jf.dexlib2.util.SyntheticAccessorResolver$AccessedMember getAccessedMember(org.jf.dexlib2.iface.reference.MethodReference) -> a
    154:156:boolean methodReferenceEquals(org.jf.dexlib2.iface.reference.MethodReference,org.jf.dexlib2.iface.reference.MethodReference) -> a
org.jf.dexlib2.util.SyntheticAccessorResolver$AccessedMember -> org.c.b.g.s:
    int accessedMemberType -> a
    org.jf.dexlib2.iface.reference.Reference accessedMember -> b
    146:149:void <init>(int,org.jf.dexlib2.iface.reference.Reference) -> <init>
org.jf.dexlib2.util.TypeUtils -> org.c.b.g.t:
    42:43:boolean isWideType(java.lang.String) -> a
    47:47:boolean isWideType(org.jf.dexlib2.iface.reference.TypeReference) -> a
    51:51:boolean isPrimitiveType(java.lang.String) -> b
    56:60:java.lang.String getPackage(java.lang.String) -> c
    64:70:boolean canAccessClass(java.lang.String,org.jf.dexlib2.iface.ClassDef) -> a
org.jf.dexlib2.writer.AnnotationSection -> org.c.b.h.a:
    int getVisibility(java.lang.Object) -> a
    java.lang.Object getType(java.lang.Object) -> b
    java.util.Collection getElements(java.lang.Object) -> c
    java.lang.Object getElementName(java.lang.Object) -> d
    java.lang.Object getElementValue(java.lang.Object) -> e
org.jf.dexlib2.writer.AnnotationSetSection -> org.c.b.h.b:
    java.util.Collection getAnnotations(java.lang.Object) -> a
org.jf.dexlib2.writer.ClassSection -> org.c.b.h.c:
    java.util.Collection getSortedClasses() -> a
    java.util.Map$Entry getClassEntryByType(java.lang.CharSequence) -> a
    java.lang.CharSequence getType(java.lang.Object) -> a
    int getAccessFlags(java.lang.Object) -> b
    java.lang.CharSequence getSuperclass(java.lang.Object) -> c
    java.lang.Object getInterfaces(java.lang.Object) -> d
    java.lang.CharSequence getSourceFile(java.lang.Object) -> e
    java.util.Collection getStaticInitializers(java.lang.Object) -> f
    java.util.Collection getSortedStaticFields(java.lang.Object) -> g
    java.util.Collection getSortedInstanceFields(java.lang.Object) -> h
    java.util.Collection getSortedFields(java.lang.Object) -> i
    java.util.Collection getSortedDirectMethods(java.lang.Object) -> j
    java.util.Collection getSortedVirtualMethods(java.lang.Object) -> k
    java.util.Collection getSortedMethods(java.lang.Object) -> l
    int getFieldAccessFlags(java.lang.Object) -> m
    int getMethodAccessFlags(java.lang.Object) -> n
    java.lang.Object getClassAnnotations(java.lang.Object) -> o
    java.lang.Object getFieldAnnotations(java.lang.Object) -> p
    java.lang.Object getMethodAnnotations(java.lang.Object) -> q
    java.util.List getParameterAnnotations(java.lang.Object) -> r
    java.lang.Iterable getDebugItems(java.lang.Object) -> s
    java.lang.Iterable getParameterNames(java.lang.Object) -> t
    int getRegisterCount(java.lang.Object) -> u
    java.lang.Iterable getInstructions(java.lang.Object) -> v
    java.util.List getTryBlocks(java.lang.Object) -> w
    java.lang.CharSequence getExceptionType(org.jf.dexlib2.iface.ExceptionHandler) -> a
    org.jf.dexlib2.builder.MutableMethodImplementation makeMutableMethodImplementation(java.lang.Object) -> x
    void setEncodedArrayOffset(java.lang.Object,int) -> a
    int getEncodedArrayOffset(java.lang.Object) -> y
    void setAnnotationDirectoryOffset(java.lang.Object,int) -> b
    int getAnnotationDirectoryOffset(java.lang.Object) -> z
    void setAnnotationSetRefListOffset(java.lang.Object,int) -> c
    int getAnnotationSetRefListOffset(java.lang.Object) -> A
    void setCodeItemOffset(java.lang.Object,int) -> d
    int getCodeItemOffset(java.lang.Object) -> B
    void writeDebugItem(org.jf.dexlib2.writer.DebugWriter,org.jf.dexlib2.iface.debug.DebugItem) -> a
org.jf.dexlib2.writer.DebugWriter -> org.c.b.h.d:
    org.jf.dexlib2.writer.StringSection stringSection -> a
    org.jf.dexlib2.writer.TypeSection typeSection -> b
    org.jf.dexlib2.writer.DexDataWriter writer -> c
    int currentAddress -> d
    int currentLine -> e
    50:54:void <init>(org.jf.dexlib2.writer.StringSection,org.jf.dexlib2.writer.TypeSection,org.jf.dexlib2.writer.DexDataWriter) -> <init>
    57:59:void reset(int) -> a
    65:82:void writeStartLocal(int,int,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence) -> a
    85:88:void writeEndLocal(int,int) -> a
    91:94:void writeRestartLocal(int,int) -> b
    97:99:void writePrologueEnd(int) -> b
    102:104:void writeEpilogueBegin(int) -> c
    107:125:void writeLineNumber(int,int) -> c
    128:131:void writeSetSourceFile(int,java.lang.CharSequence) -> a
    134:143:void writeAdvancePC(int) -> d
    146:152:void writeAdvanceLine(int) -> e
    159:162:void writeSpecialOpcode(int,int) -> d
org.jf.dexlib2.writer.DexDataWriter -> org.c.b.h.e:
    int filePosition -> a
    byte[] tempBuf -> b
    byte[] zeroBuf -> c
    64:65:void <init>(java.io.OutputStream,int) -> <init>
    52:71:void <init>(java.io.OutputStream,int,int) -> <init>
    75:77:void write(int) -> write
    81:82:void write(byte[]) -> write
    86:88:void write(byte[],int,int) -> write
    91:93:void writeLong(long) -> a
    96:100:void writeInt(java.io.OutputStream,int) -> a
    103:104:void writeInt(int) -> a
    107:112:void writeShort(int) -> b
    115:120:void writeUshort(int) -> c
    123:127:void writeUbyte(int) -> d
    130:135:void writeUleb128(java.io.OutputStream,int) -> b
    138:139:void writeUleb128(int) -> e
    142:155:void writeSleb128(java.io.OutputStream,int) -> c
    158:159:void writeSleb128(int) -> f
    162:163:void writeEncodedValueHeader(int,int) -> a
    166:181:void writeEncodedInt(int,int) -> b
    184:199:void writeEncodedLong(int,long) -> a
    202:209:void writeEncodedUint(int,int) -> c
    212:213:void writeEncodedFloat(int,float) -> a
    216:226:void writeRightZeroExtendedInt(int,int) -> d
    229:230:void writeEncodedDouble(int,double) -> a
    233:243:void writeRightZeroExtendedLong(int,long) -> b
    246:270:void writeString(java.lang.String) -> a
    273:277:void align() -> a
    280:280:int getPosition() -> b
org.jf.dexlib2.writer.DexWriter -> org.c.b.h.f:
    org.jf.dexlib2.Opcodes opcodes -> a
    int stringIndexSectionOffset -> b
    int typeSectionOffset -> c
    int protoSectionOffset -> d
    int fieldSectionOffset -> e
    int methodSectionOffset -> f
    int classIndexSectionOffset -> g
    int stringDataSectionOffset -> h
    int classDataSectionOffset -> i
    int typeListSectionOffset -> j
    int encodedArraySectionOffset -> k
    int annotationSectionOffset -> l
    int annotationSetSectionOffset -> m
    int annotationSetRefSectionOffset -> n
    int annotationDirectorySectionOffset -> o
    int debugSectionOffset -> p
    int codeSectionOffset -> q
    int mapSectionOffset -> r
    int numEncodedArrayItems -> s
    int numAnnotationSetRefItems -> t
    int numAnnotationDirectoryItems -> u
    int numDebugInfoItems -> v
    int numCodeItemItems -> w
    int numClassDataItems -> x
    org.jf.dexlib2.writer.StringSection stringSection -> y
    org.jf.dexlib2.writer.TypeSection typeSection -> z
    org.jf.dexlib2.writer.ProtoSection protoSection -> A
    org.jf.dexlib2.writer.FieldSection fieldSection -> B
    org.jf.dexlib2.writer.MethodSection methodSection -> C
    org.jf.dexlib2.writer.ClassSection classSection -> D
    org.jf.dexlib2.writer.TypeListSection typeListSection -> E
    org.jf.dexlib2.writer.AnnotationSection annotationSection -> F
    org.jf.dexlib2.writer.AnnotationSetSection annotationSetSection -> G
    java.util.Comparator toStringKeyComparator -> H
    108:158:void <init>(org.jf.dexlib2.Opcodes) -> <init>
    org.jf.dexlib2.writer.DexWriter$SectionProvider getSectionProvider() -> a
    void writeEncodedValue(org.jf.dexlib2.writer.DexWriter$InternalEncodedValueWriter,java.lang.Object) -> a
    173:173:java.util.Comparator comparableKeyComparator() -> b
    192:198:int getDataSectionOffset() -> c
    245:246:void writeTo(org.jf.dexlib2.writer.io.DexDataStore) -> a
    251:281:void writeTo(org.jf.dexlib2.writer.io.DexDataStore,org.jf.dexlib2.writer.io.DeferredOutputStreamFactory) -> a
    286:308:void updateSignature(org.jf.dexlib2.writer.io.DexDataStore) -> b
    311:325:void updateChecksum(org.jf.dexlib2.writer.io.DexDataStore) -> c
    328:328:org.jf.dexlib2.writer.DexDataWriter outputAt(org.jf.dexlib2.writer.io.DexDataStore,int) -> a
    332:346:void writeStrings(org.jf.dexlib2.writer.DexDataWriter,org.jf.dexlib2.writer.DexDataWriter) -> a
    349:359:void writeTypes(org.jf.dexlib2.writer.DexDataWriter) -> a
    362:375:void writeProtos(org.jf.dexlib2.writer.DexDataWriter) -> b
    378:391:void writeFields(org.jf.dexlib2.writer.DexDataWriter) -> c
    394:407:void writeMethods(org.jf.dexlib2.writer.DexDataWriter) -> d
    410:420:void writeClasses(org.jf.dexlib2.writer.DexDataWriter,org.jf.dexlib2.writer.DexDataWriter) -> b
    432:502:int writeClass(org.jf.dexlib2.writer.DexDataWriter,org.jf.dexlib2.writer.DexDataWriter,int,java.util.Map$Entry) -> a
    507:514:void writeEncodedFields(org.jf.dexlib2.writer.DexDataWriter,java.util.Collection) -> a
    518:526:void writeEncodedMethods(org.jf.dexlib2.writer.DexDataWriter,java.util.Collection) -> b
    529:541:void writeTypeLists(org.jf.dexlib2.writer.DexDataWriter) -> e
    566:594:void writeEncodedArrays(org.jf.dexlib2.writer.DexDataWriter) -> f
    597:618:void writeAnnotations(org.jf.dexlib2.writer.DexDataWriter) -> g
    621:637:void writeAnnotationSets(org.jf.dexlib2.writer.DexDataWriter) -> h
    640:673:void writeAnnotationSetRefs(org.jf.dexlib2.writer.DexDataWriter) -> i
    676:758:void writeAnnotationDirectories(org.jf.dexlib2.writer.DexDataWriter) -> j
    772:843:void writeDebugAndCodeItems(org.jf.dexlib2.writer.DexDataWriter,org.jf.dexlib2.writer.io.DeferredOutputStream) -> a
    846:860:void fixInstructions(org.jf.dexlib2.builder.MutableMethodImplementation) -> a
    866:921:int writeDebugItem(org.jf.dexlib2.writer.DexDataWriter,org.jf.dexlib2.writer.DebugWriter,java.lang.Iterable,java.lang.Iterable) -> a
    930:1168:int writeCodeItem(org.jf.dexlib2.writer.DexDataWriter,java.io.ByteArrayOutputStream,java.lang.Object,java.util.List,java.lang.Iterable,int) -> a
    1172:1225:int calcNumItems() -> d
    1229:1258:void writeMapItem(org.jf.dexlib2.writer.DexDataWriter) -> k
    1261:1267:void writeMapItem(org.jf.dexlib2.writer.DexDataWriter,int,int,int) -> a
    1271:1302:void writeHeader(org.jf.dexlib2.writer.DexDataWriter,int,int) -> a
    1305:1311:void writeSectionInfo(org.jf.dexlib2.writer.DexDataWriter,int,int) -> b
    1317:1317:boolean shouldCreateEmptyAnnotationSet() -> e
    165:165:void <clinit>() -> <clinit>
org.jf.dexlib2.writer.DexWriter$1 -> org.c.b.h.g:
    166:166:void <init>() -> <init>
    168:168:int compare(java.util.Map$Entry,java.util.Map$Entry) -> a
    166:166:int compare(java.lang.Object,java.lang.Object) -> compare
org.jf.dexlib2.writer.DexWriter$2 -> org.c.b.h.h:
    173:173:void <init>() -> <init>
    175:175:int compare(java.util.Map$Entry,java.util.Map$Entry) -> a
    173:173:int compare(java.lang.Object,java.lang.Object) -> compare
org.jf.dexlib2.writer.DexWriter$3 -> org.c.b.h.i:
    int[] $SwitchMap$org$jf$dexlib2$Format -> a
    977:977:void <clinit>() -> <clinit>
org.jf.dexlib2.writer.DexWriter$CodeItemOffset -> org.c.b.h.j:
    java.lang.Object method -> a
    int codeOffset -> b
    764:767:void <init>(java.lang.Object,int) -> <init>
    760:760:void <init>(java.lang.Object,int,org.jf.dexlib2.writer.DexWriter$1) -> <init>
org.jf.dexlib2.writer.DexWriter$EncodedArrayKey -> org.c.b.h.k:
    java.util.Collection elements -> a
    546:547:void <init>() -> <init>
    550:550:int hashCode() -> hashCode
    554:561:boolean equals(java.lang.Object) -> equals
org.jf.dexlib2.writer.DexWriter$InternalEncodedValueWriter -> org.c.b.h.l:
    org.jf.dexlib2.writer.DexWriter this$0 -> a
    182:184:void <init>(org.jf.dexlib2.writer.DexWriter,org.jf.dexlib2.writer.DexDataWriter) -> <init>
    187:188:void writeEncodedValue(java.lang.Object) -> a
    180:180:void <init>(org.jf.dexlib2.writer.DexWriter,org.jf.dexlib2.writer.DexDataWriter,org.jf.dexlib2.writer.DexWriter$1) -> <init>
org.jf.dexlib2.writer.DexWriter$SectionProvider -> org.c.b.h.m:
    org.jf.dexlib2.writer.DexWriter this$0 -> a
    1320:1320:void <init>(org.jf.dexlib2.writer.DexWriter) -> <init>
    org.jf.dexlib2.writer.StringSection getStringSection() -> a
    org.jf.dexlib2.writer.TypeSection getTypeSection() -> b
    org.jf.dexlib2.writer.ProtoSection getProtoSection() -> c
    org.jf.dexlib2.writer.FieldSection getFieldSection() -> d
    org.jf.dexlib2.writer.MethodSection getMethodSection() -> e
    org.jf.dexlib2.writer.ClassSection getClassSection() -> f
    org.jf.dexlib2.writer.TypeListSection getTypeListSection() -> g
    org.jf.dexlib2.writer.AnnotationSection getAnnotationSection() -> h
    org.jf.dexlib2.writer.AnnotationSetSection getAnnotationSetSection() -> i
org.jf.dexlib2.writer.EncodedValueWriter -> org.c.b.h.n:
    org.jf.dexlib2.writer.DexDataWriter writer -> a
    org.jf.dexlib2.writer.StringSection stringSection -> b
    org.jf.dexlib2.writer.TypeSection typeSection -> c
    org.jf.dexlib2.writer.FieldSection fieldSection -> d
    org.jf.dexlib2.writer.MethodSection methodSection -> e
    org.jf.dexlib2.writer.AnnotationSection annotationSection -> f
    60:67:void <init>(org.jf.dexlib2.writer.DexDataWriter,org.jf.dexlib2.writer.StringSection,org.jf.dexlib2.writer.TypeSection,org.jf.dexlib2.writer.FieldSection,org.jf.dexlib2.writer.MethodSection,org.jf.dexlib2.writer.AnnotationSection) -> <init>
    void writeEncodedValue(java.lang.Object) -> a
    73:84:void writeAnnotation(java.lang.Object,java.util.Collection) -> a
    87:92:void writeArray(java.util.Collection) -> a
    95:96:void writeBoolean(boolean) -> a
    99:100:void writeByte(byte) -> a
    103:104:void writeChar(char) -> a
    107:108:void writeDouble(double) -> a
    111:112:void writeEnum(org.jf.dexlib2.iface.reference.FieldReference) -> a
    115:116:void writeField(org.jf.dexlib2.iface.reference.FieldReference) -> b
    119:120:void writeFloat(float) -> a
    123:124:void writeInt(int) -> a
    127:128:void writeLong(long) -> a
    131:132:void writeMethod(org.jf.dexlib2.iface.reference.MethodReference) -> a
    135:136:void writeNull() -> a
    139:140:void writeShort(int) -> b
    143:144:void writeString(java.lang.Object) -> b
    147:148:void writeType(java.lang.Object) -> c
org.jf.dexlib2.writer.FieldSection -> org.c.b.h.o:
    java.lang.Object getDefiningClass(org.jf.dexlib2.iface.reference.FieldReference) -> a
    java.lang.Object getFieldType(org.jf.dexlib2.iface.reference.FieldReference) -> b
    java.lang.Object getName(org.jf.dexlib2.iface.reference.FieldReference) -> c
    int getFieldIndex(java.lang.Object) -> a
org.jf.dexlib2.writer.IndexSection -> org.c.b.h.p:
    int getItemIndex(java.lang.Object) -> C
    java.util.Collection getItems() -> b
    int getItemCount() -> c
org.jf.dexlib2.writer.InstructionWriter -> org.c.b.h.q:
    org.jf.dexlib2.Opcodes opcodes -> a
    org.jf.dexlib2.writer.DexDataWriter writer -> b
    org.jf.dexlib2.writer.StringSection stringSection -> c
    org.jf.dexlib2.writer.TypeSection typeSection -> d
    org.jf.dexlib2.writer.FieldSection fieldSection -> e
    org.jf.dexlib2.writer.MethodSection methodSection -> f
    org.jf.dexlib2.writer.ProtoSection protoSection -> g
    java.util.Comparator switchElementComparator -> h
    78:78:org.jf.dexlib2.writer.InstructionWriter makeInstructionWriter(org.jf.dexlib2.Opcodes,org.jf.dexlib2.writer.DexDataWriter,org.jf.dexlib2.writer.StringSection,org.jf.dexlib2.writer.TypeSection,org.jf.dexlib2.writer.FieldSection,org.jf.dexlib2.writer.MethodSection,org.jf.dexlib2.writer.ProtoSection) -> a
    88:503:void <init>(org.jf.dexlib2.Opcodes,org.jf.dexlib2.writer.DexDataWriter,org.jf.dexlib2.writer.StringSection,org.jf.dexlib2.writer.TypeSection,org.jf.dexlib2.writer.FieldSection,org.jf.dexlib2.writer.MethodSection,org.jf.dexlib2.writer.ProtoSection) -> <init>
    99:103:short getOpcodeValue(org.jf.dexlib2.Opcode) -> a
    108:113:void write(org.jf.dexlib2.iface.instruction.formats.Instruction10t) -> a
    117:122:void write(org.jf.dexlib2.iface.instruction.formats.Instruction10x) -> a
    126:131:void write(org.jf.dexlib2.iface.instruction.formats.Instruction11n) -> a
    135:140:void write(org.jf.dexlib2.iface.instruction.formats.Instruction11x) -> a
    144:149:void write(org.jf.dexlib2.iface.instruction.formats.Instruction12x) -> a
    153:159:void write(org.jf.dexlib2.iface.instruction.formats.Instruction20bc) -> a
    163:169:void write(org.jf.dexlib2.iface.instruction.formats.Instruction20t) -> a
    173:179:void write(org.jf.dexlib2.iface.instruction.formats.Instruction21c) -> a
    183:189:void write(org.jf.dexlib2.iface.instruction.formats.Instruction21ih) -> a
    193:199:void write(org.jf.dexlib2.iface.instruction.formats.Instruction21lh) -> a
    203:209:void write(org.jf.dexlib2.iface.instruction.formats.Instruction21s) -> a
    213:219:void write(org.jf.dexlib2.iface.instruction.formats.Instruction21t) -> a
    223:230:void write(org.jf.dexlib2.iface.instruction.formats.Instruction22b) -> a
    234:240:void write(org.jf.dexlib2.iface.instruction.formats.Instruction22c) -> a
    244:250:void write(org.jf.dexlib2.iface.instruction.formats.Instruction22cs) -> a
    254:260:void write(org.jf.dexlib2.iface.instruction.formats.Instruction22s) -> a
    264:270:void write(org.jf.dexlib2.iface.instruction.formats.Instruction22t) -> a
    274:280:void write(org.jf.dexlib2.iface.instruction.formats.Instruction22x) -> a
    284:291:void write(org.jf.dexlib2.iface.instruction.formats.Instruction23x) -> a
    295:301:void write(org.jf.dexlib2.iface.instruction.formats.Instruction30t) -> a
    305:311:void write(org.jf.dexlib2.iface.instruction.formats.Instruction31c) -> a
    315:321:void write(org.jf.dexlib2.iface.instruction.formats.Instruction31i) -> a
    325:331:void write(org.jf.dexlib2.iface.instruction.formats.Instruction31t) -> a
    335:342:void write(org.jf.dexlib2.iface.instruction.formats.Instruction32x) -> a
    346:354:void write(org.jf.dexlib2.iface.instruction.formats.Instruction35c) -> a
    358:366:void write(org.jf.dexlib2.iface.instruction.formats.Instruction35mi) -> a
    370:378:void write(org.jf.dexlib2.iface.instruction.formats.Instruction35ms) -> a
    382:389:void write(org.jf.dexlib2.iface.instruction.formats.Instruction3rc) -> a
    393:400:void write(org.jf.dexlib2.iface.instruction.formats.Instruction3rmi) -> a
    405:412:void write(org.jf.dexlib2.iface.instruction.formats.Instruction3rms) -> a
    416:425:void write(org.jf.dexlib2.iface.instruction.formats.Instruction45cc) -> a
    429:437:void write(org.jf.dexlib2.iface.instruction.formats.Instruction4rcc) -> a
    441:447:void write(org.jf.dexlib2.iface.instruction.formats.Instruction51l) -> a
    451:483:void write(org.jf.dexlib2.iface.instruction.formats.ArrayPayload) -> a
    487:501:void write(org.jf.dexlib2.iface.instruction.formats.SparseSwitchPayload) -> a
    511:526:void write(org.jf.dexlib2.iface.instruction.formats.PackedSwitchPayload) -> a
    529:529:int packNibbles(int,int) -> a
    533:534:int getReferenceIndex(org.jf.dexlib2.iface.instruction.ReferenceInstruction) -> a
    538:539:int getReference2Index(org.jf.dexlib2.iface.instruction.DualReferenceInstruction) -> a
    543:555:int getReferenceIndex(int,org.jf.dexlib2.iface.reference.Reference) -> a
org.jf.dexlib2.writer.InstructionWriter$1 -> org.c.b.h.r:
    org.jf.dexlib2.writer.InstructionWriter this$0 -> a
    503:503:void <init>(org.jf.dexlib2.writer.InstructionWriter) -> <init>
    505:505:int compare(org.jf.dexlib2.iface.instruction.SwitchElement,org.jf.dexlib2.iface.instruction.SwitchElement) -> a
    503:503:int compare(java.lang.Object,java.lang.Object) -> compare
org.jf.dexlib2.writer.MethodSection -> org.c.b.h.s:
    org.jf.dexlib2.iface.reference.MethodReference getMethodReference(java.lang.Object) -> a
    java.lang.Object getDefiningClass(org.jf.dexlib2.iface.reference.MethodReference) -> a
    org.jf.dexlib2.iface.reference.MethodProtoReference getPrototype(org.jf.dexlib2.iface.reference.MethodReference) -> b
    org.jf.dexlib2.iface.reference.MethodProtoReference getPrototype(java.lang.Object) -> b
    java.lang.Object getName(org.jf.dexlib2.iface.reference.MethodReference) -> c
    int getMethodIndex(java.lang.Object) -> c
org.jf.dexlib2.writer.NullableIndexSection -> org.c.b.h.t:
    int getNullableItemIndex(java.lang.Object) -> a
org.jf.dexlib2.writer.NullableOffsetSection -> org.c.b.h.u:
    int getNullableItemOffset(java.lang.Object) -> b
org.jf.dexlib2.writer.OffsetSection -> org.c.b.h.v:
    int getItemOffset(java.lang.Object) -> f
    java.util.Collection getItems() -> a
org.jf.dexlib2.writer.ProtoSection -> org.c.b.h.w:
    java.lang.Object getShorty(java.lang.Object) -> a
    java.lang.Object getReturnType(java.lang.Object) -> b
    java.lang.Object getParameters(java.lang.Object) -> c
org.jf.dexlib2.writer.StringSection -> org.c.b.h.x:
    int getItemIndex(org.jf.dexlib2.iface.reference.StringReference) -> a
    boolean hasJumboIndexes() -> a
org.jf.dexlib2.writer.TypeListSection -> org.c.b.h.y:
    int getNullableItemOffset(java.lang.Object) -> b
    java.util.Collection getTypes(java.lang.Object) -> a
org.jf.dexlib2.writer.TypeSection -> org.c.b.h.z:
    java.lang.Object getString(java.lang.Object) -> b
    int getItemIndex(org.jf.dexlib2.iface.reference.TypeReference) -> a
org.jf.dexlib2.writer.builder.BaseBuilderPool -> org.c.b.h.a.a:
    org.jf.dexlib2.writer.builder.DexBuilder dexBuilder -> a
    39:41:void <init>(org.jf.dexlib2.writer.builder.DexBuilder) -> <init>
org.jf.dexlib2.writer.builder.BuilderAnnotation -> org.c.b.h.a.b:
    int visibility -> b
    org.jf.dexlib2.writer.builder.BuilderTypeReference type -> c
    java.util.Set elements -> d
    int offset -> e
    44:51:void <init>(int,org.jf.dexlib2.writer.builder.BuilderTypeReference,java.util.Set) -> <init>
    54:54:int getVisibility() -> a
    58:58:java.lang.String getType() -> b
    62:62:java.util.Set getElements() -> c
org.jf.dexlib2.writer.builder.BuilderAnnotationElement -> org.c.b.h.a.c:
    org.jf.dexlib2.writer.builder.BuilderStringReference name -> b
    org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderEncodedValue value -> c
    44:47:void <init>(org.jf.dexlib2.writer.builder.BuilderStringReference,org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderEncodedValue) -> <init>
    50:50:java.lang.String getName() -> a
    54:54:org.jf.dexlib2.iface.value.EncodedValue getValue() -> b
org.jf.dexlib2.writer.builder.BuilderAnnotationPool -> org.c.b.h.a.d:
    java.util.concurrent.ConcurrentMap internedItems -> b
    46:51:void <init>(org.jf.dexlib2.writer.builder.DexBuilder) -> <init>
    54:64:org.jf.dexlib2.writer.builder.BuilderAnnotation internAnnotation(org.jf.dexlib2.iface.Annotation) -> a
    68:68:int getVisibility(org.jf.dexlib2.writer.builder.BuilderAnnotation) -> a
    72:72:org.jf.dexlib2.writer.builder.BuilderTypeReference getType(org.jf.dexlib2.writer.builder.BuilderAnnotation) -> b
    77:77:java.util.Collection getElements(org.jf.dexlib2.writer.builder.BuilderAnnotation) -> c
    82:82:org.jf.dexlib2.writer.builder.BuilderStringReference getElementName(org.jf.dexlib2.writer.builder.BuilderAnnotationElement) -> a
    87:87:org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderEncodedValue getElementValue(org.jf.dexlib2.writer.builder.BuilderAnnotationElement) -> b
    91:91:int getItemOffset(org.jf.dexlib2.writer.builder.BuilderAnnotation) -> d
    95:95:java.util.Collection getItems() -> a
    44:44:java.lang.Object getElementValue(java.lang.Object) -> e
    44:44:java.lang.Object getElementName(java.lang.Object) -> d
    44:44:java.util.Collection getElements(java.lang.Object) -> c
    44:44:java.lang.Object getType(java.lang.Object) -> b
    44:44:int getVisibility(java.lang.Object) -> a
    44:44:int getItemOffset(java.lang.Object) -> f
org.jf.dexlib2.writer.builder.BuilderAnnotationPool$1 -> org.c.b.h.a.e:
    org.jf.dexlib2.writer.builder.BuilderAnnotationPool this$0 -> a
    95:95:void <init>(org.jf.dexlib2.writer.builder.BuilderAnnotationPool,java.util.Collection) -> <init>
    97:97:int getValue(org.jf.dexlib2.writer.builder.BuilderAnnotation) -> a
    101:103:int setValue(org.jf.dexlib2.writer.builder.BuilderAnnotation,int) -> a
    95:95:int setValue(java.lang.Object,int) -> a
    95:95:int getValue(java.lang.Object) -> a
org.jf.dexlib2.writer.builder.BuilderAnnotationSet -> org.c.b.h.a.f:
    org.jf.dexlib2.writer.builder.BuilderAnnotationSet EMPTY -> a
    java.util.Set annotations -> b
    int offset -> c
    47:51:void <init>(java.util.Set) -> <init>
    54:54:java.util.Iterator iterator() -> iterator
    58:58:int size() -> size
    43:44:void <clinit>() -> <clinit>
org.jf.dexlib2.writer.builder.BuilderAnnotationSetPool -> org.c.b.h.a.g:
    java.util.concurrent.ConcurrentMap internedItems -> b
    51:56:void <init>(org.jf.dexlib2.writer.builder.DexBuilder) -> <init>
    59:77:org.jf.dexlib2.writer.builder.BuilderAnnotationSet internAnnotationSet(java.util.Set) -> a
    82:82:java.util.Collection getAnnotations(org.jf.dexlib2.writer.builder.BuilderAnnotationSet) -> a
    86:86:int getNullableItemOffset(org.jf.dexlib2.writer.builder.BuilderAnnotationSet) -> b
    90:90:int getItemOffset(org.jf.dexlib2.writer.builder.BuilderAnnotationSet) -> c
    94:94:java.util.Collection getItems() -> a
    49:49:java.util.Collection getAnnotations(java.lang.Object) -> a
    49:49:int getNullableItemOffset(java.lang.Object) -> b
    49:49:int getItemOffset(java.lang.Object) -> f
org.jf.dexlib2.writer.builder.BuilderAnnotationSetPool$1 -> org.c.b.h.a.h:
    org.jf.dexlib2.writer.builder.BuilderAnnotationSetPool this$0 -> a
    70:70:void <init>(org.jf.dexlib2.writer.builder.BuilderAnnotationSetPool) -> <init>
    72:72:org.jf.dexlib2.writer.builder.BuilderAnnotation apply(org.jf.dexlib2.iface.Annotation) -> a
    70:70:java.lang.Object apply(java.lang.Object) -> a
org.jf.dexlib2.writer.builder.BuilderAnnotationSetPool$2 -> org.c.b.h.a.i:
    org.jf.dexlib2.writer.builder.BuilderAnnotationSetPool this$0 -> a
    94:94:void <init>(org.jf.dexlib2.writer.builder.BuilderAnnotationSetPool,java.util.Collection) -> <init>
    96:96:int getValue(org.jf.dexlib2.writer.builder.BuilderAnnotationSet) -> a
    100:102:int setValue(org.jf.dexlib2.writer.builder.BuilderAnnotationSet,int) -> a
    94:94:int setValue(java.lang.Object,int) -> a
    94:94:int getValue(java.lang.Object) -> a
org.jf.dexlib2.writer.builder.BuilderClassDef -> org.c.b.h.a.j:
    org.jf.dexlib2.writer.builder.BuilderTypeReference type -> a
    int accessFlags -> b
    org.jf.dexlib2.writer.builder.BuilderTypeReference superclass -> c
    org.jf.dexlib2.writer.builder.BuilderTypeList interfaces -> d
    org.jf.dexlib2.writer.builder.BuilderStringReference sourceFile -> e
    org.jf.dexlib2.writer.builder.BuilderAnnotationSet annotations -> f
    java.util.SortedSet staticFields -> g
    java.util.SortedSet instanceFields -> h
    java.util.SortedSet directMethods -> i
    java.util.SortedSet virtualMethods -> j
    int classDefIndex -> k
    int encodedArrayOffset -> l
    int annotationDirectoryOffset -> m
    58:87:void <init>(org.jf.dexlib2.writer.builder.BuilderTypeReference,int,org.jf.dexlib2.writer.builder.BuilderTypeReference,org.jf.dexlib2.writer.builder.BuilderTypeList,org.jf.dexlib2.writer.builder.BuilderStringReference,org.jf.dexlib2.writer.builder.BuilderAnnotationSet,java.lang.Iterable,java.lang.Iterable) -> <init>
    89:89:java.lang.String getType() -> a
    90:90:int getAccessFlags() -> c
    91:91:java.lang.String getSuperclass() -> b
    92:92:java.lang.String getSourceFile() -> d
    93:93:org.jf.dexlib2.writer.builder.BuilderAnnotationSet getAnnotations() -> l
    94:94:java.util.SortedSet getStaticFields() -> m
    95:95:java.util.SortedSet getInstanceFields() -> n
    96:96:java.util.SortedSet getDirectMethods() -> o
    97:97:java.util.SortedSet getVirtualMethods() -> p
    101:101:java.util.List getInterfaces() -> e
    105:105:java.util.Collection getFields() -> q
    119:119:java.util.Collection getMethods() -> r
    46:46:java.lang.Iterable getMethods() -> k
    46:46:java.lang.Iterable getVirtualMethods() -> j
    46:46:java.lang.Iterable getDirectMethods() -> i
    46:46:java.lang.Iterable getInstanceFields() -> h
    46:46:java.lang.Iterable getStaticFields() -> g
    46:46:java.util.Set getAnnotations() -> f
org.jf.dexlib2.writer.builder.BuilderClassDef$1 -> org.c.b.h.a.k:
    org.jf.dexlib2.writer.builder.BuilderClassDef this$0 -> a
    105:105:void <init>(org.jf.dexlib2.writer.builder.BuilderClassDef) -> <init>
    107:109:java.util.Iterator iterator() -> iterator
    113:113:int size() -> size
org.jf.dexlib2.writer.builder.BuilderClassDef$2 -> org.c.b.h.a.l:
    org.jf.dexlib2.writer.builder.BuilderClassDef this$0 -> a
    119:119:void <init>(org.jf.dexlib2.writer.builder.BuilderClassDef) -> <init>
    121:123:java.util.Iterator iterator() -> iterator
    127:127:int size() -> size
org.jf.dexlib2.writer.builder.BuilderClassPool -> org.c.b.h.a.m:
    java.util.concurrent.ConcurrentMap internedItems -> b
    com.google.common.collect.ImmutableList sortedClasses -> c
    com.google.common.base.Predicate HAS_INITIALIZER -> d
    com.google.common.base.Function GET_INITIAL_VALUE -> e
    com.google.common.base.Predicate HAS_PARAMETER_ANNOTATIONS -> f
    com.google.common.base.Function PARAMETER_ANNOTATIONS -> g
    66:81:void <init>(org.jf.dexlib2.writer.builder.DexBuilder) -> <init>
    74:78:org.jf.dexlib2.writer.builder.BuilderClassDef internClass(org.jf.dexlib2.writer.builder.BuilderClassDef) -> a
    83:86:java.util.Collection getSortedClasses() -> a
    91:100:java.util.Map$Entry getClassEntryByType(org.jf.dexlib2.writer.builder.BuilderTypeReference) -> a
    116:116:org.jf.dexlib2.writer.builder.BuilderTypeReference getType(org.jf.dexlib2.writer.builder.BuilderClassDef) -> b
    120:120:int getAccessFlags(org.jf.dexlib2.writer.builder.BuilderClassDef) -> c
    124:124:org.jf.dexlib2.writer.builder.BuilderTypeReference getSuperclass(org.jf.dexlib2.writer.builder.BuilderClassDef) -> d
    128:128:org.jf.dexlib2.writer.builder.BuilderTypeList getInterfaces(org.jf.dexlib2.writer.builder.BuilderClassDef) -> e
    132:132:org.jf.dexlib2.writer.builder.BuilderStringReference getSourceFile(org.jf.dexlib2.writer.builder.BuilderClassDef) -> f
    157:173:java.util.Collection getStaticInitializers(org.jf.dexlib2.writer.builder.BuilderClassDef) -> g
    178:178:java.util.Collection getSortedStaticFields(org.jf.dexlib2.writer.builder.BuilderClassDef) -> h
    183:183:java.util.Collection getSortedInstanceFields(org.jf.dexlib2.writer.builder.BuilderClassDef) -> i
    188:188:java.util.Collection getSortedFields(org.jf.dexlib2.writer.builder.BuilderClassDef) -> j
    193:193:java.util.Collection getSortedDirectMethods(org.jf.dexlib2.writer.builder.BuilderClassDef) -> k
    198:198:java.util.Collection getSortedVirtualMethods(org.jf.dexlib2.writer.builder.BuilderClassDef) -> l
    203:203:java.util.Collection getSortedMethods(org.jf.dexlib2.writer.builder.BuilderClassDef) -> m
    207:207:int getFieldAccessFlags(org.jf.dexlib2.writer.builder.BuilderField) -> a
    211:211:int getMethodAccessFlags(org.jf.dexlib2.writer.builder.BuilderMethod) -> a
    215:218:org.jf.dexlib2.writer.builder.BuilderAnnotationSet getClassAnnotations(org.jf.dexlib2.writer.builder.BuilderClassDef) -> n
    222:225:org.jf.dexlib2.writer.builder.BuilderAnnotationSet getFieldAnnotations(org.jf.dexlib2.writer.builder.BuilderField) -> b
    229:232:org.jf.dexlib2.writer.builder.BuilderAnnotationSet getMethodAnnotations(org.jf.dexlib2.writer.builder.BuilderMethod) -> b
    253:268:java.util.List getParameterAnnotations(org.jf.dexlib2.writer.builder.BuilderMethod) -> c
    273:277:java.lang.Iterable getDebugItems(org.jf.dexlib2.writer.builder.BuilderMethod) -> d
    282:282:java.lang.Iterable getParameterNames(org.jf.dexlib2.writer.builder.BuilderMethod) -> e
    290:294:int getRegisterCount(org.jf.dexlib2.writer.builder.BuilderMethod) -> f
    299:303:java.lang.Iterable getInstructions(org.jf.dexlib2.writer.builder.BuilderMethod) -> g
    308:312:java.util.List getTryBlocks(org.jf.dexlib2.writer.builder.BuilderMethod) -> h
    316:316:org.jf.dexlib2.writer.builder.BuilderTypeReference getExceptionType(org.jf.dexlib2.iface.ExceptionHandler) -> b
    321:325:org.jf.dexlib2.builder.MutableMethodImplementation makeMutableMethodImplementation(org.jf.dexlib2.writer.builder.BuilderMethod) -> i
    329:330:void setEncodedArrayOffset(org.jf.dexlib2.writer.builder.BuilderClassDef,int) -> a
    333:333:int getEncodedArrayOffset(org.jf.dexlib2.writer.builder.BuilderClassDef) -> o
    337:338:void setAnnotationDirectoryOffset(org.jf.dexlib2.writer.builder.BuilderClassDef,int) -> b
    341:341:int getAnnotationDirectoryOffset(org.jf.dexlib2.writer.builder.BuilderClassDef) -> p
    345:346:void setAnnotationSetRefListOffset(org.jf.dexlib2.writer.builder.BuilderMethod,int) -> a
    349:349:int getAnnotationSetRefListOffset(org.jf.dexlib2.writer.builder.BuilderMethod) -> j
    353:354:void setCodeItemOffset(org.jf.dexlib2.writer.builder.BuilderMethod,int) -> b
    357:357:int getCodeItemOffset(org.jf.dexlib2.writer.builder.BuilderMethod) -> k
    361:367:org.jf.dexlib2.writer.builder.BuilderStringReference checkStringReference(org.jf.dexlib2.iface.reference.StringReference) -> a
    373:379:org.jf.dexlib2.writer.builder.BuilderTypeReference checkTypeReference(org.jf.dexlib2.iface.reference.TypeReference) -> a
    387:429:void writeDebugItem(org.jf.dexlib2.writer.DebugWriter,org.jf.dexlib2.iface.debug.DebugItem) -> a
    432:432:int getItemIndex(org.jf.dexlib2.writer.builder.BuilderClassDef) -> q
    436:436:java.util.Collection getItems() -> b
    450:450:int getItemCount() -> c
    63:63:int getCodeItemOffset(java.lang.Object) -> B
    63:63:void setCodeItemOffset(java.lang.Object,int) -> d
    63:63:int getAnnotationSetRefListOffset(java.lang.Object) -> A
    63:63:void setAnnotationSetRefListOffset(java.lang.Object,int) -> c
    63:63:int getAnnotationDirectoryOffset(java.lang.Object) -> z
    63:63:void setAnnotationDirectoryOffset(java.lang.Object,int) -> b
    63:63:int getEncodedArrayOffset(java.lang.Object) -> y
    63:63:void setEncodedArrayOffset(java.lang.Object,int) -> a
    63:63:org.jf.dexlib2.builder.MutableMethodImplementation makeMutableMethodImplementation(java.lang.Object) -> x
    63:63:java.lang.CharSequence getExceptionType(org.jf.dexlib2.iface.ExceptionHandler) -> a
    63:63:java.util.List getTryBlocks(java.lang.Object) -> w
    63:63:java.lang.Iterable getInstructions(java.lang.Object) -> v
    63:63:int getRegisterCount(java.lang.Object) -> u
    63:63:java.lang.Iterable getParameterNames(java.lang.Object) -> t
    63:63:java.lang.Iterable getDebugItems(java.lang.Object) -> s
    63:63:java.util.List getParameterAnnotations(java.lang.Object) -> r
    63:63:java.lang.Object getMethodAnnotations(java.lang.Object) -> q
    63:63:java.lang.Object getFieldAnnotations(java.lang.Object) -> p
    63:63:java.lang.Object getClassAnnotations(java.lang.Object) -> o
    63:63:int getMethodAccessFlags(java.lang.Object) -> n
    63:63:int getFieldAccessFlags(java.lang.Object) -> m
    63:63:java.util.Collection getSortedMethods(java.lang.Object) -> l
    63:63:java.util.Collection getSortedVirtualMethods(java.lang.Object) -> k
    63:63:java.util.Collection getSortedDirectMethods(java.lang.Object) -> j
    63:63:java.util.Collection getSortedFields(java.lang.Object) -> i
    63:63:java.util.Collection getSortedInstanceFields(java.lang.Object) -> h
    63:63:java.util.Collection getSortedStaticFields(java.lang.Object) -> g
    63:63:java.util.Collection getStaticInitializers(java.lang.Object) -> f
    63:63:java.lang.CharSequence getSourceFile(java.lang.Object) -> e
    63:63:java.lang.Object getInterfaces(java.lang.Object) -> d
    63:63:java.lang.CharSequence getSuperclass(java.lang.Object) -> c
    63:63:int getAccessFlags(java.lang.Object) -> b
    63:63:java.lang.CharSequence getType(java.lang.Object) -> a
    63:63:java.util.Map$Entry getClassEntryByType(java.lang.CharSequence) -> a
    63:63:int getItemIndex(java.lang.Object) -> C
    63:63:com.google.common.base.Function access$000() -> d
    63:63:com.google.common.base.Function access$100() -> e
    135:243:void <clinit>() -> <clinit>
org.jf.dexlib2.writer.builder.BuilderClassPool$1 -> org.c.b.h.a.n:
    org.jf.dexlib2.writer.builder.BuilderClassDef val$classDef -> a
    org.jf.dexlib2.writer.builder.BuilderClassPool this$0 -> b
    100:100:void <init>(org.jf.dexlib2.writer.builder.BuilderClassPool,org.jf.dexlib2.writer.builder.BuilderClassDef) -> <init>
    102:102:org.jf.dexlib2.writer.builder.BuilderClassDef getKey() -> a
    106:106:java.lang.Integer getValue() -> b
    110:110:java.lang.Integer setValue(java.lang.Integer) -> a
    100:100:java.lang.Object setValue(java.lang.Object) -> setValue
    100:100:java.lang.Object getValue() -> getValue
    100:100:java.lang.Object getKey() -> getKey
org.jf.dexlib2.writer.builder.BuilderClassPool$2 -> org.c.b.h.a.o:
    135:135:void <init>() -> <init>
    138:139:boolean apply(org.jf.dexlib2.iface.Field) -> a
    135:135:boolean apply(java.lang.Object) -> a
org.jf.dexlib2.writer.builder.BuilderClassPool$3 -> org.c.b.h.a.p:
    144:144:void <init>() -> <init>
    147:151:org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderEncodedValue apply(org.jf.dexlib2.writer.builder.BuilderField) -> a
    144:144:java.lang.Object apply(java.lang.Object) -> a
org.jf.dexlib2.writer.builder.BuilderClassPool$4 -> org.c.b.h.a.q:
    java.util.SortedSet val$sortedStaticFields -> a
    int val$lastIndex -> b
    org.jf.dexlib2.writer.builder.BuilderClassPool this$0 -> c
    161:161:void <init>(org.jf.dexlib2.writer.builder.BuilderClassPool,java.util.SortedSet,int) -> <init>
    163:165:java.util.Iterator iterator() -> iterator
    169:169:int size() -> size
org.jf.dexlib2.writer.builder.BuilderClassPool$5 -> org.c.b.h.a.r:
    236:236:void <init>() -> <init>
    239:239:boolean apply(org.jf.dexlib2.writer.builder.BuilderMethodParameter) -> a
    236:236:boolean apply(java.lang.Object) -> a
org.jf.dexlib2.writer.builder.BuilderClassPool$6 -> org.c.b.h.a.s:
    244:244:void <init>() -> <init>
    247:247:org.jf.dexlib2.writer.builder.BuilderAnnotationSet apply(org.jf.dexlib2.writer.builder.BuilderMethodParameter) -> a
    244:244:java.lang.Object apply(java.lang.Object) -> a
org.jf.dexlib2.writer.builder.BuilderClassPool$7 -> org.c.b.h.a.t:
    java.util.List val$parameters -> a
    org.jf.dexlib2.writer.builder.BuilderClassPool this$0 -> b
    257:257:void <init>(org.jf.dexlib2.writer.builder.BuilderClassPool,java.util.List) -> <init>
    259:260:java.util.Iterator iterator() -> iterator
    264:264:int size() -> size
org.jf.dexlib2.writer.builder.BuilderClassPool$8 -> org.c.b.h.a.u:
    org.jf.dexlib2.writer.builder.BuilderClassPool this$0 -> a
    282:282:void <init>(org.jf.dexlib2.writer.builder.BuilderClassPool) -> <init>
    284:284:org.jf.dexlib2.writer.builder.BuilderStringReference apply(org.jf.dexlib2.writer.builder.BuilderMethodParameter) -> a
    282:282:java.lang.Object apply(java.lang.Object) -> a
org.jf.dexlib2.writer.builder.BuilderClassPool$9 -> org.c.b.h.a.v:
    org.jf.dexlib2.writer.builder.BuilderClassPool this$0 -> a
    436:436:void <init>(org.jf.dexlib2.writer.builder.BuilderClassPool,java.util.Collection) -> <init>
    438:438:int getValue(org.jf.dexlib2.writer.builder.BuilderClassDef) -> a
    442:444:int setValue(org.jf.dexlib2.writer.builder.BuilderClassDef,int) -> a
    436:436:int setValue(java.lang.Object,int) -> a
    436:436:int getValue(java.lang.Object) -> a
org.jf.dexlib2.writer.builder.BuilderEncodedValues -> org.c.b.h.a.w:
    81:102:org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderEncodedValue defaultValueForType(java.lang.String) -> a
org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderAnnotationEncodedValue -> org.c.b.h.a.x:
    org.jf.dexlib2.writer.builder.BuilderTypeReference typeReference -> a
    java.util.Set elements -> b
    53:56:void <init>(org.jf.dexlib2.writer.builder.BuilderTypeReference,java.util.Set) -> <init>
    59:59:java.lang.String getType() -> b
    63:63:java.util.Set getElements() -> c
org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderArrayEncodedValue -> org.c.b.h.a.y:
    java.util.List elements -> a
    70:72:void <init>(java.util.List) -> <init>
    75:75:java.util.List getValue() -> b
org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderBooleanEncodedValue -> org.c.b.h.a.z:
    org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderBooleanEncodedValue TRUE_VALUE -> a
    org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderBooleanEncodedValue FALSE_VALUE -> b
    boolean value -> c
    113:115:void <init>(boolean) -> <init>
    118:118:boolean getValue() -> b
    108:109:void <clinit>() -> <clinit>
org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderByteEncodedValue -> org.c.b.h.a.aa:
    125:126:void <init>(byte) -> <init>
org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderCharEncodedValue -> org.c.b.h.a.ab:
    132:133:void <init>(char) -> <init>
org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderDoubleEncodedValue -> org.c.b.h.a.ac:
    139:140:void <init>(double) -> <init>
org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderEncodedValue -> org.c.b.h.a.ad:
org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderEnumEncodedValue -> org.c.b.h.a.ae:
    org.jf.dexlib2.writer.builder.BuilderFieldReference enumReference -> a
    147:149:void <init>(org.jf.dexlib2.writer.builder.BuilderFieldReference) -> <init>
    152:152:org.jf.dexlib2.writer.builder.BuilderFieldReference getValue() -> c
    143:143:org.jf.dexlib2.iface.reference.FieldReference getValue() -> b
org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderFieldEncodedValue -> org.c.b.h.a.af:
    org.jf.dexlib2.writer.builder.BuilderFieldReference fieldReference -> a
    160:162:void <init>(org.jf.dexlib2.writer.builder.BuilderFieldReference) -> <init>
    165:165:org.jf.dexlib2.writer.builder.BuilderFieldReference getValue() -> c
    156:156:org.jf.dexlib2.iface.reference.FieldReference getValue() -> b
org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderFloatEncodedValue -> org.c.b.h.a.ag:
    172:173:void <init>(float) -> <init>
org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderIntEncodedValue -> org.c.b.h.a.ah:
    179:180:void <init>(int) -> <init>
org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderLongEncodedValue -> org.c.b.h.a.ai:
    186:187:void <init>(long) -> <init>
org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderMethodEncodedValue -> org.c.b.h.a.aj:
    org.jf.dexlib2.writer.builder.BuilderMethodReference methodReference -> a
    194:196:void <init>(org.jf.dexlib2.writer.builder.BuilderMethodReference) -> <init>
    199:199:org.jf.dexlib2.writer.builder.BuilderMethodReference getValue() -> c
    190:190:org.jf.dexlib2.iface.reference.MethodReference getValue() -> b
org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderNullEncodedValue -> org.c.b.h.a.ak:
    org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderNullEncodedValue INSTANCE -> a
    207:207:void <init>() -> <init>
    205:205:void <clinit>() -> <clinit>
org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderShortEncodedValue -> org.c.b.h.a.al:
    213:214:void <init>(short) -> <init>
org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderStringEncodedValue -> org.c.b.h.a.am:
    org.jf.dexlib2.writer.builder.BuilderStringReference stringReference -> a
    221:223:void <init>(org.jf.dexlib2.writer.builder.BuilderStringReference) -> <init>
    226:226:java.lang.String getValue() -> b
org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderTypeEncodedValue -> org.c.b.h.a.an:
    org.jf.dexlib2.writer.builder.BuilderTypeReference typeReference -> a
    234:236:void <init>(org.jf.dexlib2.writer.builder.BuilderTypeReference) -> <init>
    239:239:java.lang.String getValue() -> b
org.jf.dexlib2.writer.builder.BuilderField -> org.c.b.h.a.ao:
    org.jf.dexlib2.writer.builder.BuilderFieldReference fieldReference -> a
    int accessFlags -> b
    org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderEncodedValue initialValue -> c
    org.jf.dexlib2.writer.builder.BuilderAnnotationSet annotations -> d
    50:55:void <init>(org.jf.dexlib2.writer.builder.BuilderFieldReference,int,org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderEncodedValue,org.jf.dexlib2.writer.builder.BuilderAnnotationSet) -> <init>
    58:58:int getAccessFlags() -> d
    62:62:org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderEncodedValue getInitialValue() -> g
    66:66:org.jf.dexlib2.writer.builder.BuilderAnnotationSet getAnnotations() -> h
    70:70:java.lang.String getDefiningClass() -> c
    74:74:java.lang.String getName() -> a
    78:78:java.lang.String getType() -> b
    41:41:java.util.Set getAnnotations() -> f
    41:41:org.jf.dexlib2.iface.value.EncodedValue getInitialValue() -> e
org.jf.dexlib2.writer.builder.BuilderFieldPool -> org.c.b.h.a.ap:
    java.util.concurrent.ConcurrentMap internedItems -> b
    46:51:void <init>(org.jf.dexlib2.writer.builder.DexBuilder) -> <init>
    54:55:org.jf.dexlib2.writer.builder.BuilderFieldReference internField(java.lang.String,java.lang.String,java.lang.String) -> a
    59:69:org.jf.dexlib2.writer.builder.BuilderFieldReference internField(org.jf.dexlib2.iface.reference.FieldReference) -> d
    74:74:org.jf.dexlib2.writer.builder.BuilderTypeReference getDefiningClass(org.jf.dexlib2.writer.builder.BuilderFieldReference) -> a
    78:78:org.jf.dexlib2.writer.builder.BuilderTypeReference getFieldType(org.jf.dexlib2.writer.builder.BuilderFieldReference) -> b
    82:82:org.jf.dexlib2.writer.builder.BuilderStringReference getName(org.jf.dexlib2.writer.builder.BuilderFieldReference) -> c
    86:86:int getFieldIndex(org.jf.dexlib2.writer.builder.BuilderField) -> a
    90:90:int getItemIndex(org.jf.dexlib2.writer.builder.BuilderFieldReference) -> d
    94:94:java.util.Collection getItems() -> b
    108:108:int getItemCount() -> c
    44:44:int getFieldIndex(java.lang.Object) -> a
    44:44:java.lang.Object getName(org.jf.dexlib2.iface.reference.FieldReference) -> c
    44:44:java.lang.Object getFieldType(org.jf.dexlib2.iface.reference.FieldReference) -> b
    44:44:java.lang.Object getDefiningClass(org.jf.dexlib2.iface.reference.FieldReference) -> a
    44:44:int getItemIndex(java.lang.Object) -> C
org.jf.dexlib2.writer.builder.BuilderFieldPool$1 -> org.c.b.h.a.aq:
    org.jf.dexlib2.writer.builder.BuilderFieldPool this$0 -> a
    94:94:void <init>(org.jf.dexlib2.writer.builder.BuilderFieldPool,java.util.Collection) -> <init>
    96:96:int getValue(org.jf.dexlib2.writer.builder.BuilderFieldReference) -> a
    100:102:int setValue(org.jf.dexlib2.writer.builder.BuilderFieldReference,int) -> a
    94:94:int setValue(java.lang.Object,int) -> a
    94:94:int getValue(java.lang.Object) -> a
org.jf.dexlib2.writer.builder.BuilderFieldReference -> org.c.b.h.a.ar:
    org.jf.dexlib2.writer.builder.BuilderTypeReference definingClass -> a
    org.jf.dexlib2.writer.builder.BuilderStringReference name -> b
    org.jf.dexlib2.writer.builder.BuilderTypeReference fieldType -> c
    int index -> d
    43:51:void <init>(org.jf.dexlib2.writer.builder.BuilderTypeReference,org.jf.dexlib2.writer.builder.BuilderStringReference,org.jf.dexlib2.writer.builder.BuilderTypeReference) -> <init>
    54:54:java.lang.String getDefiningClass() -> c
    58:58:java.lang.String getName() -> a
    62:62:java.lang.String getType() -> b
    66:66:int getIndex() -> d
org.jf.dexlib2.writer.builder.BuilderMapEntryCollection -> org.c.b.h.a.as:
    java.util.Collection keys -> a
    43:45:void <init>(java.util.Collection) -> <init>
    64:66:java.util.Iterator iterator() -> iterator
    84:84:int size() -> size
    int getValue(java.lang.Object) -> a
    int setValue(java.lang.Object,int) -> a
org.jf.dexlib2.writer.builder.BuilderMapEntryCollection$1 -> org.c.b.h.a.at:
    java.util.Iterator val$iter -> a
    org.jf.dexlib2.writer.builder.BuilderMapEntryCollection this$0 -> b
    66:66:void <init>(org.jf.dexlib2.writer.builder.BuilderMapEntryCollection,java.util.Iterator) -> <init>
    68:68:boolean hasNext() -> hasNext
    72:74:java.util.Map$Entry next() -> a
    78:78:void remove() -> remove
    66:66:java.lang.Object next() -> next
org.jf.dexlib2.writer.builder.BuilderMapEntryCollection$MapEntry -> org.c.b.h.a.au:
    java.lang.Object key -> b
    org.jf.dexlib2.writer.builder.BuilderMapEntryCollection this$0 -> a
    47:47:void <init>(org.jf.dexlib2.writer.builder.BuilderMapEntryCollection) -> <init>
    51:51:java.lang.Object getKey() -> getKey
    55:55:java.lang.Integer getValue() -> a
    59:59:java.lang.Integer setValue(java.lang.Integer) -> a
    47:47:java.lang.Object setValue(java.lang.Object) -> setValue
    47:47:java.lang.Object getValue() -> getValue
    47:47:void <init>(org.jf.dexlib2.writer.builder.BuilderMapEntryCollection,org.jf.dexlib2.writer.builder.BuilderMapEntryCollection$1) -> <init>
    47:47:java.lang.Object access$102(org.jf.dexlib2.writer.builder.BuilderMapEntryCollection$MapEntry,java.lang.Object) -> a
org.jf.dexlib2.writer.builder.BuilderMethod -> org.c.b.h.a.av:
    org.jf.dexlib2.writer.builder.BuilderMethodReference methodReference -> a
    java.util.List parameters -> b
    int accessFlags -> c
    org.jf.dexlib2.writer.builder.BuilderAnnotationSet annotations -> d
    org.jf.dexlib2.iface.MethodImplementation methodImplementation -> e
    int annotationSetRefListOffset -> f
    int codeItemOffset -> g
    50:63:void <init>(org.jf.dexlib2.writer.builder.BuilderMethodReference,java.util.List,int,org.jf.dexlib2.writer.builder.BuilderAnnotationSet,org.jf.dexlib2.iface.MethodImplementation) -> <init>
    65:65:java.lang.String getDefiningClass() -> d
    66:66:java.lang.String getName() -> a
    67:67:org.jf.dexlib2.writer.builder.BuilderTypeList getParameterTypes() -> g
    68:68:java.lang.String getReturnType() -> c
    69:69:java.util.List getParameters() -> f
    70:70:int getAccessFlags() -> e
    71:71:org.jf.dexlib2.writer.builder.BuilderAnnotationSet getAnnotations() -> h
    72:72:org.jf.dexlib2.iface.MethodImplementation getImplementation() -> k
    43:43:java.util.List getParameterTypes() -> b
    43:43:java.util.Set getAnnotations() -> i
org.jf.dexlib2.writer.builder.BuilderMethodParameter -> org.c.b.h.a.aw:
    org.jf.dexlib2.writer.builder.BuilderTypeReference type -> a
    org.jf.dexlib2.writer.builder.BuilderStringReference name -> b
    org.jf.dexlib2.writer.builder.BuilderAnnotationSet annotations -> c
    46:50:void <init>(org.jf.dexlib2.writer.builder.BuilderTypeReference,org.jf.dexlib2.writer.builder.BuilderStringReference,org.jf.dexlib2.writer.builder.BuilderAnnotationSet) -> <init>
    53:53:java.lang.String getType() -> a
    57:57:java.lang.String getName() -> e
    61:61:org.jf.dexlib2.writer.builder.BuilderAnnotationSet getAnnotations() -> d
    39:39:java.util.Set getAnnotations() -> c
org.jf.dexlib2.writer.builder.BuilderMethodPool -> org.c.b.h.a.ax:
    java.util.concurrent.ConcurrentMap internedItems -> b
    47:52:void <init>(org.jf.dexlib2.writer.builder.DexBuilder) -> <init>
    55:65:org.jf.dexlib2.writer.builder.BuilderMethodReference internMethod(org.jf.dexlib2.iface.reference.MethodReference) -> d
    71:71:org.jf.dexlib2.writer.builder.BuilderMethodReference internMethod(java.lang.String,java.lang.String,java.util.List,java.lang.String) -> a
    75:75:org.jf.dexlib2.writer.builder.BuilderMethodReference getMethodReference(org.jf.dexlib2.writer.builder.BuilderMethod) -> a
    80:80:org.jf.dexlib2.writer.builder.BuilderTypeReference getDefiningClass(org.jf.dexlib2.writer.builder.BuilderMethodReference) -> a
    85:85:org.jf.dexlib2.writer.builder.BuilderMethodProtoReference getPrototype(org.jf.dexlib2.writer.builder.BuilderMethodReference) -> b
    89:89:org.jf.dexlib2.writer.builder.BuilderMethodProtoReference getPrototype(org.jf.dexlib2.writer.builder.BuilderMethod) -> b
    93:93:org.jf.dexlib2.writer.builder.BuilderStringReference getName(org.jf.dexlib2.writer.builder.BuilderMethodReference) -> c
    97:97:int getMethodIndex(org.jf.dexlib2.writer.builder.BuilderMethod) -> c
    101:101:int getItemIndex(org.jf.dexlib2.writer.builder.BuilderMethodReference) -> d
    105:105:java.util.Collection getItems() -> b
    119:119:int getItemCount() -> c
    45:45:int getMethodIndex(java.lang.Object) -> c
    45:45:java.lang.Object getName(org.jf.dexlib2.iface.reference.MethodReference) -> c
    45:45:org.jf.dexlib2.iface.reference.MethodProtoReference getPrototype(java.lang.Object) -> b
    45:45:org.jf.dexlib2.iface.reference.MethodProtoReference getPrototype(org.jf.dexlib2.iface.reference.MethodReference) -> b
    45:45:java.lang.Object getDefiningClass(org.jf.dexlib2.iface.reference.MethodReference) -> a
    45:45:org.jf.dexlib2.iface.reference.MethodReference getMethodReference(java.lang.Object) -> a
    45:45:int getItemIndex(java.lang.Object) -> C
org.jf.dexlib2.writer.builder.BuilderMethodPool$1 -> org.c.b.h.a.ay:
    org.jf.dexlib2.writer.builder.BuilderMethodPool this$0 -> a
    105:105:void <init>(org.jf.dexlib2.writer.builder.BuilderMethodPool,java.util.Collection) -> <init>
    107:107:int getValue(org.jf.dexlib2.writer.builder.BuilderMethodReference) -> a
    111:113:int setValue(org.jf.dexlib2.writer.builder.BuilderMethodReference,int) -> a
    105:105:int setValue(java.lang.Object,int) -> a
    105:105:int getValue(java.lang.Object) -> a
org.jf.dexlib2.writer.builder.BuilderMethodPool$MethodKey -> org.c.b.h.a.az:
    java.lang.String definingClass -> a
    java.lang.String name -> b
    java.util.List parameterTypes -> c
    java.lang.String returnType -> d
    129:134:void <init>(java.lang.String,java.lang.String,java.util.List,java.lang.String) -> <init>
    137:137:java.lang.String getDefiningClass() -> d
    141:141:java.lang.String getName() -> a
    145:145:java.util.List getParameterTypes() -> b
    149:149:java.lang.String getReturnType() -> c
org.jf.dexlib2.writer.builder.BuilderMethodProtoReference -> org.c.b.h.a.ba:
    org.jf.dexlib2.writer.builder.BuilderStringReference shorty -> a
    org.jf.dexlib2.writer.builder.BuilderTypeList parameterTypes -> b
    org.jf.dexlib2.writer.builder.BuilderTypeReference returnType -> c
    int index -> d
    50:57:void <init>(org.jf.dexlib2.writer.builder.BuilderStringReference,org.jf.dexlib2.writer.builder.BuilderTypeList,org.jf.dexlib2.writer.builder.BuilderTypeReference) -> <init>
    60:60:java.util.List getParameterTypes() -> a
    64:64:java.lang.String getReturnType() -> b
    69:69:int getIndex() -> c
org.jf.dexlib2.writer.builder.BuilderMethodReference -> org.c.b.h.a.bb:
    org.jf.dexlib2.writer.builder.BuilderTypeReference definingClass -> a
    org.jf.dexlib2.writer.builder.BuilderStringReference name -> b
    org.jf.dexlib2.writer.builder.BuilderMethodProtoReference proto -> c
    int index -> d
    43:51:void <init>(org.jf.dexlib2.writer.builder.BuilderTypeReference,org.jf.dexlib2.writer.builder.BuilderStringReference,org.jf.dexlib2.writer.builder.BuilderMethodProtoReference) -> <init>
    54:54:java.lang.String getDefiningClass() -> d
    58:58:java.lang.String getName() -> a
    62:62:org.jf.dexlib2.writer.builder.BuilderTypeList getParameterTypes() -> e
    66:66:java.lang.String getReturnType() -> c
    39:39:java.util.List getParameterTypes() -> b
org.jf.dexlib2.writer.builder.BuilderProtoPool -> org.c.b.h.a.bc:
    java.util.concurrent.ConcurrentMap internedItems -> b
    49:54:void <init>(org.jf.dexlib2.writer.builder.DexBuilder) -> <init>
    57:68:org.jf.dexlib2.writer.builder.BuilderMethodProtoReference internMethodProto(org.jf.dexlib2.iface.reference.MethodProtoReference) -> a
    72:73:org.jf.dexlib2.writer.builder.BuilderMethodProtoReference internMethodProto(org.jf.dexlib2.iface.reference.MethodReference) -> a
    77:77:org.jf.dexlib2.writer.builder.BuilderStringReference getShorty(org.jf.dexlib2.writer.builder.BuilderMethodProtoReference) -> a
    81:81:org.jf.dexlib2.writer.builder.BuilderTypeReference getReturnType(org.jf.dexlib2.writer.builder.BuilderMethodProtoReference) -> b
    85:85:org.jf.dexlib2.writer.builder.BuilderTypeList getParameters(org.jf.dexlib2.writer.builder.BuilderMethodProtoReference) -> c
    89:89:int getItemIndex(org.jf.dexlib2.writer.builder.BuilderMethodProtoReference) -> d
    93:93:java.util.Collection getItems() -> b
    107:107:int getItemCount() -> c
    47:47:java.lang.Object getParameters(java.lang.Object) -> c
    47:47:java.lang.Object getReturnType(java.lang.Object) -> b
    47:47:java.lang.Object getShorty(java.lang.Object) -> a
    47:47:int getItemIndex(java.lang.Object) -> C
org.jf.dexlib2.writer.builder.BuilderProtoPool$1 -> org.c.b.h.a.bd:
    org.jf.dexlib2.writer.builder.BuilderProtoPool this$0 -> a
    93:93:void <init>(org.jf.dexlib2.writer.builder.BuilderProtoPool,java.util.Collection) -> <init>
    95:95:int getValue(org.jf.dexlib2.writer.builder.BuilderMethodProtoReference) -> a
    99:101:int setValue(org.jf.dexlib2.writer.builder.BuilderMethodProtoReference,int) -> a
    93:93:int setValue(java.lang.Object,int) -> a
    93:93:int getValue(java.lang.Object) -> a
org.jf.dexlib2.writer.builder.BuilderReference -> org.c.b.h.a.be:
org.jf.dexlib2.writer.builder.BuilderStringPool -> org.c.b.h.a.bf:
    java.util.concurrent.ConcurrentMap internedItems -> a
    44:45:void <init>() -> <init>
    48:54:org.jf.dexlib2.writer.builder.BuilderStringReference internString(java.lang.String) -> a
    58:61:org.jf.dexlib2.writer.builder.BuilderStringReference internNullableString(java.lang.String) -> b
    65:65:int getNullableItemIndex(org.jf.dexlib2.writer.builder.BuilderStringReference) -> a
    69:69:int getItemIndex(org.jf.dexlib2.writer.builder.BuilderStringReference) -> b
    73:73:boolean hasJumboIndexes() -> a
    77:77:java.util.Collection getItems() -> b
    91:91:int getItemCount() -> c
    44:44:int getItemIndex(org.jf.dexlib2.iface.reference.StringReference) -> a
    44:44:int getNullableItemIndex(java.lang.Object) -> a
    44:44:int getItemIndex(java.lang.Object) -> C
org.jf.dexlib2.writer.builder.BuilderStringPool$1 -> org.c.b.h.a.bg:
    org.jf.dexlib2.writer.builder.BuilderStringPool this$0 -> a
    77:77:void <init>(org.jf.dexlib2.writer.builder.BuilderStringPool,java.util.Collection) -> <init>
    79:79:int getValue(org.jf.dexlib2.writer.builder.BuilderStringReference) -> a
    83:85:int setValue(org.jf.dexlib2.writer.builder.BuilderStringReference,int) -> a
    77:77:int setValue(java.lang.Object,int) -> a
    77:77:int getValue(java.lang.Object) -> a
org.jf.dexlib2.writer.builder.BuilderStringReference -> org.c.b.h.a.bh:
    java.lang.String string -> a
    int index -> b
    41:45:void <init>(java.lang.String) -> <init>
    48:48:java.lang.String getString() -> a
org.jf.dexlib2.writer.builder.BuilderTypeList -> org.c.b.h.a.bi:
    org.jf.dexlib2.writer.builder.BuilderTypeList EMPTY -> a
    java.util.List types -> b
    int offset -> c
    45:49:void <init>(java.util.List) -> <init>
    52:52:org.jf.dexlib2.writer.builder.BuilderTypeReference get(int) -> a
    56:56:int size() -> size
    41:41:java.lang.Object get(int) -> get
    42:42:void <clinit>() -> <clinit>
org.jf.dexlib2.writer.builder.BuilderTypeListPool -> org.c.b.h.a.bj:
    java.util.concurrent.ConcurrentMap internedItems -> b
    49:54:void <init>(org.jf.dexlib2.writer.builder.DexBuilder) -> <init>
    57:74:org.jf.dexlib2.writer.builder.BuilderTypeList internTypeList(java.util.List) -> a
    78:78:int getNullableItemOffset(org.jf.dexlib2.writer.builder.BuilderTypeList) -> a
    83:83:java.util.Collection getTypes(org.jf.dexlib2.writer.builder.BuilderTypeList) -> b
    87:87:int getItemOffset(org.jf.dexlib2.writer.builder.BuilderTypeList) -> c
    91:91:java.util.Collection getItems() -> a
    48:48:java.util.Collection getTypes(java.lang.Object) -> a
    48:48:int getNullableItemOffset(java.lang.Object) -> b
    48:48:int getItemOffset(java.lang.Object) -> f
org.jf.dexlib2.writer.builder.BuilderTypeListPool$1 -> org.c.b.h.a.bk:
    org.jf.dexlib2.writer.builder.BuilderTypeListPool this$0 -> a
    67:67:void <init>(org.jf.dexlib2.writer.builder.BuilderTypeListPool) -> <init>
    69:69:org.jf.dexlib2.writer.builder.BuilderTypeReference apply(java.lang.CharSequence) -> a
    67:67:java.lang.Object apply(java.lang.Object) -> a
org.jf.dexlib2.writer.builder.BuilderTypeListPool$2 -> org.c.b.h.a.bl:
    org.jf.dexlib2.writer.builder.BuilderTypeListPool this$0 -> a
    91:91:void <init>(org.jf.dexlib2.writer.builder.BuilderTypeListPool,java.util.Collection) -> <init>
    93:93:int getValue(org.jf.dexlib2.writer.builder.BuilderTypeList) -> a
    97:99:int setValue(org.jf.dexlib2.writer.builder.BuilderTypeList,int) -> a
    91:91:int setValue(java.lang.Object,int) -> a
    91:91:int getValue(java.lang.Object) -> a
org.jf.dexlib2.writer.builder.BuilderTypePool -> org.c.b.h.a.bm:
    java.util.concurrent.ConcurrentMap internedItems -> b
    46:50:void <init>(org.jf.dexlib2.writer.builder.DexBuilder) -> <init>
    53:60:org.jf.dexlib2.writer.builder.BuilderTypeReference internType(java.lang.String) -> a
    64:67:org.jf.dexlib2.writer.builder.BuilderTypeReference internNullableType(java.lang.String) -> b
    71:71:org.jf.dexlib2.writer.builder.BuilderStringReference getString(org.jf.dexlib2.writer.builder.BuilderTypeReference) -> a
    75:75:int getNullableItemIndex(org.jf.dexlib2.writer.builder.BuilderTypeReference) -> b
    79:79:int getItemIndex(org.jf.dexlib2.writer.builder.BuilderTypeReference) -> c
    83:83:java.util.Collection getItems() -> b
    97:97:int getItemCount() -> c
    44:44:int getItemIndex(org.jf.dexlib2.iface.reference.TypeReference) -> a
    44:44:java.lang.Object getString(java.lang.Object) -> b
    44:44:int getNullableItemIndex(java.lang.Object) -> a
    44:44:int getItemIndex(java.lang.Object) -> C
org.jf.dexlib2.writer.builder.BuilderTypePool$1 -> org.c.b.h.a.bn:
    org.jf.dexlib2.writer.builder.BuilderTypePool this$0 -> a
    83:83:void <init>(org.jf.dexlib2.writer.builder.BuilderTypePool,java.util.Collection) -> <init>
    85:85:int getValue(org.jf.dexlib2.writer.builder.BuilderTypeReference) -> a
    89:91:int setValue(org.jf.dexlib2.writer.builder.BuilderTypeReference,int) -> a
    83:83:int setValue(java.lang.Object,int) -> a
    83:83:int getValue(java.lang.Object) -> a
org.jf.dexlib2.writer.builder.BuilderTypeReference -> org.c.b.h.a.bo:
    org.jf.dexlib2.writer.builder.BuilderStringReference stringReference -> a
    int index -> b
    41:45:void <init>(org.jf.dexlib2.writer.builder.BuilderStringReference) -> <init>
    48:48:java.lang.String getType() -> a
    52:52:int getIndex() -> b
org.jf.dexlib2.writer.builder.DexBuilder -> org.c.b.h.a.bp:
    66:67:void <init>(org.jf.dexlib2.Opcodes) -> <init>
    70:70:org.jf.dexlib2.writer.DexWriter$SectionProvider getSectionProvider() -> a
    79:82:org.jf.dexlib2.writer.builder.BuilderField internField(java.lang.String,java.lang.String,java.lang.String,int,org.jf.dexlib2.iface.value.EncodedValue,java.util.Set) -> a
    92:98:org.jf.dexlib2.writer.builder.BuilderMethod internMethod(java.lang.String,java.lang.String,java.util.List,java.lang.String,int,java.util.Set,org.jf.dexlib2.iface.MethodImplementation) -> a
    110:130:org.jf.dexlib2.writer.builder.BuilderClassDef internClassDef(java.lang.String,int,java.lang.String,java.util.List,java.lang.String,java.util.Set,java.lang.Iterable,java.lang.Iterable) -> a
    136:136:org.jf.dexlib2.writer.builder.BuilderStringReference internStringReference(java.lang.String) -> a
    140:143:org.jf.dexlib2.writer.builder.BuilderStringReference internNullableStringReference(java.lang.String) -> b
    147:147:org.jf.dexlib2.writer.builder.BuilderTypeReference internTypeReference(java.lang.String) -> c
    151:154:org.jf.dexlib2.writer.builder.BuilderTypeReference internNullableTypeReference(java.lang.String) -> d
    158:158:org.jf.dexlib2.writer.builder.BuilderFieldReference internFieldReference(org.jf.dexlib2.iface.reference.FieldReference) -> a
    162:162:org.jf.dexlib2.writer.builder.BuilderMethodReference internMethodReference(org.jf.dexlib2.iface.reference.MethodReference) -> a
    166:166:org.jf.dexlib2.writer.builder.BuilderMethodProtoReference internMethodProtoReference(org.jf.dexlib2.iface.reference.MethodProtoReference) -> a
    170:185:org.jf.dexlib2.writer.builder.BuilderReference internReference(org.jf.dexlib2.iface.reference.Reference) -> a
    190:193:java.util.List internMethodParameters(java.util.List) -> a
    202:205:org.jf.dexlib2.writer.builder.BuilderMethodParameter internMethodParameter(org.jf.dexlib2.iface.MethodParameter) -> a
    210:264:void writeEncodedValue(org.jf.dexlib2.writer.DexWriter$InternalEncodedValueWriter,org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderEncodedValue) -> a
    268:269:java.util.Set internAnnotationElements(java.util.Set) -> a
    279:280:org.jf.dexlib2.writer.builder.BuilderAnnotationElement internAnnotationElement(org.jf.dexlib2.iface.AnnotationElement) -> a
    284:287:org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderEncodedValue internNullableEncodedValue(org.jf.dexlib2.iface.value.EncodedValue) -> a
    291:326:org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderEncodedValue internEncodedValue(org.jf.dexlib2.iface.value.EncodedValue) -> b
    331:333:org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderAnnotationEncodedValue internAnnotationEncodedValue(org.jf.dexlib2.iface.value.AnnotationEncodedValue) -> a
    337:339:org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderArrayEncodedValue internArrayEncodedValue(org.jf.dexlib2.iface.value.ArrayEncodedValue) -> a
    348:348:org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderEnumEncodedValue internEnumEncodedValue(org.jf.dexlib2.iface.value.EnumEncodedValue) -> a
    352:352:org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderFieldEncodedValue internFieldEncodedValue(org.jf.dexlib2.iface.value.FieldEncodedValue) -> a
    356:356:org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderMethodEncodedValue internMethodEncodedValue(org.jf.dexlib2.iface.value.MethodEncodedValue) -> a
    360:360:org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderStringEncodedValue internStringEncodedValue(org.jf.dexlib2.iface.value.StringEncodedValue) -> a
    364:364:org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderTypeEncodedValue internTypeEncodedValue(org.jf.dexlib2.iface.value.TypeEncodedValue) -> a
    58:58:void writeEncodedValue(org.jf.dexlib2.writer.DexWriter$InternalEncodedValueWriter,java.lang.Object) -> a
    58:58:org.jf.dexlib2.writer.builder.BuilderMethodParameter access$000(org.jf.dexlib2.writer.builder.DexBuilder,org.jf.dexlib2.iface.MethodParameter) -> a
    58:58:org.jf.dexlib2.writer.builder.BuilderAnnotationElement access$100(org.jf.dexlib2.writer.builder.DexBuilder,org.jf.dexlib2.iface.AnnotationElement) -> a
    58:58:org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderEncodedValue access$200(org.jf.dexlib2.writer.builder.DexBuilder,org.jf.dexlib2.iface.value.EncodedValue) -> a
org.jf.dexlib2.writer.builder.DexBuilder$1 -> org.c.b.h.a.bq:
    org.jf.dexlib2.writer.builder.DexBuilder this$0 -> a
    194:194:void <init>(org.jf.dexlib2.writer.builder.DexBuilder) -> <init>
    196:196:org.jf.dexlib2.writer.builder.BuilderMethodParameter apply(org.jf.dexlib2.iface.MethodParameter) -> a
    194:194:java.lang.Object apply(java.lang.Object) -> a
org.jf.dexlib2.writer.builder.DexBuilder$2 -> org.c.b.h.a.br:
    org.jf.dexlib2.writer.builder.DexBuilder this$0 -> a
    270:270:void <init>(org.jf.dexlib2.writer.builder.DexBuilder) -> <init>
    273:273:org.jf.dexlib2.writer.builder.BuilderAnnotationElement apply(org.jf.dexlib2.iface.AnnotationElement) -> a
    270:270:java.lang.Object apply(java.lang.Object) -> a
org.jf.dexlib2.writer.builder.DexBuilder$3 -> org.c.b.h.a.bs:
    org.jf.dexlib2.writer.builder.DexBuilder this$0 -> a
    340:340:void <init>(org.jf.dexlib2.writer.builder.DexBuilder) -> <init>
    342:342:org.jf.dexlib2.writer.builder.BuilderEncodedValues$BuilderEncodedValue apply(org.jf.dexlib2.iface.value.EncodedValue) -> a
    340:340:java.lang.Object apply(java.lang.Object) -> a
org.jf.dexlib2.writer.builder.DexBuilder$DexBuilderSectionProvider -> org.c.b.h.a.bt:
    org.jf.dexlib2.writer.builder.DexBuilder this$0 -> b
    367:367:void <init>(org.jf.dexlib2.writer.builder.DexBuilder) -> <init>
    369:369:org.jf.dexlib2.writer.builder.BuilderStringPool getStringSection() -> j
    373:373:org.jf.dexlib2.writer.builder.BuilderTypePool getTypeSection() -> k
    377:377:org.jf.dexlib2.writer.builder.BuilderProtoPool getProtoSection() -> l
    381:381:org.jf.dexlib2.writer.builder.BuilderFieldPool getFieldSection() -> m
    385:385:org.jf.dexlib2.writer.builder.BuilderMethodPool getMethodSection() -> n
    389:389:org.jf.dexlib2.writer.builder.BuilderClassPool getClassSection() -> o
    393:393:org.jf.dexlib2.writer.builder.BuilderTypeListPool getTypeListSection() -> p
    397:397:org.jf.dexlib2.writer.builder.BuilderAnnotationPool getAnnotationSection() -> q
    401:401:org.jf.dexlib2.writer.builder.BuilderAnnotationSetPool getAnnotationSetSection() -> r
    367:367:org.jf.dexlib2.writer.AnnotationSetSection getAnnotationSetSection() -> i
    367:367:org.jf.dexlib2.writer.AnnotationSection getAnnotationSection() -> h
    367:367:org.jf.dexlib2.writer.TypeListSection getTypeListSection() -> g
    367:367:org.jf.dexlib2.writer.ClassSection getClassSection() -> f
    367:367:org.jf.dexlib2.writer.MethodSection getMethodSection() -> e
    367:367:org.jf.dexlib2.writer.FieldSection getFieldSection() -> d
    367:367:org.jf.dexlib2.writer.ProtoSection getProtoSection() -> c
    367:367:org.jf.dexlib2.writer.TypeSection getTypeSection() -> b
    367:367:org.jf.dexlib2.writer.StringSection getStringSection() -> a
org.jf.dexlib2.writer.io.DeferredOutputStream -> org.c.b.h.b.a:
    6:6:void <init>() -> <init>
    void writeTo(java.io.OutputStream) -> a
org.jf.dexlib2.writer.io.DeferredOutputStreamFactory -> org.c.b.h.b.b:
    org.jf.dexlib2.writer.io.DeferredOutputStream makeDeferredOutputStream() -> a
org.jf.dexlib2.writer.io.DexDataStore -> org.c.b.h.b.c:
    java.io.OutputStream outputAt(int) -> a
    java.io.InputStream readAt(int) -> b
    void close() -> a
org.jf.dexlib2.writer.io.FileDataStore -> org.c.b.h.b.d:
    java.io.RandomAccessFile raf -> a
    12:15:void <init>(java.io.File) -> <init>
    18:18:java.io.OutputStream outputAt(int) -> a
    22:22:java.io.InputStream readAt(int) -> b
    26:27:void close() -> a
org.jf.dexlib2.writer.io.MemoryDeferredOutputStream -> org.c.b.h.b.e:
    java.util.List buffers -> a
    byte[] currentBuffer -> b
    int currentPosition -> c
    21:22:void <init>() -> <init>
    16:26:void <init>(int) -> <init>
    29:37:void writeTo(java.io.OutputStream) -> a
    40:46:void write(int) -> write
    49:50:void write(byte[]) -> write
    53:69:void write(byte[],int,int) -> write
    72:72:int remaining() -> b
    77:77:org.jf.dexlib2.writer.io.DeferredOutputStreamFactory getFactory() -> a
    82:82:org.jf.dexlib2.writer.io.DeferredOutputStreamFactory getFactory(int) -> a
org.jf.dexlib2.writer.io.MemoryDeferredOutputStream$1 -> org.c.b.h.b.f:
    int val$bufferSize -> a
    82:82:void <init>(int) -> <init>
    84:84:org.jf.dexlib2.writer.io.DeferredOutputStream makeDeferredOutputStream() -> a
org.jf.dexlib2.writer.util.TryListBuilder -> org.c.b.h.c.a:
    org.jf.dexlib2.writer.util.TryListBuilder$MutableTryBlock listStart -> a
    org.jf.dexlib2.writer.util.TryListBuilder$MutableTryBlock listEnd -> b
    53:58:void <init>() -> <init>
    62:72:java.util.List massageTryBlocks(java.util.List) -> a
    190:284:org.jf.dexlib2.writer.util.TryListBuilder$TryBounds getBoundingRanges(int,int) -> a
    288:313:void addHandler(int,int,org.jf.dexlib2.iface.ExceptionHandler) -> a
    316:316:java.util.List getTryBlocks() -> a
    46:46:org.jf.dexlib2.writer.util.TryListBuilder$MutableTryBlock access$000(org.jf.dexlib2.writer.util.TryListBuilder) -> a
    46:46:org.jf.dexlib2.writer.util.TryListBuilder$MutableTryBlock access$100(org.jf.dexlib2.writer.util.TryListBuilder) -> b
org.jf.dexlib2.writer.util.TryListBuilder$1 -> org.c.b.h.c.b:
    org.jf.dexlib2.writer.util.TryListBuilder$MutableTryBlock next -> b
    org.jf.dexlib2.writer.util.TryListBuilder this$0 -> a
    316:323:void <init>(org.jf.dexlib2.writer.util.TryListBuilder) -> <init>
    331:345:org.jf.dexlib2.writer.util.TryListBuilder$MutableTryBlock readNextItem() -> a
    349:349:boolean hasNext() -> hasNext
    353:359:org.jf.dexlib2.iface.TryBlock next() -> b
    363:363:void remove() -> remove
    316:316:java.lang.Object next() -> next
org.jf.dexlib2.writer.util.TryListBuilder$InvalidTryException -> org.c.b.h.c.c:
    95:96:void <init>(java.lang.String,java.lang.Object[]) -> <init>
org.jf.dexlib2.writer.util.TryListBuilder$MutableTryBlock -> org.c.b.h.c.d:
    org.jf.dexlib2.writer.util.TryListBuilder$MutableTryBlock prev -> a
    org.jf.dexlib2.writer.util.TryListBuilder$MutableTryBlock next -> b
    int startCodeAddress -> c
    int endCodeAddress -> d
    java.util.List exceptionHandlers -> e
    100:110:void <init>(int,int) -> <init>
    100:117:void <init>(int,int,java.util.List) -> <init>
    120:120:int getStartCodeAddress() -> a
    124:124:int getCodeUnitCount() -> b
    128:128:java.util.List getExceptionHandlers() -> c
    133:136:org.jf.dexlib2.writer.util.TryListBuilder$MutableTryBlock split(int) -> a
    140:142:void delete() -> d
    146:148:void mergeNext() -> e
    151:155:void append(org.jf.dexlib2.writer.util.TryListBuilder$MutableTryBlock) -> a
    158:162:void prepend(org.jf.dexlib2.writer.util.TryListBuilder$MutableTryBlock) -> b
    165:186:void addHandler(org.jf.dexlib2.iface.ExceptionHandler) -> a
org.jf.dexlib2.writer.util.TryListBuilder$TryBounds -> org.c.b.h.c.e:
    org.jf.dexlib2.writer.util.TryListBuilder$MutableTryBlock start -> a
    org.jf.dexlib2.writer.util.TryListBuilder$MutableTryBlock end -> b
    79:82:void <init>(org.jf.dexlib2.writer.util.TryListBuilder$MutableTryBlock,org.jf.dexlib2.writer.util.TryListBuilder$MutableTryBlock) -> <init>
org.jf.smali.InvalidToken -> org.c.c.a:
    java.lang.String message -> l
    43:46:void <init>(java.lang.String,java.lang.String) -> <init>
    49:49:java.lang.String getMessage() -> j
org.jf.smali.LexerErrorInterface -> org.c.c.b:
    int getNumberOfSyntaxErrors() -> c
org.jf.smali.LiteralTools -> org.c.c.c:
    java.util.regex.Pattern specialFloatRegex -> a
    java.util.regex.Pattern specialDoubleRegex -> b
    38:102:byte parseByte(java.lang.String) -> a
    108:172:short parseShort(java.lang.String) -> b
    178:236:int parseInt(java.lang.String) -> c
    242:306:long parseLong(java.lang.String) -> d
    312:325:float parseFloat(java.lang.String) -> e
    330:343:double parseDouble(java.lang.String) -> f
    395:398:void checkInt(long) -> a
    401:404:void checkShort(long) -> b
    407:410:void checkByte(long) -> c
    413:416:void checkNibble(long) -> d
    310:328:void <clinit>() -> <clinit>
org.jf.smali.Main -> org.c.c.d:
    java.lang.String VERSION -> a
    72:73:void <init>() -> <init>
    110:121:java.lang.String loadVersion() -> a
    52:52:void <clinit>() -> <clinit>
org.jf.smali.OdexedInstructionException -> org.c.c.e:
    java.lang.String odexedInstruction -> a
    38:40:void <init>(org.antlr.runtime.IntStream,java.lang.String) -> <init>
    43:43:java.lang.String getMessage() -> getMessage
org.jf.smali.SemanticException -> org.c.c.f:
    java.lang.String errorMessage -> a
    42:44:void <init>(org.antlr.runtime.IntStream,java.lang.String,java.lang.Object[]) -> <init>
    47:49:void <init>(org.antlr.runtime.IntStream,java.lang.Exception) -> <init>
    52:59:void <init>(org.antlr.runtime.IntStream,org.antlr.runtime.tree.CommonTree,java.lang.String,java.lang.Object[]) -> <init>
    62:69:void <init>(org.antlr.runtime.IntStream,org.antlr.runtime.Token,java.lang.String,java.lang.Object[]) -> <init>
    72:72:java.lang.String getMessage() -> getMessage
org.jf.smali.SmaliMethodParameter -> org.c.c.g:
    int register -> a
    java.lang.String type -> b
    java.util.Set annotations -> c
    java.lang.String name -> d
    java.util.Comparator COMPARATOR -> e
    50:54:void <init>(int,java.lang.String) -> <init>
    56:56:int getRegister() -> d
    57:57:java.lang.String getType() -> a
    58:58:java.util.Set getAnnotations() -> c
    59:59:java.lang.String getName() -> e
    60:60:java.lang.String getSignature() -> b
    62:62:void <clinit>() -> <clinit>
org.jf.smali.SmaliMethodParameter$1 -> org.c.c.h:
    62:62:void <init>() -> <init>
    64:64:int compare(org.jf.smali.WithRegister,org.jf.smali.WithRegister) -> a
    62:62:int compare(java.lang.Object,java.lang.Object) -> compare
org.jf.smali.WithRegister -> org.c.c.i:
    int getRegister() -> d
org.jf.smali.smaliFlexLexer -> org.c.c.j:
    int[] ZZ_LEXSTATE -> a
    char[] ZZ_CMAP -> b
    int[] ZZ_ACTION -> c
    int[] ZZ_ROWMAP -> d
    int[] ZZ_TRANS -> e
    java.lang.String[] ZZ_ERROR_MSG -> f
    int[] ZZ_ATTRIBUTE -> g
    java.io.Reader zzReader -> h
    int zzState -> i
    int zzLexicalState -> j
    char[] zzBuffer -> k
    int zzMarkedPos -> l
    int zzCurrentPos -> m
    int zzStartRead -> n
    int zzEndRead -> o
    int yyline -> p
    int yychar -> q
    int yycolumn -> r
    boolean zzAtBOL -> s
    boolean zzAtEOF -> t
    int zzFinalHighSurrogate -> u
    java.lang.StringBuffer sb -> v
    java.lang.String stringOrCharError -> w
    int stringStartLine -> x
    int stringStartCol -> y
    int stringStartChar -> z
    int lexerErrors -> A
    java.io.File sourceFile -> B
    boolean suppressErrors -> C
    123:126:int[] zzUnpackAction() -> i
    130:138:int zzUnpackAction(java.lang.String,int,int[]) -> a
    302:305:int[] zzUnpackRowMap() -> j
    309:316:int zzUnpackRowMap(java.lang.String,int,int[]) -> b
    2808:2811:int[] zzUnpackTrans() -> k
    2815:2824:int zzUnpackTrans(java.lang.String,int,int[]) -> c
    2872:2875:int[] zzUnpackAttribute() -> l
    2879:2887:int zzUnpackAttribute(java.lang.String,int,int[]) -> d
    2962:2975:org.antlr.runtime.Token nextToken() -> a
    2988:2988:int getLine() -> d
    2992:2992:int getColumn() -> e
    3000:3001:void setSourceFile(java.io.File) -> a
    3004:3010:java.lang.String getSourceName() -> b
    3015:3015:int getNumberOfSyntaxErrors() -> c
    3019:3028:org.antlr.runtime.Token newToken(int,java.lang.String,boolean) -> a
    3036:3036:org.antlr.runtime.Token newToken(int,boolean) -> a
    3040:3040:org.antlr.runtime.Token newToken(int) -> c
    3044:3051:org.antlr.runtime.Token invalidToken(java.lang.String,java.lang.String) -> a
    3055:3055:org.antlr.runtime.Token invalidToken(java.lang.String) -> a
    3059:3065:void beginStringOrChar(int) -> d
    3068:3079:org.antlr.runtime.Token endStringOrChar(int) -> e
    3083:3086:void setStringOrCharError(java.lang.String) -> b
    3089:3096:org.antlr.runtime.Token invalidStringOrChar(java.lang.String) -> c
    3100:3100:java.lang.String getErrorHeader(org.jf.smali.InvalidToken) -> a
    2897:3125:void <init>(java.io.Reader) -> <init>
    3135:3143:char[] zzUnpackCMap(java.lang.String) -> d
    3157:3205:boolean zzRefill() -> m
    3262:3263:void yybegin(int) -> a
    3270:3270:java.lang.String yytext() -> f
    3294:3294:int yylength() -> g
    3315:3321:void zzScanError(int) -> f
    3334:3338:void yypushback(int) -> b
    3355:4096:org.antlr.runtime.Token yylex() -> h
    38:2843:void <clinit>() -> <clinit>
org.jf.smali.smaliParser -> org.c.c.k:
    java.lang.String[] tokenNames -> c
    org.antlr.runtime.tree.TreeAdaptor adaptor -> d
    boolean verboseErrors -> jC
    boolean allowOdex -> jD
    int apiLevel -> jE
    org.jf.dexlib2.Opcodes opcodes -> jF
    java.util.Stack smali_file_stack -> e
    java.util.Stack statements_and_directives_stack -> f
    org.jf.smali.smaliParser$DFA30 dfa30 -> g
    org.jf.smali.smaliParser$DFA38 dfa38 -> h
    org.jf.smali.smaliParser$DFA40 dfa40 -> i
    java.lang.String[] DFA30_transitionS -> j
    short[] DFA30_eot -> k
    short[] DFA30_eof -> l
    char[] DFA30_min -> m
    char[] DFA30_max -> n
    short[] DFA30_accept -> o
    short[] DFA30_special -> p
    short[][] DFA30_transition -> q
    java.lang.String[] DFA38_transitionS -> r
    short[] DFA38_eot -> s
    short[] DFA38_eof -> t
    char[] DFA38_min -> u
    char[] DFA38_max -> v
    short[] DFA38_accept -> w
    short[] DFA38_special -> x
    short[][] DFA38_transition -> y
    java.lang.String[] DFA40_transitionS -> z
    short[] DFA40_eot -> A
    short[] DFA40_eof -> B
    char[] DFA40_min -> C
    char[] DFA40_max -> D
    short[] DFA40_accept -> E
    short[] DFA40_special -> F
    short[][] DFA40_transition -> G
    org.antlr.runtime.BitSet FOLLOW_class_spec_in_smali_file1075 -> H
    org.antlr.runtime.BitSet FOLLOW_super_spec_in_smali_file1086 -> I
    org.antlr.runtime.BitSet FOLLOW_implements_spec_in_smali_file1094 -> J
    org.antlr.runtime.BitSet FOLLOW_source_spec_in_smali_file1103 -> K
    org.antlr.runtime.BitSet FOLLOW_method_in_smali_file1111 -> L
    org.antlr.runtime.BitSet FOLLOW_field_in_smali_file1117 -> M
    org.antlr.runtime.BitSet FOLLOW_annotation_in_smali_file1123 -> N
    org.antlr.runtime.BitSet FOLLOW_EOF_in_smali_file1134 -> O
    org.antlr.runtime.BitSet FOLLOW_CLASS_DIRECTIVE_in_class_spec1221 -> P
    org.antlr.runtime.BitSet FOLLOW_access_list_in_class_spec1223 -> Q
    org.antlr.runtime.BitSet FOLLOW_CLASS_DESCRIPTOR_in_class_spec1225 -> R
    org.antlr.runtime.BitSet FOLLOW_SUPER_DIRECTIVE_in_super_spec1243 -> S
    org.antlr.runtime.BitSet FOLLOW_CLASS_DESCRIPTOR_in_super_spec1245 -> T
    org.antlr.runtime.BitSet FOLLOW_IMPLEMENTS_DIRECTIVE_in_implements_spec1264 -> U
    org.antlr.runtime.BitSet FOLLOW_CLASS_DESCRIPTOR_in_implements_spec1266 -> V
    org.antlr.runtime.BitSet FOLLOW_SOURCE_DIRECTIVE_in_source_spec1285 -> W
    org.antlr.runtime.BitSet FOLLOW_STRING_LITERAL_in_source_spec1287 -> X
    org.antlr.runtime.BitSet FOLLOW_ACCESS_SPEC_in_access_list1306 -> Y
    org.antlr.runtime.BitSet FOLLOW_FIELD_DIRECTIVE_in_field1337 -> Z
    org.antlr.runtime.BitSet FOLLOW_access_list_in_field1339 -> aa
    org.antlr.runtime.BitSet FOLLOW_member_name_in_field1341 -> ab
    org.antlr.runtime.BitSet FOLLOW_COLON_in_field1343 -> ac
    org.antlr.runtime.BitSet FOLLOW_nonvoid_type_descriptor_in_field1345 -> ad
    org.antlr.runtime.BitSet FOLLOW_EQUAL_in_field1348 -> ae
    org.antlr.runtime.BitSet FOLLOW_literal_in_field1350 -> af
    org.antlr.runtime.BitSet FOLLOW_annotation_in_field1363 -> ag
    org.antlr.runtime.BitSet FOLLOW_END_FIELD_DIRECTIVE_in_field1377 -> ah
    org.antlr.runtime.BitSet FOLLOW_METHOD_DIRECTIVE_in_method1488 -> ai
    org.antlr.runtime.BitSet FOLLOW_access_list_in_method1490 -> aj
    org.antlr.runtime.BitSet FOLLOW_member_name_in_method1492 -> ak
    org.antlr.runtime.BitSet FOLLOW_method_prototype_in_method1494 -> al
    org.antlr.runtime.BitSet FOLLOW_statements_and_directives_in_method1496 -> am
    org.antlr.runtime.BitSet FOLLOW_END_METHOD_DIRECTIVE_in_method1502 -> an
    org.antlr.runtime.BitSet FOLLOW_ordered_method_item_in_statements_and_directives1547 -> ao
    org.antlr.runtime.BitSet FOLLOW_registers_directive_in_statements_and_directives1555 -> ap
    org.antlr.runtime.BitSet FOLLOW_catch_directive_in_statements_and_directives1563 -> aq
    org.antlr.runtime.BitSet FOLLOW_catchall_directive_in_statements_and_directives1571 -> ar
    org.antlr.runtime.BitSet FOLLOW_parameter_directive_in_statements_and_directives1579 -> as
    org.antlr.runtime.BitSet FOLLOW_annotation_in_statements_and_directives1587 -> at
    org.antlr.runtime.BitSet FOLLOW_label_in_ordered_method_item1672 -> au
    org.antlr.runtime.BitSet FOLLOW_instruction_in_ordered_method_item1678 -> av
    org.antlr.runtime.BitSet FOLLOW_debug_directive_in_ordered_method_item1684 -> aw
    org.antlr.runtime.BitSet FOLLOW_REGISTERS_DIRECTIVE_in_registers_directive1704 -> ax
    org.antlr.runtime.BitSet FOLLOW_integral_literal_in_registers_directive1708 -> ay
    org.antlr.runtime.BitSet FOLLOW_LOCALS_DIRECTIVE_in_registers_directive1728 -> az
    org.antlr.runtime.BitSet FOLLOW_integral_literal_in_registers_directive1732 -> aA
    org.antlr.runtime.BitSet FOLLOW_PARAM_LIST_OR_ID_PRIMITIVE_TYPE_in_param_list_or_id1764 -> aB
    org.antlr.runtime.BitSet FOLLOW_SIMPLE_NAME_in_simple_name1777 -> aC
    org.antlr.runtime.BitSet FOLLOW_ACCESS_SPEC_in_simple_name1783 -> aD
    org.antlr.runtime.BitSet FOLLOW_VERIFICATION_ERROR_TYPE_in_simple_name1794 -> aE
    org.antlr.runtime.BitSet FOLLOW_POSITIVE_INTEGER_LITERAL_in_simple_name1805 -> aF
    org.antlr.runtime.BitSet FOLLOW_NEGATIVE_INTEGER_LITERAL_in_simple_name1816 -> aG
    org.antlr.runtime.BitSet FOLLOW_FLOAT_LITERAL_OR_ID_in_simple_name1827 -> aH
    org.antlr.runtime.BitSet FOLLOW_DOUBLE_LITERAL_OR_ID_in_simple_name1838 -> aI
    org.antlr.runtime.BitSet FOLLOW_BOOL_LITERAL_in_simple_name1849 -> aJ
    org.antlr.runtime.BitSet FOLLOW_NULL_LITERAL_in_simple_name1860 -> aK
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_simple_name1871 -> aL
    org.antlr.runtime.BitSet FOLLOW_param_list_or_id_in_simple_name1882 -> aM
    org.antlr.runtime.BitSet FOLLOW_PRIMITIVE_TYPE_in_simple_name1892 -> aN
    org.antlr.runtime.BitSet FOLLOW_VOID_TYPE_in_simple_name1903 -> aO
    org.antlr.runtime.BitSet FOLLOW_ANNOTATION_VISIBILITY_in_simple_name1914 -> aP
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT10t_in_simple_name1925 -> aQ
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT10x_in_simple_name1936 -> aR
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT10x_ODEX_in_simple_name1947 -> aS
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT11x_in_simple_name1958 -> aT
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT12x_OR_ID_in_simple_name1969 -> aU
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT21c_FIELD_in_simple_name1980 -> aV
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT21c_FIELD_ODEX_in_simple_name1991 -> aW
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT21c_STRING_in_simple_name2002 -> aX
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT21c_TYPE_in_simple_name2013 -> aY
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT21t_in_simple_name2024 -> aZ
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT22c_FIELD_in_simple_name2035 -> ba
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT22c_FIELD_ODEX_in_simple_name2046 -> bb
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT22c_TYPE_in_simple_name2057 -> bc
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT22cs_FIELD_in_simple_name2068 -> bd
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT22s_OR_ID_in_simple_name2079 -> be
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT22t_in_simple_name2090 -> bf
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT23x_in_simple_name2101 -> bg
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT31i_OR_ID_in_simple_name2112 -> bh
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT31t_in_simple_name2123 -> bi
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT35c_METHOD_in_simple_name2134 -> bj
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT35c_METHOD_ODEX_in_simple_name2145 -> bk
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT35c_TYPE_in_simple_name2156 -> bl
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT35mi_METHOD_in_simple_name2167 -> bm
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT35ms_METHOD_in_simple_name2178 -> bn
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT45cc_METHOD_in_simple_name2189 -> bo
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT4rcc_METHOD_in_simple_name2200 -> bp
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT51l_in_simple_name2211 -> bq
    org.antlr.runtime.BitSet FOLLOW_simple_name_in_member_name2226 -> br
    org.antlr.runtime.BitSet FOLLOW_MEMBER_NAME_in_member_name2232 -> bs
    org.antlr.runtime.BitSet FOLLOW_OPEN_PAREN_in_method_prototype2247 -> bt
    org.antlr.runtime.BitSet FOLLOW_param_list_in_method_prototype2249 -> bu
    org.antlr.runtime.BitSet FOLLOW_CLOSE_PAREN_in_method_prototype2251 -> bv
    org.antlr.runtime.BitSet FOLLOW_type_descriptor_in_method_prototype2253 -> bw
    org.antlr.runtime.BitSet FOLLOW_PARAM_LIST_OR_ID_PRIMITIVE_TYPE_in_param_list_or_id_primitive_type2283 -> bx
    org.antlr.runtime.BitSet FOLLOW_param_list_or_id_primitive_type_in_param_list2298 -> by
    org.antlr.runtime.BitSet FOLLOW_nonvoid_type_descriptor_in_param_list2305 -> bz
    org.antlr.runtime.BitSet FOLLOW_ARRAY_TYPE_PREFIX_in_array_descriptor2316 -> bA
    org.antlr.runtime.BitSet FOLLOW_set_in_array_descriptor2318 -> bB
    org.antlr.runtime.BitSet FOLLOW_VOID_TYPE_in_type_descriptor2334 -> bC
    org.antlr.runtime.BitSet FOLLOW_PRIMITIVE_TYPE_in_type_descriptor2340 -> bD
    org.antlr.runtime.BitSet FOLLOW_CLASS_DESCRIPTOR_in_type_descriptor2346 -> bE
    org.antlr.runtime.BitSet FOLLOW_array_descriptor_in_type_descriptor2352 -> bF
    org.antlr.runtime.BitSet FOLLOW_PRIMITIVE_TYPE_in_nonvoid_type_descriptor2362 -> bG
    org.antlr.runtime.BitSet FOLLOW_CLASS_DESCRIPTOR_in_nonvoid_type_descriptor2368 -> bH
    org.antlr.runtime.BitSet FOLLOW_array_descriptor_in_nonvoid_type_descriptor2374 -> bI
    org.antlr.runtime.BitSet FOLLOW_CLASS_DESCRIPTOR_in_reference_type_descriptor2384 -> bJ
    org.antlr.runtime.BitSet FOLLOW_array_descriptor_in_reference_type_descriptor2390 -> bK
    org.antlr.runtime.BitSet FOLLOW_POSITIVE_INTEGER_LITERAL_in_integer_literal2400 -> bL
    org.antlr.runtime.BitSet FOLLOW_NEGATIVE_INTEGER_LITERAL_in_integer_literal2411 -> bM
    org.antlr.runtime.BitSet FOLLOW_FLOAT_LITERAL_OR_ID_in_float_literal2426 -> bN
    org.antlr.runtime.BitSet FOLLOW_FLOAT_LITERAL_in_float_literal2437 -> bO
    org.antlr.runtime.BitSet FOLLOW_DOUBLE_LITERAL_OR_ID_in_double_literal2447 -> bP
    org.antlr.runtime.BitSet FOLLOW_DOUBLE_LITERAL_in_double_literal2458 -> bQ
    org.antlr.runtime.BitSet FOLLOW_LONG_LITERAL_in_literal2468 -> bR
    org.antlr.runtime.BitSet FOLLOW_integer_literal_in_literal2474 -> bS
    org.antlr.runtime.BitSet FOLLOW_SHORT_LITERAL_in_literal2480 -> bT
    org.antlr.runtime.BitSet FOLLOW_BYTE_LITERAL_in_literal2486 -> bU
    org.antlr.runtime.BitSet FOLLOW_float_literal_in_literal2492 -> bV
    org.antlr.runtime.BitSet FOLLOW_double_literal_in_literal2498 -> bW
    org.antlr.runtime.BitSet FOLLOW_CHAR_LITERAL_in_literal2504 -> bX
    org.antlr.runtime.BitSet FOLLOW_STRING_LITERAL_in_literal2510 -> bY
    org.antlr.runtime.BitSet FOLLOW_BOOL_LITERAL_in_literal2516 -> bZ
    org.antlr.runtime.BitSet FOLLOW_NULL_LITERAL_in_literal2522 -> ca
    org.antlr.runtime.BitSet FOLLOW_array_literal_in_literal2528 -> cb
    org.antlr.runtime.BitSet FOLLOW_subannotation_in_literal2534 -> cc
    org.antlr.runtime.BitSet FOLLOW_type_field_method_literal_in_literal2540 -> cd
    org.antlr.runtime.BitSet FOLLOW_enum_literal_in_literal2546 -> ce
    org.antlr.runtime.BitSet FOLLOW_integer_literal_in_parsed_integer_literal2559 -> cf
    org.antlr.runtime.BitSet FOLLOW_LONG_LITERAL_in_integral_literal2571 -> cg
    org.antlr.runtime.BitSet FOLLOW_integer_literal_in_integral_literal2577 -> ch
    org.antlr.runtime.BitSet FOLLOW_SHORT_LITERAL_in_integral_literal2583 -> ci
    org.antlr.runtime.BitSet FOLLOW_CHAR_LITERAL_in_integral_literal2589 -> cj
    org.antlr.runtime.BitSet FOLLOW_BYTE_LITERAL_in_integral_literal2595 -> ck
    org.antlr.runtime.BitSet FOLLOW_LONG_LITERAL_in_fixed_32bit_literal2605 -> cl
    org.antlr.runtime.BitSet FOLLOW_integer_literal_in_fixed_32bit_literal2611 -> cm
    org.antlr.runtime.BitSet FOLLOW_SHORT_LITERAL_in_fixed_32bit_literal2617 -> cn
    org.antlr.runtime.BitSet FOLLOW_BYTE_LITERAL_in_fixed_32bit_literal2623 -> co
    org.antlr.runtime.BitSet FOLLOW_float_literal_in_fixed_32bit_literal2629 -> cp
    org.antlr.runtime.BitSet FOLLOW_CHAR_LITERAL_in_fixed_32bit_literal2635 -> cq
    org.antlr.runtime.BitSet FOLLOW_BOOL_LITERAL_in_fixed_32bit_literal2641 -> cr
    org.antlr.runtime.BitSet FOLLOW_integer_literal_in_fixed_literal2651 -> cs
    org.antlr.runtime.BitSet FOLLOW_LONG_LITERAL_in_fixed_literal2657 -> ct
    org.antlr.runtime.BitSet FOLLOW_SHORT_LITERAL_in_fixed_literal2663 -> cu
    org.antlr.runtime.BitSet FOLLOW_BYTE_LITERAL_in_fixed_literal2669 -> cv
    org.antlr.runtime.BitSet FOLLOW_float_literal_in_fixed_literal2675 -> cw
    org.antlr.runtime.BitSet FOLLOW_double_literal_in_fixed_literal2681 -> cx
    org.antlr.runtime.BitSet FOLLOW_CHAR_LITERAL_in_fixed_literal2687 -> cy
    org.antlr.runtime.BitSet FOLLOW_BOOL_LITERAL_in_fixed_literal2693 -> cz
    org.antlr.runtime.BitSet FOLLOW_OPEN_BRACE_in_array_literal2703 -> cA
    org.antlr.runtime.BitSet FOLLOW_literal_in_array_literal2706 -> cB
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_array_literal2709 -> cC
    org.antlr.runtime.BitSet FOLLOW_literal_in_array_literal2711 -> cD
    org.antlr.runtime.BitSet FOLLOW_CLOSE_BRACE_in_array_literal2719 -> cE
    org.antlr.runtime.BitSet FOLLOW_simple_name_in_annotation_element2743 -> cF
    org.antlr.runtime.BitSet FOLLOW_EQUAL_in_annotation_element2745 -> cG
    org.antlr.runtime.BitSet FOLLOW_literal_in_annotation_element2747 -> cH
    org.antlr.runtime.BitSet FOLLOW_ANNOTATION_DIRECTIVE_in_annotation2772 -> cI
    org.antlr.runtime.BitSet FOLLOW_ANNOTATION_VISIBILITY_in_annotation2774 -> cJ
    org.antlr.runtime.BitSet FOLLOW_CLASS_DESCRIPTOR_in_annotation2776 -> cK
    org.antlr.runtime.BitSet FOLLOW_annotation_element_in_annotation2782 -> cL
    org.antlr.runtime.BitSet FOLLOW_END_ANNOTATION_DIRECTIVE_in_annotation2785 -> cM
    org.antlr.runtime.BitSet FOLLOW_SUBANNOTATION_DIRECTIVE_in_subannotation2818 -> cN
    org.antlr.runtime.BitSet FOLLOW_CLASS_DESCRIPTOR_in_subannotation2820 -> cO
    org.antlr.runtime.BitSet FOLLOW_annotation_element_in_subannotation2822 -> cP
    org.antlr.runtime.BitSet FOLLOW_END_SUBANNOTATION_DIRECTIVE_in_subannotation2825 -> cQ
    org.antlr.runtime.BitSet FOLLOW_ENUM_DIRECTIVE_in_enum_literal2852 -> cR
    org.antlr.runtime.BitSet FOLLOW_field_reference_in_enum_literal2854 -> cS
    org.antlr.runtime.BitSet FOLLOW_reference_type_descriptor_in_type_field_method_literal2874 -> cT
    org.antlr.runtime.BitSet FOLLOW_reference_type_descriptor_in_type_field_method_literal2883 -> cU
    org.antlr.runtime.BitSet FOLLOW_ARROW_in_type_field_method_literal2885 -> cV
    org.antlr.runtime.BitSet FOLLOW_member_name_in_type_field_method_literal2897 -> cW
    org.antlr.runtime.BitSet FOLLOW_COLON_in_type_field_method_literal2899 -> cX
    org.antlr.runtime.BitSet FOLLOW_nonvoid_type_descriptor_in_type_field_method_literal2901 -> cY
    org.antlr.runtime.BitSet FOLLOW_member_name_in_type_field_method_literal2924 -> cZ
    org.antlr.runtime.BitSet FOLLOW_method_prototype_in_type_field_method_literal2926 -> da
    org.antlr.runtime.BitSet FOLLOW_PRIMITIVE_TYPE_in_type_field_method_literal2959 -> db
    org.antlr.runtime.BitSet FOLLOW_VOID_TYPE_in_type_field_method_literal2965 -> dc
    org.antlr.runtime.BitSet FOLLOW_reference_type_descriptor_in_method_reference2976 -> dd
    org.antlr.runtime.BitSet FOLLOW_ARROW_in_method_reference2978 -> de
    org.antlr.runtime.BitSet FOLLOW_member_name_in_method_reference2982 -> df
    org.antlr.runtime.BitSet FOLLOW_method_prototype_in_method_reference2984 -> dg
    org.antlr.runtime.BitSet FOLLOW_reference_type_descriptor_in_field_reference3006 -> dh
    org.antlr.runtime.BitSet FOLLOW_ARROW_in_field_reference3008 -> di
    org.antlr.runtime.BitSet FOLLOW_member_name_in_field_reference3012 -> dj
    org.antlr.runtime.BitSet FOLLOW_COLON_in_field_reference3014 -> dk
    org.antlr.runtime.BitSet FOLLOW_nonvoid_type_descriptor_in_field_reference3016 -> dl
    org.antlr.runtime.BitSet FOLLOW_COLON_in_label3037 -> dm
    org.antlr.runtime.BitSet FOLLOW_simple_name_in_label3039 -> dn
    org.antlr.runtime.BitSet FOLLOW_COLON_in_label_ref3058 -> do
    org.antlr.runtime.BitSet FOLLOW_simple_name_in_label_ref3060 -> dp
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_register_list3074 -> dq
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_register_list3077 -> dr
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_register_list3079 -> ds
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_register_range3114 -> dt
    org.antlr.runtime.BitSet FOLLOW_DOTDOT_in_register_range3117 -> du
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_register_range3121 -> dv
    org.antlr.runtime.BitSet FOLLOW_CLASS_DESCRIPTOR_in_verification_error_reference3150 -> dw
    org.antlr.runtime.BitSet FOLLOW_field_reference_in_verification_error_reference3154 -> dx
    org.antlr.runtime.BitSet FOLLOW_method_reference_in_verification_error_reference3158 -> dy
    org.antlr.runtime.BitSet FOLLOW_CATCH_DIRECTIVE_in_catch_directive3168 -> dz
    org.antlr.runtime.BitSet FOLLOW_nonvoid_type_descriptor_in_catch_directive3170 -> dA
    org.antlr.runtime.BitSet FOLLOW_OPEN_BRACE_in_catch_directive3172 -> dB
    org.antlr.runtime.BitSet FOLLOW_label_ref_in_catch_directive3176 -> dC
    org.antlr.runtime.BitSet FOLLOW_DOTDOT_in_catch_directive3178 -> dD
    org.antlr.runtime.BitSet FOLLOW_label_ref_in_catch_directive3182 -> dE
    org.antlr.runtime.BitSet FOLLOW_CLOSE_BRACE_in_catch_directive3184 -> dF
    org.antlr.runtime.BitSet FOLLOW_label_ref_in_catch_directive3188 -> dG
    org.antlr.runtime.BitSet FOLLOW_CATCHALL_DIRECTIVE_in_catchall_directive3220 -> dH
    org.antlr.runtime.BitSet FOLLOW_OPEN_BRACE_in_catchall_directive3222 -> dI
    org.antlr.runtime.BitSet FOLLOW_label_ref_in_catchall_directive3226 -> dJ
    org.antlr.runtime.BitSet FOLLOW_DOTDOT_in_catchall_directive3228 -> dK
    org.antlr.runtime.BitSet FOLLOW_label_ref_in_catchall_directive3232 -> dL
    org.antlr.runtime.BitSet FOLLOW_CLOSE_BRACE_in_catchall_directive3234 -> dM
    org.antlr.runtime.BitSet FOLLOW_label_ref_in_catchall_directive3238 -> dN
    org.antlr.runtime.BitSet FOLLOW_PARAMETER_DIRECTIVE_in_parameter_directive3277 -> dO
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_parameter_directive3279 -> dP
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_parameter_directive3282 -> dQ
    org.antlr.runtime.BitSet FOLLOW_STRING_LITERAL_in_parameter_directive3284 -> dR
    org.antlr.runtime.BitSet FOLLOW_annotation_in_parameter_directive3295 -> dS
    org.antlr.runtime.BitSet FOLLOW_END_PARAMETER_DIRECTIVE_in_parameter_directive3308 -> dT
    org.antlr.runtime.BitSet FOLLOW_line_directive_in_debug_directive3381 -> dU
    org.antlr.runtime.BitSet FOLLOW_local_directive_in_debug_directive3387 -> dV
    org.antlr.runtime.BitSet FOLLOW_end_local_directive_in_debug_directive3393 -> dW
    org.antlr.runtime.BitSet FOLLOW_restart_local_directive_in_debug_directive3399 -> dX
    org.antlr.runtime.BitSet FOLLOW_prologue_directive_in_debug_directive3405 -> dY
    org.antlr.runtime.BitSet FOLLOW_epilogue_directive_in_debug_directive3411 -> dZ
    org.antlr.runtime.BitSet FOLLOW_source_directive_in_debug_directive3417 -> ea
    org.antlr.runtime.BitSet FOLLOW_LINE_DIRECTIVE_in_line_directive3427 -> eb
    org.antlr.runtime.BitSet FOLLOW_integral_literal_in_line_directive3429 -> ec
    org.antlr.runtime.BitSet FOLLOW_LOCAL_DIRECTIVE_in_local_directive3452 -> ed
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_local_directive3454 -> ee
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_local_directive3457 -> ef
    org.antlr.runtime.BitSet FOLLOW_NULL_LITERAL_in_local_directive3460 -> eg
    org.antlr.runtime.BitSet FOLLOW_STRING_LITERAL_in_local_directive3466 -> eh
    org.antlr.runtime.BitSet FOLLOW_COLON_in_local_directive3469 -> ei
    org.antlr.runtime.BitSet FOLLOW_VOID_TYPE_in_local_directive3472 -> ej
    org.antlr.runtime.BitSet FOLLOW_nonvoid_type_descriptor_in_local_directive3476 -> ek
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_local_directive3510 -> el
    org.antlr.runtime.BitSet FOLLOW_STRING_LITERAL_in_local_directive3514 -> em
    org.antlr.runtime.BitSet FOLLOW_END_LOCAL_DIRECTIVE_in_end_local_directive3556 -> en
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_end_local_directive3558 -> eo
    org.antlr.runtime.BitSet FOLLOW_RESTART_LOCAL_DIRECTIVE_in_restart_local_directive3581 -> ep
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_restart_local_directive3583 -> eq
    org.antlr.runtime.BitSet FOLLOW_PROLOGUE_DIRECTIVE_in_prologue_directive3606 -> er
    org.antlr.runtime.BitSet FOLLOW_EPILOGUE_DIRECTIVE_in_epilogue_directive3627 -> es
    org.antlr.runtime.BitSet FOLLOW_SOURCE_DIRECTIVE_in_source_directive3648 -> et
    org.antlr.runtime.BitSet FOLLOW_STRING_LITERAL_in_source_directive3650 -> eu
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT12x_in_instruction_format12x3675 -> ev
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT12x_OR_ID_in_instruction_format12x3681 -> ew
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT22s_in_instruction_format22s3696 -> ex
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT22s_OR_ID_in_instruction_format22s3702 -> ey
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT31i_in_instruction_format31i3717 -> ez
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT31i_OR_ID_in_instruction_format31i3723 -> eA
    org.antlr.runtime.BitSet FOLLOW_insn_format10t_in_instruction3740 -> eB
    org.antlr.runtime.BitSet FOLLOW_insn_format10x_in_instruction3746 -> eC
    org.antlr.runtime.BitSet FOLLOW_insn_format10x_odex_in_instruction3752 -> eD
    org.antlr.runtime.BitSet FOLLOW_insn_format11n_in_instruction3758 -> eE
    org.antlr.runtime.BitSet FOLLOW_insn_format11x_in_instruction3764 -> eF
    org.antlr.runtime.BitSet FOLLOW_insn_format12x_in_instruction3770 -> eG
    org.antlr.runtime.BitSet FOLLOW_insn_format20bc_in_instruction3776 -> eH
    org.antlr.runtime.BitSet FOLLOW_insn_format20t_in_instruction3782 -> eI
    org.antlr.runtime.BitSet FOLLOW_insn_format21c_field_in_instruction3788 -> eJ
    org.antlr.runtime.BitSet FOLLOW_insn_format21c_field_odex_in_instruction3794 -> eK
    org.antlr.runtime.BitSet FOLLOW_insn_format21c_string_in_instruction3800 -> eL
    org.antlr.runtime.BitSet FOLLOW_insn_format21c_type_in_instruction3806 -> eM
    org.antlr.runtime.BitSet FOLLOW_insn_format21ih_in_instruction3812 -> eN
    org.antlr.runtime.BitSet FOLLOW_insn_format21lh_in_instruction3818 -> eO
    org.antlr.runtime.BitSet FOLLOW_insn_format21s_in_instruction3824 -> eP
    org.antlr.runtime.BitSet FOLLOW_insn_format21t_in_instruction3830 -> eQ
    org.antlr.runtime.BitSet FOLLOW_insn_format22b_in_instruction3836 -> eR
    org.antlr.runtime.BitSet FOLLOW_insn_format22c_field_in_instruction3842 -> eS
    org.antlr.runtime.BitSet FOLLOW_insn_format22c_field_odex_in_instruction3848 -> eT
    org.antlr.runtime.BitSet FOLLOW_insn_format22c_type_in_instruction3854 -> eU
    org.antlr.runtime.BitSet FOLLOW_insn_format22cs_field_in_instruction3860 -> eV
    org.antlr.runtime.BitSet FOLLOW_insn_format22s_in_instruction3866 -> eW
    org.antlr.runtime.BitSet FOLLOW_insn_format22t_in_instruction3872 -> eX
    org.antlr.runtime.BitSet FOLLOW_insn_format22x_in_instruction3878 -> eY
    org.antlr.runtime.BitSet FOLLOW_insn_format23x_in_instruction3884 -> eZ
    org.antlr.runtime.BitSet FOLLOW_insn_format30t_in_instruction3890 -> fa
    org.antlr.runtime.BitSet FOLLOW_insn_format31c_in_instruction3896 -> fb
    org.antlr.runtime.BitSet FOLLOW_insn_format31i_in_instruction3902 -> fc
    org.antlr.runtime.BitSet FOLLOW_insn_format31t_in_instruction3908 -> fd
    org.antlr.runtime.BitSet FOLLOW_insn_format32x_in_instruction3914 -> fe
    org.antlr.runtime.BitSet FOLLOW_insn_format35c_method_in_instruction3920 -> ff
    org.antlr.runtime.BitSet FOLLOW_insn_format35c_type_in_instruction3926 -> fg
    org.antlr.runtime.BitSet FOLLOW_insn_format35c_method_odex_in_instruction3932 -> fh
    org.antlr.runtime.BitSet FOLLOW_insn_format35mi_method_in_instruction3938 -> fi
    org.antlr.runtime.BitSet FOLLOW_insn_format35ms_method_in_instruction3944 -> fj
    org.antlr.runtime.BitSet FOLLOW_insn_format3rc_method_in_instruction3950 -> fk
    org.antlr.runtime.BitSet FOLLOW_insn_format3rc_method_odex_in_instruction3956 -> fl
    org.antlr.runtime.BitSet FOLLOW_insn_format3rc_type_in_instruction3962 -> fm
    org.antlr.runtime.BitSet FOLLOW_insn_format3rmi_method_in_instruction3968 -> fn
    org.antlr.runtime.BitSet FOLLOW_insn_format3rms_method_in_instruction3974 -> fo
    org.antlr.runtime.BitSet FOLLOW_insn_format45cc_method_in_instruction3980 -> fp
    org.antlr.runtime.BitSet FOLLOW_insn_format4rcc_method_in_instruction3986 -> fq
    org.antlr.runtime.BitSet FOLLOW_insn_format51l_in_instruction3992 -> fr
    org.antlr.runtime.BitSet FOLLOW_insn_array_data_directive_in_instruction3998 -> fs
    org.antlr.runtime.BitSet FOLLOW_insn_packed_switch_directive_in_instruction4004 -> ft
    org.antlr.runtime.BitSet FOLLOW_insn_sparse_switch_directive_in_instruction4010 -> fu
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT10t_in_insn_format10t4030 -> fv
    org.antlr.runtime.BitSet FOLLOW_label_ref_in_insn_format10t4032 -> fw
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT10x_in_insn_format10x4062 -> fx
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT10x_ODEX_in_insn_format10x_odex4090 -> fy
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT11n_in_insn_format11n4111 -> fz
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format11n4113 -> fA
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format11n4115 -> fB
    org.antlr.runtime.BitSet FOLLOW_integral_literal_in_insn_format11n4117 -> fC
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT11x_in_insn_format11x4149 -> fD
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format11x4151 -> fE
    org.antlr.runtime.BitSet FOLLOW_instruction_format12x_in_insn_format12x4181 -> fF
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format12x4183 -> fG
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format12x4185 -> fH
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format12x4187 -> fI
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT20bc_in_insn_format20bc4219 -> fJ
    org.antlr.runtime.BitSet FOLLOW_VERIFICATION_ERROR_TYPE_in_insn_format20bc4221 -> fK
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format20bc4223 -> fL
    org.antlr.runtime.BitSet FOLLOW_verification_error_reference_in_insn_format20bc4225 -> fM
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT20t_in_insn_format20t4262 -> fN
    org.antlr.runtime.BitSet FOLLOW_label_ref_in_insn_format20t4264 -> fO
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT21c_FIELD_in_insn_format21c_field4294 -> fP
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format21c_field4296 -> fQ
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format21c_field4298 -> fR
    org.antlr.runtime.BitSet FOLLOW_field_reference_in_insn_format21c_field4300 -> fS
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT21c_FIELD_ODEX_in_insn_format21c_field_odex4332 -> fT
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format21c_field_odex4334 -> fU
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format21c_field_odex4336 -> fV
    org.antlr.runtime.BitSet FOLLOW_field_reference_in_insn_format21c_field_odex4338 -> fW
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT21c_STRING_in_insn_format21c_string4376 -> fX
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format21c_string4378 -> fY
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format21c_string4380 -> fZ
    org.antlr.runtime.BitSet FOLLOW_STRING_LITERAL_in_insn_format21c_string4382 -> ga
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT21c_TYPE_in_insn_format21c_type4414 -> gb
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format21c_type4416 -> gc
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format21c_type4418 -> gd
    org.antlr.runtime.BitSet FOLLOW_nonvoid_type_descriptor_in_insn_format21c_type4420 -> ge
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT21ih_in_insn_format21ih4452 -> gf
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format21ih4454 -> gg
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format21ih4456 -> gh
    org.antlr.runtime.BitSet FOLLOW_fixed_32bit_literal_in_insn_format21ih4458 -> gi
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT21lh_in_insn_format21lh4490 -> gj
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format21lh4492 -> gk
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format21lh4494 -> gl
    org.antlr.runtime.BitSet FOLLOW_fixed_32bit_literal_in_insn_format21lh4496 -> gm
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT21s_in_insn_format21s4528 -> gn
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format21s4530 -> go
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format21s4532 -> gp
    org.antlr.runtime.BitSet FOLLOW_integral_literal_in_insn_format21s4534 -> gq
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT21t_in_insn_format21t4566 -> gr
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format21t4568 -> gs
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format21t4570 -> gt
    org.antlr.runtime.BitSet FOLLOW_label_ref_in_insn_format21t4572 -> gu
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT22b_in_insn_format22b4604 -> gv
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format22b4606 -> gw
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format22b4608 -> gx
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format22b4610 -> gy
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format22b4612 -> gz
    org.antlr.runtime.BitSet FOLLOW_integral_literal_in_insn_format22b4614 -> gA
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT22c_FIELD_in_insn_format22c_field4648 -> gB
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format22c_field4650 -> gC
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format22c_field4652 -> gD
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format22c_field4654 -> gE
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format22c_field4656 -> gF
    org.antlr.runtime.BitSet FOLLOW_field_reference_in_insn_format22c_field4658 -> gG
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT22c_FIELD_ODEX_in_insn_format22c_field_odex4692 -> gH
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format22c_field_odex4694 -> gI
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format22c_field_odex4696 -> gJ
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format22c_field_odex4698 -> gK
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format22c_field_odex4700 -> gL
    org.antlr.runtime.BitSet FOLLOW_field_reference_in_insn_format22c_field_odex4702 -> gM
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT22c_TYPE_in_insn_format22c_type4742 -> gN
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format22c_type4744 -> gO
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format22c_type4746 -> gP
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format22c_type4748 -> gQ
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format22c_type4750 -> gR
    org.antlr.runtime.BitSet FOLLOW_nonvoid_type_descriptor_in_insn_format22c_type4752 -> gS
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT22cs_FIELD_in_insn_format22cs_field4786 -> gT
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format22cs_field4788 -> gU
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format22cs_field4790 -> gV
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format22cs_field4792 -> gW
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format22cs_field4794 -> gX
    org.antlr.runtime.BitSet FOLLOW_FIELD_OFFSET_in_insn_format22cs_field4796 -> gY
    org.antlr.runtime.BitSet FOLLOW_instruction_format22s_in_insn_format22s4817 -> gZ
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format22s4819 -> ha
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format22s4821 -> hb
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format22s4823 -> hc
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format22s4825 -> hd
    org.antlr.runtime.BitSet FOLLOW_integral_literal_in_insn_format22s4827 -> he
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT22t_in_insn_format22t4861 -> hf
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format22t4863 -> hg
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format22t4865 -> hh
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format22t4867 -> hi
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format22t4869 -> hj
    org.antlr.runtime.BitSet FOLLOW_label_ref_in_insn_format22t4871 -> hk
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT22x_in_insn_format22x4905 -> hl
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format22x4907 -> hm
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format22x4909 -> hn
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format22x4911 -> ho
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT23x_in_insn_format23x4943 -> hp
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format23x4945 -> hq
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format23x4947 -> hr
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format23x4949 -> hs
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format23x4951 -> ht
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format23x4953 -> hu
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT30t_in_insn_format30t4987 -> hv
    org.antlr.runtime.BitSet FOLLOW_label_ref_in_insn_format30t4989 -> hw
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT31c_in_insn_format31c5019 -> hx
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format31c5021 -> hy
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format31c5023 -> hz
    org.antlr.runtime.BitSet FOLLOW_STRING_LITERAL_in_insn_format31c5025 -> hA
    org.antlr.runtime.BitSet FOLLOW_instruction_format31i_in_insn_format31i5056 -> hB
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format31i5058 -> hC
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format31i5060 -> hD
    org.antlr.runtime.BitSet FOLLOW_fixed_32bit_literal_in_insn_format31i5062 -> hE
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT31t_in_insn_format31t5094 -> hF
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format31t5096 -> hG
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format31t5098 -> hH
    org.antlr.runtime.BitSet FOLLOW_label_ref_in_insn_format31t5100 -> hI
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT32x_in_insn_format32x5132 -> hJ
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format32x5134 -> hK
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format32x5136 -> hL
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format32x5138 -> hM
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT35c_METHOD_in_insn_format35c_method5170 -> hN
    org.antlr.runtime.BitSet FOLLOW_OPEN_BRACE_in_insn_format35c_method5172 -> hO
    org.antlr.runtime.BitSet FOLLOW_register_list_in_insn_format35c_method5174 -> hP
    org.antlr.runtime.BitSet FOLLOW_CLOSE_BRACE_in_insn_format35c_method5176 -> hQ
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format35c_method5178 -> hR
    org.antlr.runtime.BitSet FOLLOW_method_reference_in_insn_format35c_method5180 -> hS
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT35c_TYPE_in_insn_format35c_type5212 -> hT
    org.antlr.runtime.BitSet FOLLOW_OPEN_BRACE_in_insn_format35c_type5214 -> hU
    org.antlr.runtime.BitSet FOLLOW_register_list_in_insn_format35c_type5216 -> hV
    org.antlr.runtime.BitSet FOLLOW_CLOSE_BRACE_in_insn_format35c_type5218 -> hW
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format35c_type5220 -> hX
    org.antlr.runtime.BitSet FOLLOW_nonvoid_type_descriptor_in_insn_format35c_type5222 -> hY
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT35c_METHOD_ODEX_in_insn_format35c_method_odex5254 -> hZ
    org.antlr.runtime.BitSet FOLLOW_OPEN_BRACE_in_insn_format35c_method_odex5256 -> ia
    org.antlr.runtime.BitSet FOLLOW_register_list_in_insn_format35c_method_odex5258 -> ib
    org.antlr.runtime.BitSet FOLLOW_CLOSE_BRACE_in_insn_format35c_method_odex5260 -> ic
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format35c_method_odex5262 -> id
    org.antlr.runtime.BitSet FOLLOW_method_reference_in_insn_format35c_method_odex5264 -> ie
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT35mi_METHOD_in_insn_format35mi_method5285 -> if
    org.antlr.runtime.BitSet FOLLOW_OPEN_BRACE_in_insn_format35mi_method5287 -> ig
    org.antlr.runtime.BitSet FOLLOW_register_list_in_insn_format35mi_method5289 -> ih
    org.antlr.runtime.BitSet FOLLOW_CLOSE_BRACE_in_insn_format35mi_method5291 -> ii
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format35mi_method5293 -> ij
    org.antlr.runtime.BitSet FOLLOW_INLINE_INDEX_in_insn_format35mi_method5295 -> ik
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT35ms_METHOD_in_insn_format35ms_method5316 -> il
    org.antlr.runtime.BitSet FOLLOW_OPEN_BRACE_in_insn_format35ms_method5318 -> im
    org.antlr.runtime.BitSet FOLLOW_register_list_in_insn_format35ms_method5320 -> in
    org.antlr.runtime.BitSet FOLLOW_CLOSE_BRACE_in_insn_format35ms_method5322 -> io
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format35ms_method5324 -> ip
    org.antlr.runtime.BitSet FOLLOW_VTABLE_INDEX_in_insn_format35ms_method5326 -> iq
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT3rc_METHOD_in_insn_format3rc_method5347 -> ir
    org.antlr.runtime.BitSet FOLLOW_OPEN_BRACE_in_insn_format3rc_method5349 -> is
    org.antlr.runtime.BitSet FOLLOW_register_range_in_insn_format3rc_method5351 -> it
    org.antlr.runtime.BitSet FOLLOW_CLOSE_BRACE_in_insn_format3rc_method5353 -> iu
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format3rc_method5355 -> iv
    org.antlr.runtime.BitSet FOLLOW_method_reference_in_insn_format3rc_method5357 -> iw
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT3rc_METHOD_ODEX_in_insn_format3rc_method_odex5389 -> ix
    org.antlr.runtime.BitSet FOLLOW_OPEN_BRACE_in_insn_format3rc_method_odex5391 -> iy
    org.antlr.runtime.BitSet FOLLOW_register_list_in_insn_format3rc_method_odex5393 -> iz
    org.antlr.runtime.BitSet FOLLOW_CLOSE_BRACE_in_insn_format3rc_method_odex5395 -> iA
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format3rc_method_odex5397 -> iB
    org.antlr.runtime.BitSet FOLLOW_method_reference_in_insn_format3rc_method_odex5399 -> iC
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT3rc_TYPE_in_insn_format3rc_type5420 -> iD
    org.antlr.runtime.BitSet FOLLOW_OPEN_BRACE_in_insn_format3rc_type5422 -> iE
    org.antlr.runtime.BitSet FOLLOW_register_range_in_insn_format3rc_type5424 -> iF
    org.antlr.runtime.BitSet FOLLOW_CLOSE_BRACE_in_insn_format3rc_type5426 -> iG
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format3rc_type5428 -> iH
    org.antlr.runtime.BitSet FOLLOW_nonvoid_type_descriptor_in_insn_format3rc_type5430 -> iI
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT3rmi_METHOD_in_insn_format3rmi_method5462 -> iJ
    org.antlr.runtime.BitSet FOLLOW_OPEN_BRACE_in_insn_format3rmi_method5464 -> iK
    org.antlr.runtime.BitSet FOLLOW_register_range_in_insn_format3rmi_method5466 -> iL
    org.antlr.runtime.BitSet FOLLOW_CLOSE_BRACE_in_insn_format3rmi_method5468 -> iM
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format3rmi_method5470 -> iN
    org.antlr.runtime.BitSet FOLLOW_INLINE_INDEX_in_insn_format3rmi_method5472 -> iO
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT3rms_METHOD_in_insn_format3rms_method5493 -> iP
    org.antlr.runtime.BitSet FOLLOW_OPEN_BRACE_in_insn_format3rms_method5495 -> iQ
    org.antlr.runtime.BitSet FOLLOW_register_range_in_insn_format3rms_method5497 -> iR
    org.antlr.runtime.BitSet FOLLOW_CLOSE_BRACE_in_insn_format3rms_method5499 -> iS
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format3rms_method5501 -> iT
    org.antlr.runtime.BitSet FOLLOW_VTABLE_INDEX_in_insn_format3rms_method5503 -> iU
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT45cc_METHOD_in_insn_format45cc_method5524 -> iV
    org.antlr.runtime.BitSet FOLLOW_OPEN_BRACE_in_insn_format45cc_method5526 -> iW
    org.antlr.runtime.BitSet FOLLOW_register_list_in_insn_format45cc_method5528 -> iX
    org.antlr.runtime.BitSet FOLLOW_CLOSE_BRACE_in_insn_format45cc_method5530 -> iY
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format45cc_method5532 -> iZ
    org.antlr.runtime.BitSet FOLLOW_method_reference_in_insn_format45cc_method5534 -> ja
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format45cc_method5536 -> jb
    org.antlr.runtime.BitSet FOLLOW_method_prototype_in_insn_format45cc_method5538 -> jc
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT4rcc_METHOD_in_insn_format4rcc_method5572 -> jd
    org.antlr.runtime.BitSet FOLLOW_OPEN_BRACE_in_insn_format4rcc_method5574 -> je
    org.antlr.runtime.BitSet FOLLOW_register_range_in_insn_format4rcc_method5576 -> jf
    org.antlr.runtime.BitSet FOLLOW_CLOSE_BRACE_in_insn_format4rcc_method5578 -> jg
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format4rcc_method5580 -> jh
    org.antlr.runtime.BitSet FOLLOW_method_reference_in_insn_format4rcc_method5582 -> ji
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format4rcc_method5584 -> jj
    org.antlr.runtime.BitSet FOLLOW_method_prototype_in_insn_format4rcc_method5586 -> jk
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT51l_in_insn_format51l5620 -> jl
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format51l5622 -> jm
    org.antlr.runtime.BitSet FOLLOW_COMMA_in_insn_format51l5624 -> jn
    org.antlr.runtime.BitSet FOLLOW_fixed_literal_in_insn_format51l5626 -> jo
    org.antlr.runtime.BitSet FOLLOW_ARRAY_DATA_DIRECTIVE_in_insn_array_data_directive5653 -> jp
    org.antlr.runtime.BitSet FOLLOW_parsed_integer_literal_in_insn_array_data_directive5659 -> jq
    org.antlr.runtime.BitSet FOLLOW_fixed_literal_in_insn_array_data_directive5671 -> jr
    org.antlr.runtime.BitSet FOLLOW_END_ARRAY_DATA_DIRECTIVE_in_insn_array_data_directive5674 -> js
    org.antlr.runtime.BitSet FOLLOW_PACKED_SWITCH_DIRECTIVE_in_insn_packed_switch_directive5720 -> jt
    org.antlr.runtime.BitSet FOLLOW_fixed_32bit_literal_in_insn_packed_switch_directive5726 -> ju
    org.antlr.runtime.BitSet FOLLOW_label_ref_in_insn_packed_switch_directive5732 -> jv
    org.antlr.runtime.BitSet FOLLOW_END_PACKED_SWITCH_DIRECTIVE_in_insn_packed_switch_directive5739 -> jw
    org.antlr.runtime.BitSet FOLLOW_SPARSE_SWITCH_DIRECTIVE_in_insn_sparse_switch_directive5813 -> jx
    org.antlr.runtime.BitSet FOLLOW_fixed_32bit_literal_in_insn_sparse_switch_directive5820 -> jy
    org.antlr.runtime.BitSet FOLLOW_ARROW_in_insn_sparse_switch_directive5822 -> jz
    org.antlr.runtime.BitSet FOLLOW_label_ref_in_insn_sparse_switch_directive5824 -> jA
    org.antlr.runtime.BitSet FOLLOW_END_SPARSE_SWITCH_DIRECTIVE_in_insn_sparse_switch_directive5832 -> jB
    286:287:void <init>(org.antlr.runtime.TokenStream) -> <init>
    289:14821:void <init>(org.antlr.runtime.TokenStream,org.antlr.runtime.RecognizerSharedState) -> <init>
    300:300:java.lang.String[] getTokenNames() -> f
    301:301:java.lang.String getGrammarFileName() -> g
    312:313:void setVerboseErrors(boolean) -> b
    327:343:java.lang.String getErrorMessage(org.antlr.runtime.RecognitionException,java.lang.String[]) -> a
    348:379:java.lang.String getTokenErrorDisplay(org.antlr.runtime.Token) -> a
    383:383:java.lang.String getErrorHeader(org.antlr.runtime.RecognitionException) -> b
    387:391:org.antlr.runtime.tree.CommonTree buildTree(int,java.lang.String,java.util.List) -> a
    463:463:void throwOdexedInstructionException(org.antlr.runtime.IntStream,java.lang.String) -> a
    485:740:org.jf.smali.smaliParser$smali_file_return smali_file() -> i
    756:823:org.jf.smali.smaliParser$class_spec_return class_spec() -> j
    838:903:org.jf.smali.smaliParser$super_spec_return super_spec() -> k
    918:983:org.jf.smali.smaliParser$implements_spec_return implements_spec() -> l
    998:1063:org.jf.smali.smaliParser$source_spec_return source_spec() -> m
    1078:1167:org.jf.smali.smaliParser$access_list_return access_list() -> n
    1182:1465:org.jf.smali.smaliParser$field_return field() -> o
    1480:1576:org.jf.smali.smaliParser$method_return method() -> p
    1597:1873:org.jf.smali.smaliParser$statements_and_directives_return statements_and_directives() -> q
    1888:2035:org.jf.smali.smaliParser$ordered_method_item_return ordered_method_item() -> r
    2050:2190:org.jf.smali.smaliParser$registers_directive_return registers_directive() -> s
    2205:2266:org.jf.smali.smaliParser$param_list_or_id_return param_list_or_id() -> t
    2281:3734:org.jf.smali.smaliParser$simple_name_return simple_name() -> u
    3749:3835:org.jf.smali.smaliParser$member_name_return member_name() -> v
    3850:3942:org.jf.smali.smaliParser$method_prototype_return method_prototype() -> w
    3957:4009:org.jf.smali.smaliParser$param_list_or_id_primitive_type_return param_list_or_id_primitive_type() -> x
    4024:4141:org.jf.smali.smaliParser$param_list_return param_list() -> y
    4156:4204:org.jf.smali.smaliParser$array_descriptor_return array_descriptor() -> z
    4219:4329:org.jf.smali.smaliParser$type_descriptor_return type_descriptor() -> A
    4344:4435:org.jf.smali.smaliParser$nonvoid_type_descriptor_return nonvoid_type_descriptor() -> B
    4450:4520:org.jf.smali.smaliParser$reference_type_descriptor_return reference_type_descriptor() -> C
    4535:4636:org.jf.smali.smaliParser$integer_literal_return integer_literal() -> D
    4651:4736:org.jf.smali.smaliParser$float_literal_return float_literal() -> E
    4751:4836:org.jf.smali.smaliParser$double_literal_return double_literal() -> F
    4851:5323:org.jf.smali.smaliParser$literal_return literal() -> G
    5339:5377:org.jf.smali.smaliParser$parsed_integer_literal_return parsed_integer_literal() -> H
    5392:5522:org.jf.smali.smaliParser$integral_literal_return integral_literal() -> I
    5537:5707:org.jf.smali.smaliParser$fixed_32bit_literal_return fixed_32bit_literal() -> J
    5722:5913:org.jf.smali.smaliParser$fixed_literal_return fixed_literal() -> K
    5928:6068:org.jf.smali.smaliParser$array_literal_return array_literal() -> L
    6083:6157:org.jf.smali.smaliParser$annotation_element_return annotation_element() -> M
    6172:6291:org.jf.smali.smaliParser$annotation_return annotation() -> N
    6306:6411:org.jf.smali.smaliParser$subannotation_return subannotation() -> O
    6426:6492:org.jf.smali.smaliParser$enum_literal_return enum_literal() -> P
    6507:6895:org.jf.smali.smaliParser$type_field_method_literal_return type_field_method_literal() -> Q
    6910:7005:org.jf.smali.smaliParser$method_reference_return method_reference() -> R
    7020:7121:org.jf.smali.smaliParser$field_reference_return field_reference() -> S
    7136:7202:org.jf.smali.smaliParser$label_return label() -> T
    7217:7276:org.jf.smali.smaliParser$label_ref_return label_ref() -> U
    7291:7436:org.jf.smali.smaliParser$register_list_return register_list() -> V
    7451:7564:org.jf.smali.smaliParser$register_range_return register_range() -> W
    7579:7651:org.jf.smali.smaliParser$verification_error_reference_return verification_error_reference() -> X
    7666:7775:org.jf.smali.smaliParser$catch_directive_return catch_directive() -> Y
    7790:7891:org.jf.smali.smaliParser$catchall_directive_return catchall_directive() -> Z
    7906:8122:org.jf.smali.smaliParser$parameter_directive_return parameter_directive() -> aa
    8137:8310:org.jf.smali.smaliParser$debug_directive_return debug_directive() -> ab
    8325:8391:org.jf.smali.smaliParser$line_directive_return line_directive() -> ac
    8406:8634:org.jf.smali.smaliParser$local_directive_return local_directive() -> ad
    8649:8714:org.jf.smali.smaliParser$end_local_directive_return end_local_directive() -> ae
    8729:8794:org.jf.smali.smaliParser$restart_local_directive_return restart_local_directive() -> af
    8809:8867:org.jf.smali.smaliParser$prologue_directive_return prologue_directive() -> ag
    8882:8940:org.jf.smali.smaliParser$epilogue_directive_return epilogue_directive() -> ah
    8955:9040:org.jf.smali.smaliParser$source_directive_return source_directive() -> ai
    9055:9140:org.jf.smali.smaliParser$instruction_format12x_return instruction_format12x() -> aj
    9155:9240:org.jf.smali.smaliParser$instruction_format22s_return instruction_format22s() -> ak
    9255:9340:org.jf.smali.smaliParser$instruction_format31i_return instruction_format31i() -> al
    9355:10311:org.jf.smali.smaliParser$instruction_return instruction() -> am
    10326:10393:org.jf.smali.smaliParser$insn_format10t_return insn_format10t() -> an
    10408:10467:org.jf.smali.smaliParser$insn_format10x_return insn_format10x() -> ao
    10482:10521:org.jf.smali.smaliParser$insn_format10x_odex_return insn_format10x_odex() -> ap
    10536:10616:org.jf.smali.smaliParser$insn_format11n_return insn_format11n() -> aq
    10631:10697:org.jf.smali.smaliParser$insn_format11x_return insn_format11x() -> ar
    10712:10791:org.jf.smali.smaliParser$insn_format12x_return insn_format12x() -> as
    10806:10891:org.jf.smali.smaliParser$insn_format20bc_return insn_format20bc() -> at
    10906:10973:org.jf.smali.smaliParser$insn_format20t_return insn_format20t() -> au
    10988:11068:org.jf.smali.smaliParser$insn_format21c_field_return insn_format21c_field() -> av
    11083:11168:org.jf.smali.smaliParser$insn_format21c_field_odex_return insn_format21c_field_odex() -> aw
    11183:11262:org.jf.smali.smaliParser$insn_format21c_string_return insn_format21c_string() -> ax
    11277:11357:org.jf.smali.smaliParser$insn_format21c_type_return insn_format21c_type() -> ay
    11372:11452:org.jf.smali.smaliParser$insn_format21ih_return insn_format21ih() -> az
    11467:11547:org.jf.smali.smaliParser$insn_format21lh_return insn_format21lh() -> aA
    11562:11642:org.jf.smali.smaliParser$insn_format21s_return insn_format21s() -> aB
    11657:11737:org.jf.smali.smaliParser$insn_format21t_return insn_format21t() -> aC
    11752:11843:org.jf.smali.smaliParser$insn_format22b_return insn_format22b() -> aD
    11858:11949:org.jf.smali.smaliParser$insn_format22c_field_return insn_format22c_field() -> aE
    11964:12060:org.jf.smali.smaliParser$insn_format22c_field_odex_return insn_format22c_field_odex() -> aF
    12075:12166:org.jf.smali.smaliParser$insn_format22c_type_return insn_format22c_type() -> aG
    12181:12250:org.jf.smali.smaliParser$insn_format22cs_field_return insn_format22cs_field() -> aH
    12265:12357:org.jf.smali.smaliParser$insn_format22s_return insn_format22s() -> aI
    12372:12463:org.jf.smali.smaliParser$insn_format22t_return insn_format22t() -> aJ
    12478:12556:org.jf.smali.smaliParser$insn_format22x_return insn_format22x() -> aK
    12571:12660:org.jf.smali.smaliParser$insn_format23x_return insn_format23x() -> aL
    12675:12742:org.jf.smali.smaliParser$insn_format30t_return insn_format30t() -> aM
    12757:12836:org.jf.smali.smaliParser$insn_format31c_return insn_format31c() -> aN
    12851:12932:org.jf.smali.smaliParser$insn_format31i_return insn_format31i() -> aO
    12947:13027:org.jf.smali.smaliParser$insn_format31t_return insn_format31t() -> aP
    13042:13120:org.jf.smali.smaliParser$insn_format32x_return insn_format32x() -> aQ
    13135:13228:org.jf.smali.smaliParser$insn_format35c_method_return insn_format35c_method() -> aR
    13243:13336:org.jf.smali.smaliParser$insn_format35c_type_return insn_format35c_type() -> aS
    13351:13422:org.jf.smali.smaliParser$insn_format35c_method_odex_return insn_format35c_method_odex() -> aT
    13437:13507:org.jf.smali.smaliParser$insn_format35mi_method_return insn_format35mi_method() -> aU
    13522:13592:org.jf.smali.smaliParser$insn_format35ms_method_return insn_format35ms_method() -> aV
    13607:13700:org.jf.smali.smaliParser$insn_format3rc_method_return insn_format3rc_method() -> aW
    13715:13786:org.jf.smali.smaliParser$insn_format3rc_method_odex_return insn_format3rc_method_odex() -> aX
    13801:13894:org.jf.smali.smaliParser$insn_format3rc_type_return insn_format3rc_type() -> aY
    13909:13979:org.jf.smali.smaliParser$insn_format3rmi_method_return insn_format3rmi_method() -> aZ
    13994:14064:org.jf.smali.smaliParser$insn_format3rms_method_return insn_format3rms_method() -> ba
    14079:14185:org.jf.smali.smaliParser$insn_format45cc_method_return insn_format45cc_method() -> bb
    14200:14306:org.jf.smali.smaliParser$insn_format4rcc_method_return insn_format4rcc_method() -> bc
    14321:14401:org.jf.smali.smaliParser$insn_format51l_return insn_format51l() -> bd
    14416:14542:org.jf.smali.smaliParser$insn_array_data_directive_return insn_array_data_directive() -> be
    14557:14677:org.jf.smali.smaliParser$insn_packed_switch_directive_return insn_packed_switch_directive() -> bf
    14692:14812:org.jf.smali.smaliParser$insn_sparse_switch_directive_return insn_sparse_switch_directive() -> bg
    20:15691:void <clinit>() -> <clinit>
org.jf.smali.smaliParser$DFA30 -> org.c.c.l:
    org.jf.smali.smaliParser this$0 -> j
    14905:14915:void <init>(org.jf.smali.smaliParser,org.antlr.runtime.BaseRecognizer) -> <init>
    14918:14918:java.lang.String getDescription() -> a
org.jf.smali.smaliParser$DFA38 -> org.c.c.m:
    org.jf.smali.smaliParser this$0 -> j
    15018:15028:void <init>(org.jf.smali.smaliParser,org.antlr.runtime.BaseRecognizer) -> <init>
    15031:15031:java.lang.String getDescription() -> a
org.jf.smali.smaliParser$DFA40 -> org.c.c.n:
    org.jf.smali.smaliParser this$0 -> j
    15137:15147:void <init>(org.jf.smali.smaliParser,org.antlr.runtime.BaseRecognizer) -> <init>
    15150:15150:java.lang.String getDescription() -> a
    15154:15173:int specialStateTransition(int,org.antlr.runtime.IntStream) -> b
org.jf.smali.smaliParser$access_list_return -> org.c.c.o:
    org.antlr.runtime.tree.CommonTree tree -> c
    1068:1068:void <init>() -> <init>
    1071:1071:org.antlr.runtime.tree.CommonTree getTree() -> b
    1068:1068:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$annotation_element_return -> org.c.c.p:
    org.antlr.runtime.tree.CommonTree tree -> c
    6073:6073:void <init>() -> <init>
    6076:6076:org.antlr.runtime.tree.CommonTree getTree() -> b
    6073:6073:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$annotation_return -> org.c.c.q:
    org.antlr.runtime.tree.CommonTree tree -> c
    6162:6162:void <init>() -> <init>
    6165:6165:org.antlr.runtime.tree.CommonTree getTree() -> b
    6162:6162:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$array_descriptor_return -> org.c.c.r:
    org.antlr.runtime.tree.CommonTree tree -> c
    4146:4146:void <init>() -> <init>
    4149:4149:org.antlr.runtime.tree.CommonTree getTree() -> b
    4146:4146:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$array_literal_return -> org.c.c.s:
    org.antlr.runtime.tree.CommonTree tree -> c
    5918:5918:void <init>() -> <init>
    5921:5921:org.antlr.runtime.tree.CommonTree getTree() -> b
    5918:5918:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$catch_directive_return -> org.c.c.t:
    org.antlr.runtime.tree.CommonTree tree -> c
    7656:7656:void <init>() -> <init>
    7659:7659:org.antlr.runtime.tree.CommonTree getTree() -> b
    7656:7656:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$catchall_directive_return -> org.c.c.u:
    org.antlr.runtime.tree.CommonTree tree -> c
    7780:7780:void <init>() -> <init>
    7783:7783:org.antlr.runtime.tree.CommonTree getTree() -> b
    7780:7780:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$class_spec_return -> org.c.c.v:
    java.lang.String className -> c
    org.antlr.runtime.tree.CommonTree tree -> d
    745:745:void <init>() -> <init>
    749:749:org.antlr.runtime.tree.CommonTree getTree() -> b
    745:745:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$debug_directive_return -> org.c.c.w:
    org.antlr.runtime.tree.CommonTree tree -> c
    8127:8127:void <init>() -> <init>
    8130:8130:org.antlr.runtime.tree.CommonTree getTree() -> b
    8127:8127:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$double_literal_return -> org.c.c.x:
    org.antlr.runtime.tree.CommonTree tree -> c
    4741:4741:void <init>() -> <init>
    4744:4744:org.antlr.runtime.tree.CommonTree getTree() -> b
    4741:4741:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$end_local_directive_return -> org.c.c.y:
    org.antlr.runtime.tree.CommonTree tree -> c
    8639:8639:void <init>() -> <init>
    8642:8642:org.antlr.runtime.tree.CommonTree getTree() -> b
    8639:8639:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$enum_literal_return -> org.c.c.z:
    org.antlr.runtime.tree.CommonTree tree -> c
    6416:6416:void <init>() -> <init>
    6419:6419:org.antlr.runtime.tree.CommonTree getTree() -> b
    6416:6416:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$epilogue_directive_return -> org.c.c.aa:
    org.antlr.runtime.tree.CommonTree tree -> c
    8872:8872:void <init>() -> <init>
    8875:8875:org.antlr.runtime.tree.CommonTree getTree() -> b
    8872:8872:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$field_reference_return -> org.c.c.ab:
    org.antlr.runtime.tree.CommonTree tree -> c
    7010:7010:void <init>() -> <init>
    7013:7013:org.antlr.runtime.tree.CommonTree getTree() -> b
    7010:7010:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$field_return -> org.c.c.ac:
    org.antlr.runtime.tree.CommonTree tree -> c
    1172:1172:void <init>() -> <init>
    1175:1175:org.antlr.runtime.tree.CommonTree getTree() -> b
    1172:1172:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$fixed_32bit_literal_return -> org.c.c.ad:
    org.antlr.runtime.tree.CommonTree tree -> c
    5527:5527:void <init>() -> <init>
    5530:5530:org.antlr.runtime.tree.CommonTree getTree() -> b
    5527:5527:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$fixed_literal_return -> org.c.c.ae:
    org.antlr.runtime.tree.CommonTree tree -> c
    5712:5712:void <init>() -> <init>
    5715:5715:org.antlr.runtime.tree.CommonTree getTree() -> b
    5712:5712:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$float_literal_return -> org.c.c.af:
    org.antlr.runtime.tree.CommonTree tree -> c
    4641:4641:void <init>() -> <init>
    4644:4644:org.antlr.runtime.tree.CommonTree getTree() -> b
    4641:4641:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$implements_spec_return -> org.c.c.ag:
    org.antlr.runtime.tree.CommonTree tree -> c
    908:908:void <init>() -> <init>
    911:911:org.antlr.runtime.tree.CommonTree getTree() -> b
    908:908:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_array_data_directive_return -> org.c.c.ah:
    org.antlr.runtime.tree.CommonTree tree -> c
    14406:14406:void <init>() -> <init>
    14409:14409:org.antlr.runtime.tree.CommonTree getTree() -> b
    14406:14406:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format10t_return -> org.c.c.ai:
    org.antlr.runtime.tree.CommonTree tree -> c
    10316:10316:void <init>() -> <init>
    10319:10319:org.antlr.runtime.tree.CommonTree getTree() -> b
    10316:10316:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format10x_odex_return -> org.c.c.aj:
    org.antlr.runtime.tree.CommonTree tree -> c
    10472:10472:void <init>() -> <init>
    10475:10475:org.antlr.runtime.tree.CommonTree getTree() -> b
    10472:10472:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format10x_return -> org.c.c.ak:
    org.antlr.runtime.tree.CommonTree tree -> c
    10398:10398:void <init>() -> <init>
    10401:10401:org.antlr.runtime.tree.CommonTree getTree() -> b
    10398:10398:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format11n_return -> org.c.c.al:
    org.antlr.runtime.tree.CommonTree tree -> c
    10526:10526:void <init>() -> <init>
    10529:10529:org.antlr.runtime.tree.CommonTree getTree() -> b
    10526:10526:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format11x_return -> org.c.c.am:
    org.antlr.runtime.tree.CommonTree tree -> c
    10621:10621:void <init>() -> <init>
    10624:10624:org.antlr.runtime.tree.CommonTree getTree() -> b
    10621:10621:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format12x_return -> org.c.c.an:
    org.antlr.runtime.tree.CommonTree tree -> c
    10702:10702:void <init>() -> <init>
    10705:10705:org.antlr.runtime.tree.CommonTree getTree() -> b
    10702:10702:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format20bc_return -> org.c.c.ao:
    org.antlr.runtime.tree.CommonTree tree -> c
    10796:10796:void <init>() -> <init>
    10799:10799:org.antlr.runtime.tree.CommonTree getTree() -> b
    10796:10796:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format20t_return -> org.c.c.ap:
    org.antlr.runtime.tree.CommonTree tree -> c
    10896:10896:void <init>() -> <init>
    10899:10899:org.antlr.runtime.tree.CommonTree getTree() -> b
    10896:10896:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format21c_field_odex_return -> org.c.c.aq:
    org.antlr.runtime.tree.CommonTree tree -> c
    11073:11073:void <init>() -> <init>
    11076:11076:org.antlr.runtime.tree.CommonTree getTree() -> b
    11073:11073:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format21c_field_return -> org.c.c.ar:
    org.antlr.runtime.tree.CommonTree tree -> c
    10978:10978:void <init>() -> <init>
    10981:10981:org.antlr.runtime.tree.CommonTree getTree() -> b
    10978:10978:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format21c_string_return -> org.c.c.as:
    org.antlr.runtime.tree.CommonTree tree -> c
    11173:11173:void <init>() -> <init>
    11176:11176:org.antlr.runtime.tree.CommonTree getTree() -> b
    11173:11173:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format21c_type_return -> org.c.c.at:
    org.antlr.runtime.tree.CommonTree tree -> c
    11267:11267:void <init>() -> <init>
    11270:11270:org.antlr.runtime.tree.CommonTree getTree() -> b
    11267:11267:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format21ih_return -> org.c.c.au:
    org.antlr.runtime.tree.CommonTree tree -> c
    11362:11362:void <init>() -> <init>
    11365:11365:org.antlr.runtime.tree.CommonTree getTree() -> b
    11362:11362:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format21lh_return -> org.c.c.av:
    org.antlr.runtime.tree.CommonTree tree -> c
    11457:11457:void <init>() -> <init>
    11460:11460:org.antlr.runtime.tree.CommonTree getTree() -> b
    11457:11457:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format21s_return -> org.c.c.aw:
    org.antlr.runtime.tree.CommonTree tree -> c
    11552:11552:void <init>() -> <init>
    11555:11555:org.antlr.runtime.tree.CommonTree getTree() -> b
    11552:11552:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format21t_return -> org.c.c.ax:
    org.antlr.runtime.tree.CommonTree tree -> c
    11647:11647:void <init>() -> <init>
    11650:11650:org.antlr.runtime.tree.CommonTree getTree() -> b
    11647:11647:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format22b_return -> org.c.c.ay:
    org.antlr.runtime.tree.CommonTree tree -> c
    11742:11742:void <init>() -> <init>
    11745:11745:org.antlr.runtime.tree.CommonTree getTree() -> b
    11742:11742:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format22c_field_odex_return -> org.c.c.az:
    org.antlr.runtime.tree.CommonTree tree -> c
    11954:11954:void <init>() -> <init>
    11957:11957:org.antlr.runtime.tree.CommonTree getTree() -> b
    11954:11954:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format22c_field_return -> org.c.c.ba:
    org.antlr.runtime.tree.CommonTree tree -> c
    11848:11848:void <init>() -> <init>
    11851:11851:org.antlr.runtime.tree.CommonTree getTree() -> b
    11848:11848:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format22c_type_return -> org.c.c.bb:
    org.antlr.runtime.tree.CommonTree tree -> c
    12065:12065:void <init>() -> <init>
    12068:12068:org.antlr.runtime.tree.CommonTree getTree() -> b
    12065:12065:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format22cs_field_return -> org.c.c.bc:
    org.antlr.runtime.tree.CommonTree tree -> c
    12171:12171:void <init>() -> <init>
    12174:12174:org.antlr.runtime.tree.CommonTree getTree() -> b
    12171:12171:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format22s_return -> org.c.c.bd:
    org.antlr.runtime.tree.CommonTree tree -> c
    12255:12255:void <init>() -> <init>
    12258:12258:org.antlr.runtime.tree.CommonTree getTree() -> b
    12255:12255:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format22t_return -> org.c.c.be:
    org.antlr.runtime.tree.CommonTree tree -> c
    12362:12362:void <init>() -> <init>
    12365:12365:org.antlr.runtime.tree.CommonTree getTree() -> b
    12362:12362:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format22x_return -> org.c.c.bf:
    org.antlr.runtime.tree.CommonTree tree -> c
    12468:12468:void <init>() -> <init>
    12471:12471:org.antlr.runtime.tree.CommonTree getTree() -> b
    12468:12468:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format23x_return -> org.c.c.bg:
    org.antlr.runtime.tree.CommonTree tree -> c
    12561:12561:void <init>() -> <init>
    12564:12564:org.antlr.runtime.tree.CommonTree getTree() -> b
    12561:12561:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format30t_return -> org.c.c.bh:
    org.antlr.runtime.tree.CommonTree tree -> c
    12665:12665:void <init>() -> <init>
    12668:12668:org.antlr.runtime.tree.CommonTree getTree() -> b
    12665:12665:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format31c_return -> org.c.c.bi:
    org.antlr.runtime.tree.CommonTree tree -> c
    12747:12747:void <init>() -> <init>
    12750:12750:org.antlr.runtime.tree.CommonTree getTree() -> b
    12747:12747:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format31i_return -> org.c.c.bj:
    org.antlr.runtime.tree.CommonTree tree -> c
    12841:12841:void <init>() -> <init>
    12844:12844:org.antlr.runtime.tree.CommonTree getTree() -> b
    12841:12841:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format31t_return -> org.c.c.bk:
    org.antlr.runtime.tree.CommonTree tree -> c
    12937:12937:void <init>() -> <init>
    12940:12940:org.antlr.runtime.tree.CommonTree getTree() -> b
    12937:12937:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format32x_return -> org.c.c.bl:
    org.antlr.runtime.tree.CommonTree tree -> c
    13032:13032:void <init>() -> <init>
    13035:13035:org.antlr.runtime.tree.CommonTree getTree() -> b
    13032:13032:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format35c_method_odex_return -> org.c.c.bm:
    org.antlr.runtime.tree.CommonTree tree -> c
    13341:13341:void <init>() -> <init>
    13344:13344:org.antlr.runtime.tree.CommonTree getTree() -> b
    13341:13341:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format35c_method_return -> org.c.c.bn:
    org.antlr.runtime.tree.CommonTree tree -> c
    13125:13125:void <init>() -> <init>
    13128:13128:org.antlr.runtime.tree.CommonTree getTree() -> b
    13125:13125:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format35c_type_return -> org.c.c.bo:
    org.antlr.runtime.tree.CommonTree tree -> c
    13233:13233:void <init>() -> <init>
    13236:13236:org.antlr.runtime.tree.CommonTree getTree() -> b
    13233:13233:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format35mi_method_return -> org.c.c.bp:
    org.antlr.runtime.tree.CommonTree tree -> c
    13427:13427:void <init>() -> <init>
    13430:13430:org.antlr.runtime.tree.CommonTree getTree() -> b
    13427:13427:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format35ms_method_return -> org.c.c.bq:
    org.antlr.runtime.tree.CommonTree tree -> c
    13512:13512:void <init>() -> <init>
    13515:13515:org.antlr.runtime.tree.CommonTree getTree() -> b
    13512:13512:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format3rc_method_odex_return -> org.c.c.br:
    org.antlr.runtime.tree.CommonTree tree -> c
    13705:13705:void <init>() -> <init>
    13708:13708:org.antlr.runtime.tree.CommonTree getTree() -> b
    13705:13705:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format3rc_method_return -> org.c.c.bs:
    org.antlr.runtime.tree.CommonTree tree -> c
    13597:13597:void <init>() -> <init>
    13600:13600:org.antlr.runtime.tree.CommonTree getTree() -> b
    13597:13597:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format3rc_type_return -> org.c.c.bt:
    org.antlr.runtime.tree.CommonTree tree -> c
    13791:13791:void <init>() -> <init>
    13794:13794:org.antlr.runtime.tree.CommonTree getTree() -> b
    13791:13791:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format3rmi_method_return -> org.c.c.bu:
    org.antlr.runtime.tree.CommonTree tree -> c
    13899:13899:void <init>() -> <init>
    13902:13902:org.antlr.runtime.tree.CommonTree getTree() -> b
    13899:13899:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format3rms_method_return -> org.c.c.bv:
    org.antlr.runtime.tree.CommonTree tree -> c
    13984:13984:void <init>() -> <init>
    13987:13987:org.antlr.runtime.tree.CommonTree getTree() -> b
    13984:13984:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format45cc_method_return -> org.c.c.bw:
    org.antlr.runtime.tree.CommonTree tree -> c
    14069:14069:void <init>() -> <init>
    14072:14072:org.antlr.runtime.tree.CommonTree getTree() -> b
    14069:14069:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format4rcc_method_return -> org.c.c.bx:
    org.antlr.runtime.tree.CommonTree tree -> c
    14190:14190:void <init>() -> <init>
    14193:14193:org.antlr.runtime.tree.CommonTree getTree() -> b
    14190:14190:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_format51l_return -> org.c.c.by:
    org.antlr.runtime.tree.CommonTree tree -> c
    14311:14311:void <init>() -> <init>
    14314:14314:org.antlr.runtime.tree.CommonTree getTree() -> b
    14311:14311:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_packed_switch_directive_return -> org.c.c.bz:
    org.antlr.runtime.tree.CommonTree tree -> c
    14547:14547:void <init>() -> <init>
    14550:14550:org.antlr.runtime.tree.CommonTree getTree() -> b
    14547:14547:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$insn_sparse_switch_directive_return -> org.c.c.ca:
    org.antlr.runtime.tree.CommonTree tree -> c
    14682:14682:void <init>() -> <init>
    14685:14685:org.antlr.runtime.tree.CommonTree getTree() -> b
    14682:14682:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$instruction_format12x_return -> org.c.c.cb:
    org.antlr.runtime.tree.CommonTree tree -> c
    9045:9045:void <init>() -> <init>
    9048:9048:org.antlr.runtime.tree.CommonTree getTree() -> b
    9045:9045:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$instruction_format22s_return -> org.c.c.cc:
    org.antlr.runtime.tree.CommonTree tree -> c
    9145:9145:void <init>() -> <init>
    9148:9148:org.antlr.runtime.tree.CommonTree getTree() -> b
    9145:9145:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$instruction_format31i_return -> org.c.c.cd:
    org.antlr.runtime.tree.CommonTree tree -> c
    9245:9245:void <init>() -> <init>
    9248:9248:org.antlr.runtime.tree.CommonTree getTree() -> b
    9245:9245:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$instruction_return -> org.c.c.ce:
    org.antlr.runtime.tree.CommonTree tree -> c
    9345:9345:void <init>() -> <init>
    9348:9348:org.antlr.runtime.tree.CommonTree getTree() -> b
    9345:9345:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$integer_literal_return -> org.c.c.cf:
    org.antlr.runtime.tree.CommonTree tree -> c
    4525:4525:void <init>() -> <init>
    4528:4528:org.antlr.runtime.tree.CommonTree getTree() -> b
    4525:4525:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$integral_literal_return -> org.c.c.cg:
    org.antlr.runtime.tree.CommonTree tree -> c
    5382:5382:void <init>() -> <init>
    5385:5385:org.antlr.runtime.tree.CommonTree getTree() -> b
    5382:5382:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$label_ref_return -> org.c.c.ch:
    org.antlr.runtime.tree.CommonTree tree -> c
    7207:7207:void <init>() -> <init>
    7210:7210:org.antlr.runtime.tree.CommonTree getTree() -> b
    7207:7207:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$label_return -> org.c.c.ci:
    org.antlr.runtime.tree.CommonTree tree -> c
    7126:7126:void <init>() -> <init>
    7129:7129:org.antlr.runtime.tree.CommonTree getTree() -> b
    7126:7126:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$line_directive_return -> org.c.c.cj:
    org.antlr.runtime.tree.CommonTree tree -> c
    8315:8315:void <init>() -> <init>
    8318:8318:org.antlr.runtime.tree.CommonTree getTree() -> b
    8315:8315:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$literal_return -> org.c.c.ck:
    org.antlr.runtime.tree.CommonTree tree -> c
    4841:4841:void <init>() -> <init>
    4844:4844:org.antlr.runtime.tree.CommonTree getTree() -> b
    4841:4841:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$local_directive_return -> org.c.c.cl:
    org.antlr.runtime.tree.CommonTree tree -> c
    8396:8396:void <init>() -> <init>
    8399:8399:org.antlr.runtime.tree.CommonTree getTree() -> b
    8396:8396:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$member_name_return -> org.c.c.cm:
    org.antlr.runtime.tree.CommonTree tree -> c
    3739:3739:void <init>() -> <init>
    3742:3742:org.antlr.runtime.tree.CommonTree getTree() -> b
    3739:3739:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$method_prototype_return -> org.c.c.cn:
    org.antlr.runtime.tree.CommonTree tree -> c
    3840:3840:void <init>() -> <init>
    3843:3843:org.antlr.runtime.tree.CommonTree getTree() -> b
    3840:3840:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$method_reference_return -> org.c.c.co:
    org.antlr.runtime.tree.CommonTree tree -> c
    6900:6900:void <init>() -> <init>
    6903:6903:org.antlr.runtime.tree.CommonTree getTree() -> b
    6900:6900:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$method_return -> org.c.c.cp:
    org.antlr.runtime.tree.CommonTree tree -> c
    1470:1470:void <init>() -> <init>
    1473:1473:org.antlr.runtime.tree.CommonTree getTree() -> b
    1470:1470:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$nonvoid_type_descriptor_return -> org.c.c.cq:
    org.antlr.runtime.tree.CommonTree tree -> c
    4334:4334:void <init>() -> <init>
    4337:4337:org.antlr.runtime.tree.CommonTree getTree() -> b
    4334:4334:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$ordered_method_item_return -> org.c.c.cr:
    org.antlr.runtime.tree.CommonTree tree -> c
    1878:1878:void <init>() -> <init>
    1881:1881:org.antlr.runtime.tree.CommonTree getTree() -> b
    1878:1878:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$param_list_or_id_primitive_type_return -> org.c.c.cs:
    org.antlr.runtime.tree.CommonTree tree -> c
    3947:3947:void <init>() -> <init>
    3950:3950:org.antlr.runtime.tree.CommonTree getTree() -> b
    3947:3947:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$param_list_or_id_return -> org.c.c.ct:
    org.antlr.runtime.tree.CommonTree tree -> c
    2195:2195:void <init>() -> <init>
    2198:2198:org.antlr.runtime.tree.CommonTree getTree() -> b
    2195:2195:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$param_list_return -> org.c.c.cu:
    org.antlr.runtime.tree.CommonTree tree -> c
    4014:4014:void <init>() -> <init>
    4017:4017:org.antlr.runtime.tree.CommonTree getTree() -> b
    4014:4014:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$parameter_directive_return -> org.c.c.cv:
    org.antlr.runtime.tree.CommonTree tree -> c
    7896:7896:void <init>() -> <init>
    7899:7899:org.antlr.runtime.tree.CommonTree getTree() -> b
    7896:7896:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$parsed_integer_literal_return -> org.c.c.cw:
    int value -> c
    org.antlr.runtime.tree.CommonTree tree -> d
    5328:5328:void <init>() -> <init>
    5332:5332:org.antlr.runtime.tree.CommonTree getTree() -> b
    5328:5328:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$prologue_directive_return -> org.c.c.cx:
    org.antlr.runtime.tree.CommonTree tree -> c
    8799:8799:void <init>() -> <init>
    8802:8802:org.antlr.runtime.tree.CommonTree getTree() -> b
    8799:8799:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$reference_type_descriptor_return -> org.c.c.cy:
    org.antlr.runtime.tree.CommonTree tree -> c
    4440:4440:void <init>() -> <init>
    4443:4443:org.antlr.runtime.tree.CommonTree getTree() -> b
    4440:4440:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$register_list_return -> org.c.c.cz:
    org.antlr.runtime.tree.CommonTree tree -> c
    7281:7281:void <init>() -> <init>
    7284:7284:org.antlr.runtime.tree.CommonTree getTree() -> b
    7281:7281:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$register_range_return -> org.c.c.da:
    org.antlr.runtime.tree.CommonTree tree -> c
    7441:7441:void <init>() -> <init>
    7444:7444:org.antlr.runtime.tree.CommonTree getTree() -> b
    7441:7441:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$registers_directive_return -> org.c.c.db:
    org.antlr.runtime.tree.CommonTree tree -> c
    2040:2040:void <init>() -> <init>
    2043:2043:org.antlr.runtime.tree.CommonTree getTree() -> b
    2040:2040:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$restart_local_directive_return -> org.c.c.dc:
    org.antlr.runtime.tree.CommonTree tree -> c
    8719:8719:void <init>() -> <init>
    8722:8722:org.antlr.runtime.tree.CommonTree getTree() -> b
    8719:8719:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$simple_name_return -> org.c.c.dd:
    org.antlr.runtime.tree.CommonTree tree -> c
    2271:2271:void <init>() -> <init>
    2274:2274:org.antlr.runtime.tree.CommonTree getTree() -> b
    2271:2271:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$smali_file_return -> org.c.c.de:
    org.antlr.runtime.tree.CommonTree tree -> c
    475:475:void <init>() -> <init>
    478:478:org.antlr.runtime.tree.CommonTree getTree() -> b
    475:475:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$smali_file_scope -> org.c.c.df:
    boolean hasClassSpec -> a
    boolean hasSuperSpec -> b
    boolean hasSourceSpec -> c
    java.util.List classAnnotations -> d
    467:467:void <init>() -> <init>
org.jf.smali.smaliParser$source_directive_return -> org.c.c.dg:
    org.antlr.runtime.tree.CommonTree tree -> c
    8945:8945:void <init>() -> <init>
    8948:8948:org.antlr.runtime.tree.CommonTree getTree() -> b
    8945:8945:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$source_spec_return -> org.c.c.dh:
    org.antlr.runtime.tree.CommonTree tree -> c
    988:988:void <init>() -> <init>
    991:991:org.antlr.runtime.tree.CommonTree getTree() -> b
    988:988:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$statements_and_directives_return -> org.c.c.di:
    org.antlr.runtime.tree.CommonTree tree -> c
    1587:1587:void <init>() -> <init>
    1590:1590:org.antlr.runtime.tree.CommonTree getTree() -> b
    1587:1587:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$statements_and_directives_scope -> org.c.c.dj:
    boolean hasRegistersDirective -> a
    java.util.List methodAnnotations -> b
    1581:1581:void <init>() -> <init>
org.jf.smali.smaliParser$subannotation_return -> org.c.c.dk:
    org.antlr.runtime.tree.CommonTree tree -> c
    6296:6296:void <init>() -> <init>
    6299:6299:org.antlr.runtime.tree.CommonTree getTree() -> b
    6296:6296:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$super_spec_return -> org.c.c.dl:
    org.antlr.runtime.tree.CommonTree tree -> c
    828:828:void <init>() -> <init>
    831:831:org.antlr.runtime.tree.CommonTree getTree() -> b
    828:828:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$type_descriptor_return -> org.c.c.dm:
    org.antlr.runtime.tree.CommonTree tree -> c
    4209:4209:void <init>() -> <init>
    4212:4212:org.antlr.runtime.tree.CommonTree getTree() -> b
    4209:4209:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$type_field_method_literal_return -> org.c.c.dn:
    org.antlr.runtime.tree.CommonTree tree -> c
    6497:6497:void <init>() -> <init>
    6500:6500:org.antlr.runtime.tree.CommonTree getTree() -> b
    6497:6497:java.lang.Object getTree() -> a
org.jf.smali.smaliParser$verification_error_reference_return -> org.c.c.do:
    org.antlr.runtime.tree.CommonTree tree -> c
    7569:7569:void <init>() -> <init>
    7572:7572:org.antlr.runtime.tree.CommonTree getTree() -> b
    7569:7569:java.lang.Object getTree() -> a
org.jf.smali.smaliTreeWalker -> org.c.c.dp:
    java.lang.String[] tokenNames -> g
    java.lang.String classType -> h
    boolean verboseErrors -> gG
    int apiLevel -> gH
    org.jf.dexlib2.Opcodes opcodes -> gI
    org.jf.dexlib2.writer.builder.DexBuilder dexBuilder -> gJ
    java.util.Stack method_stack -> i
    org.antlr.runtime.BitSet FOLLOW_I_CLASS_DEF_in_smali_file52 -> j
    org.antlr.runtime.BitSet FOLLOW_header_in_smali_file54 -> k
    org.antlr.runtime.BitSet FOLLOW_methods_in_smali_file56 -> l
    org.antlr.runtime.BitSet FOLLOW_fields_in_smali_file58 -> m
    org.antlr.runtime.BitSet FOLLOW_annotations_in_smali_file60 -> n
    org.antlr.runtime.BitSet FOLLOW_class_spec_in_header85 -> o
    org.antlr.runtime.BitSet FOLLOW_super_spec_in_header87 -> p
    org.antlr.runtime.BitSet FOLLOW_implements_list_in_header90 -> q
    org.antlr.runtime.BitSet FOLLOW_source_spec_in_header92 -> r
    org.antlr.runtime.BitSet FOLLOW_CLASS_DESCRIPTOR_in_class_spec110 -> s
    org.antlr.runtime.BitSet FOLLOW_access_list_in_class_spec112 -> t
    org.antlr.runtime.BitSet FOLLOW_I_SUPER_in_super_spec130 -> u
    org.antlr.runtime.BitSet FOLLOW_CLASS_DESCRIPTOR_in_super_spec132 -> v
    org.antlr.runtime.BitSet FOLLOW_I_IMPLEMENTS_in_implements_spec152 -> w
    org.antlr.runtime.BitSet FOLLOW_CLASS_DESCRIPTOR_in_implements_spec154 -> x
    org.antlr.runtime.BitSet FOLLOW_implements_spec_in_implements_list184 -> y
    org.antlr.runtime.BitSet FOLLOW_I_SOURCE_in_source_spec213 -> z
    org.antlr.runtime.BitSet FOLLOW_string_literal_in_source_spec215 -> A
    org.antlr.runtime.BitSet FOLLOW_I_ACCESS_LIST_in_access_list248 -> B
    org.antlr.runtime.BitSet FOLLOW_ACCESS_SPEC_in_access_list266 -> C
    org.antlr.runtime.BitSet FOLLOW_I_FIELDS_in_fields308 -> D
    org.antlr.runtime.BitSet FOLLOW_field_in_fields317 -> E
    org.antlr.runtime.BitSet FOLLOW_I_METHODS_in_methods349 -> F
    org.antlr.runtime.BitSet FOLLOW_method_in_methods358 -> G
    org.antlr.runtime.BitSet FOLLOW_I_FIELD_in_field383 -> H
    org.antlr.runtime.BitSet FOLLOW_SIMPLE_NAME_in_field385 -> I
    org.antlr.runtime.BitSet FOLLOW_access_list_in_field387 -> J
    org.antlr.runtime.BitSet FOLLOW_I_FIELD_TYPE_in_field390 -> K
    org.antlr.runtime.BitSet FOLLOW_nonvoid_type_descriptor_in_field392 -> L
    org.antlr.runtime.BitSet FOLLOW_field_initial_value_in_field395 -> M
    org.antlr.runtime.BitSet FOLLOW_annotations_in_field397 -> N
    org.antlr.runtime.BitSet FOLLOW_I_FIELD_INITIAL_VALUE_in_field_initial_value418 -> O
    org.antlr.runtime.BitSet FOLLOW_literal_in_field_initial_value420 -> P
    org.antlr.runtime.BitSet FOLLOW_integer_literal_in_literal442 -> Q
    org.antlr.runtime.BitSet FOLLOW_long_literal_in_literal450 -> R
    org.antlr.runtime.BitSet FOLLOW_short_literal_in_literal458 -> S
    org.antlr.runtime.BitSet FOLLOW_byte_literal_in_literal466 -> T
    org.antlr.runtime.BitSet FOLLOW_float_literal_in_literal474 -> U
    org.antlr.runtime.BitSet FOLLOW_double_literal_in_literal482 -> V
    org.antlr.runtime.BitSet FOLLOW_char_literal_in_literal490 -> W
    org.antlr.runtime.BitSet FOLLOW_string_literal_in_literal498 -> X
    org.antlr.runtime.BitSet FOLLOW_bool_literal_in_literal506 -> Y
    org.antlr.runtime.BitSet FOLLOW_NULL_LITERAL_in_literal514 -> Z
    org.antlr.runtime.BitSet FOLLOW_type_descriptor_in_literal522 -> aa
    org.antlr.runtime.BitSet FOLLOW_array_literal_in_literal530 -> ab
    org.antlr.runtime.BitSet FOLLOW_subannotation_in_literal538 -> ac
    org.antlr.runtime.BitSet FOLLOW_field_literal_in_literal546 -> ad
    org.antlr.runtime.BitSet FOLLOW_method_literal_in_literal554 -> ae
    org.antlr.runtime.BitSet FOLLOW_enum_literal_in_literal562 -> af
    org.antlr.runtime.BitSet FOLLOW_integer_literal_in_fixed_64bit_literal_number578 -> ag
    org.antlr.runtime.BitSet FOLLOW_long_literal_in_fixed_64bit_literal_number586 -> ah
    org.antlr.runtime.BitSet FOLLOW_short_literal_in_fixed_64bit_literal_number594 -> ai
    org.antlr.runtime.BitSet FOLLOW_byte_literal_in_fixed_64bit_literal_number602 -> aj
    org.antlr.runtime.BitSet FOLLOW_float_literal_in_fixed_64bit_literal_number610 -> ak
    org.antlr.runtime.BitSet FOLLOW_double_literal_in_fixed_64bit_literal_number618 -> al
    org.antlr.runtime.BitSet FOLLOW_char_literal_in_fixed_64bit_literal_number626 -> am
    org.antlr.runtime.BitSet FOLLOW_bool_literal_in_fixed_64bit_literal_number634 -> an
    org.antlr.runtime.BitSet FOLLOW_integer_literal_in_fixed_64bit_literal649 -> ao
    org.antlr.runtime.BitSet FOLLOW_long_literal_in_fixed_64bit_literal657 -> ap
    org.antlr.runtime.BitSet FOLLOW_short_literal_in_fixed_64bit_literal665 -> aq
    org.antlr.runtime.BitSet FOLLOW_byte_literal_in_fixed_64bit_literal673 -> ar
    org.antlr.runtime.BitSet FOLLOW_float_literal_in_fixed_64bit_literal681 -> as
    org.antlr.runtime.BitSet FOLLOW_double_literal_in_fixed_64bit_literal689 -> at
    org.antlr.runtime.BitSet FOLLOW_char_literal_in_fixed_64bit_literal697 -> au
    org.antlr.runtime.BitSet FOLLOW_bool_literal_in_fixed_64bit_literal705 -> av
    org.antlr.runtime.BitSet FOLLOW_integer_literal_in_fixed_32bit_literal722 -> aw
    org.antlr.runtime.BitSet FOLLOW_long_literal_in_fixed_32bit_literal730 -> ax
    org.antlr.runtime.BitSet FOLLOW_short_literal_in_fixed_32bit_literal738 -> ay
    org.antlr.runtime.BitSet FOLLOW_byte_literal_in_fixed_32bit_literal746 -> az
    org.antlr.runtime.BitSet FOLLOW_float_literal_in_fixed_32bit_literal754 -> aA
    org.antlr.runtime.BitSet FOLLOW_char_literal_in_fixed_32bit_literal762 -> aB
    org.antlr.runtime.BitSet FOLLOW_bool_literal_in_fixed_32bit_literal770 -> aC
    org.antlr.runtime.BitSet FOLLOW_I_ARRAY_ELEMENTS_in_array_elements792 -> aD
    org.antlr.runtime.BitSet FOLLOW_fixed_64bit_literal_number_in_array_elements801 -> aE
    org.antlr.runtime.BitSet FOLLOW_I_PACKED_SWITCH_ELEMENTS_in_packed_switch_elements837 -> aF
    org.antlr.runtime.BitSet FOLLOW_label_ref_in_packed_switch_elements846 -> aG
    org.antlr.runtime.BitSet FOLLOW_I_SPARSE_SWITCH_ELEMENTS_in_sparse_switch_elements881 -> aH
    org.antlr.runtime.BitSet FOLLOW_fixed_32bit_literal_in_sparse_switch_elements891 -> aI
    org.antlr.runtime.BitSet FOLLOW_label_ref_in_sparse_switch_elements893 -> aJ
    org.antlr.runtime.BitSet FOLLOW_I_METHOD_in_method945 -> aK
    org.antlr.runtime.BitSet FOLLOW_method_name_and_prototype_in_method953 -> aL
    org.antlr.runtime.BitSet FOLLOW_access_list_in_method961 -> aM
    org.antlr.runtime.BitSet FOLLOW_registers_directive_in_method988 -> aN
    org.antlr.runtime.BitSet FOLLOW_ordered_method_items_in_method1045 -> aO
    org.antlr.runtime.BitSet FOLLOW_catches_in_method1053 -> aP
    org.antlr.runtime.BitSet FOLLOW_parameters_in_method1061 -> aQ
    org.antlr.runtime.BitSet FOLLOW_annotations_in_method1070 -> aR
    org.antlr.runtime.BitSet FOLLOW_I_METHOD_PROTOTYPE_in_method_prototype1094 -> aS
    org.antlr.runtime.BitSet FOLLOW_I_METHOD_RETURN_TYPE_in_method_prototype1097 -> aT
    org.antlr.runtime.BitSet FOLLOW_type_descriptor_in_method_prototype1099 -> aU
    org.antlr.runtime.BitSet FOLLOW_method_type_list_in_method_prototype1102 -> aV
    org.antlr.runtime.BitSet FOLLOW_SIMPLE_NAME_in_method_name_and_prototype1120 -> aW
    org.antlr.runtime.BitSet FOLLOW_method_prototype_in_method_name_and_prototype1122 -> aX
    org.antlr.runtime.BitSet FOLLOW_nonvoid_type_descriptor_in_method_type_list1156 -> aY
    org.antlr.runtime.BitSet FOLLOW_reference_type_descriptor_in_method_reference1185 -> aZ
    org.antlr.runtime.BitSet FOLLOW_SIMPLE_NAME_in_method_reference1188 -> ba
    org.antlr.runtime.BitSet FOLLOW_method_prototype_in_method_reference1190 -> bb
    org.antlr.runtime.BitSet FOLLOW_reference_type_descriptor_in_field_reference1207 -> bc
    org.antlr.runtime.BitSet FOLLOW_SIMPLE_NAME_in_field_reference1210 -> bd
    org.antlr.runtime.BitSet FOLLOW_nonvoid_type_descriptor_in_field_reference1212 -> be
    org.antlr.runtime.BitSet FOLLOW_I_REGISTERS_in_registers_directive1238 -> bf
    org.antlr.runtime.BitSet FOLLOW_I_LOCALS_in_registers_directive1250 -> bg
    org.antlr.runtime.BitSet FOLLOW_short_integral_literal_in_registers_directive1268 -> bh
    org.antlr.runtime.BitSet FOLLOW_I_LABEL_in_label_def1288 -> bi
    org.antlr.runtime.BitSet FOLLOW_SIMPLE_NAME_in_label_def1290 -> bj
    org.antlr.runtime.BitSet FOLLOW_I_CATCHES_in_catches1316 -> bk
    org.antlr.runtime.BitSet FOLLOW_catch_directive_in_catches1318 -> bl
    org.antlr.runtime.BitSet FOLLOW_catchall_directive_in_catches1321 -> bm
    org.antlr.runtime.BitSet FOLLOW_I_CATCH_in_catch_directive1334 -> bn
    org.antlr.runtime.BitSet FOLLOW_nonvoid_type_descriptor_in_catch_directive1336 -> bo
    org.antlr.runtime.BitSet FOLLOW_label_ref_in_catch_directive1340 -> bp
    org.antlr.runtime.BitSet FOLLOW_label_ref_in_catch_directive1344 -> bq
    org.antlr.runtime.BitSet FOLLOW_label_ref_in_catch_directive1348 -> br
    org.antlr.runtime.BitSet FOLLOW_I_CATCHALL_in_catchall_directive1364 -> bs
    org.antlr.runtime.BitSet FOLLOW_label_ref_in_catchall_directive1368 -> bt
    org.antlr.runtime.BitSet FOLLOW_label_ref_in_catchall_directive1372 -> bu
    org.antlr.runtime.BitSet FOLLOW_label_ref_in_catchall_directive1376 -> bv
    org.antlr.runtime.BitSet FOLLOW_I_PARAMETERS_in_parameters1393 -> bw
    org.antlr.runtime.BitSet FOLLOW_parameter_in_parameters1396 -> bx
    org.antlr.runtime.BitSet FOLLOW_I_PARAMETER_in_parameter1412 -> by
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_parameter1414 -> bz
    org.antlr.runtime.BitSet FOLLOW_string_literal_in_parameter1416 -> bA
    org.antlr.runtime.BitSet FOLLOW_annotations_in_parameter1419 -> bB
    org.antlr.runtime.BitSet FOLLOW_line_in_debug_directive1436 -> bC
    org.antlr.runtime.BitSet FOLLOW_local_in_debug_directive1442 -> bD
    org.antlr.runtime.BitSet FOLLOW_end_local_in_debug_directive1448 -> bE
    org.antlr.runtime.BitSet FOLLOW_restart_local_in_debug_directive1454 -> bF
    org.antlr.runtime.BitSet FOLLOW_prologue_in_debug_directive1460 -> bG
    org.antlr.runtime.BitSet FOLLOW_epilogue_in_debug_directive1466 -> bH
    org.antlr.runtime.BitSet FOLLOW_source_in_debug_directive1472 -> bI
    org.antlr.runtime.BitSet FOLLOW_I_LINE_in_line1483 -> bJ
    org.antlr.runtime.BitSet FOLLOW_integral_literal_in_line1485 -> bK
    org.antlr.runtime.BitSet FOLLOW_I_LOCAL_in_local1503 -> bL
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_local1505 -> bM
    org.antlr.runtime.BitSet FOLLOW_NULL_LITERAL_in_local1509 -> bN
    org.antlr.runtime.BitSet FOLLOW_string_literal_in_local1515 -> bO
    org.antlr.runtime.BitSet FOLLOW_nonvoid_type_descriptor_in_local1518 -> bP
    org.antlr.runtime.BitSet FOLLOW_string_literal_in_local1523 -> bQ
    org.antlr.runtime.BitSet FOLLOW_I_END_LOCAL_in_end_local1544 -> bR
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_end_local1546 -> bS
    org.antlr.runtime.BitSet FOLLOW_I_RESTART_LOCAL_in_restart_local1564 -> bT
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_restart_local1566 -> bU
    org.antlr.runtime.BitSet FOLLOW_I_PROLOGUE_in_prologue1583 -> bV
    org.antlr.runtime.BitSet FOLLOW_I_EPILOGUE_in_epilogue1599 -> bW
    org.antlr.runtime.BitSet FOLLOW_I_SOURCE_in_source1616 -> bX
    org.antlr.runtime.BitSet FOLLOW_string_literal_in_source1618 -> bY
    org.antlr.runtime.BitSet FOLLOW_I_ORDERED_METHOD_ITEMS_in_ordered_method_items1637 -> bZ
    org.antlr.runtime.BitSet FOLLOW_label_def_in_ordered_method_items1640 -> ca
    org.antlr.runtime.BitSet FOLLOW_instruction_in_ordered_method_items1644 -> cb
    org.antlr.runtime.BitSet FOLLOW_debug_directive_in_ordered_method_items1648 -> cc
    org.antlr.runtime.BitSet FOLLOW_SIMPLE_NAME_in_label_ref1664 -> cd
    org.antlr.runtime.BitSet FOLLOW_I_REGISTER_LIST_in_register_list1689 -> ce
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_register_list1698 -> cf
    org.antlr.runtime.BitSet FOLLOW_I_REGISTER_RANGE_in_register_range1723 -> cg
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_register_range1728 -> ch
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_register_range1732 -> ci
    org.antlr.runtime.BitSet FOLLOW_CLASS_DESCRIPTOR_in_verification_error_reference1755 -> cj
    org.antlr.runtime.BitSet FOLLOW_field_reference_in_verification_error_reference1765 -> ck
    org.antlr.runtime.BitSet FOLLOW_method_reference_in_verification_error_reference1775 -> cl
    org.antlr.runtime.BitSet FOLLOW_VERIFICATION_ERROR_TYPE_in_verification_error_type1792 -> cm
    org.antlr.runtime.BitSet FOLLOW_insn_format10t_in_instruction1806 -> cn
    org.antlr.runtime.BitSet FOLLOW_insn_format10x_in_instruction1812 -> co
    org.antlr.runtime.BitSet FOLLOW_insn_format11n_in_instruction1818 -> cp
    org.antlr.runtime.BitSet FOLLOW_insn_format11x_in_instruction1824 -> cq
    org.antlr.runtime.BitSet FOLLOW_insn_format12x_in_instruction1830 -> cr
    org.antlr.runtime.BitSet FOLLOW_insn_format20bc_in_instruction1836 -> cs
    org.antlr.runtime.BitSet FOLLOW_insn_format20t_in_instruction1842 -> ct
    org.antlr.runtime.BitSet FOLLOW_insn_format21c_field_in_instruction1848 -> cu
    org.antlr.runtime.BitSet FOLLOW_insn_format21c_string_in_instruction1854 -> cv
    org.antlr.runtime.BitSet FOLLOW_insn_format21c_type_in_instruction1860 -> cw
    org.antlr.runtime.BitSet FOLLOW_insn_format21ih_in_instruction1866 -> cx
    org.antlr.runtime.BitSet FOLLOW_insn_format21lh_in_instruction1872 -> cy
    org.antlr.runtime.BitSet FOLLOW_insn_format21s_in_instruction1878 -> cz
    org.antlr.runtime.BitSet FOLLOW_insn_format21t_in_instruction1884 -> cA
    org.antlr.runtime.BitSet FOLLOW_insn_format22b_in_instruction1890 -> cB
    org.antlr.runtime.BitSet FOLLOW_insn_format22c_field_in_instruction1896 -> cC
    org.antlr.runtime.BitSet FOLLOW_insn_format22c_type_in_instruction1902 -> cD
    org.antlr.runtime.BitSet FOLLOW_insn_format22s_in_instruction1908 -> cE
    org.antlr.runtime.BitSet FOLLOW_insn_format22t_in_instruction1914 -> cF
    org.antlr.runtime.BitSet FOLLOW_insn_format22x_in_instruction1920 -> cG
    org.antlr.runtime.BitSet FOLLOW_insn_format23x_in_instruction1926 -> cH
    org.antlr.runtime.BitSet FOLLOW_insn_format30t_in_instruction1932 -> cI
    org.antlr.runtime.BitSet FOLLOW_insn_format31c_in_instruction1938 -> cJ
    org.antlr.runtime.BitSet FOLLOW_insn_format31i_in_instruction1944 -> cK
    org.antlr.runtime.BitSet FOLLOW_insn_format31t_in_instruction1950 -> cL
    org.antlr.runtime.BitSet FOLLOW_insn_format32x_in_instruction1956 -> cM
    org.antlr.runtime.BitSet FOLLOW_insn_format35c_method_in_instruction1962 -> cN
    org.antlr.runtime.BitSet FOLLOW_insn_format35c_type_in_instruction1968 -> cO
    org.antlr.runtime.BitSet FOLLOW_insn_format3rc_method_in_instruction1974 -> cP
    org.antlr.runtime.BitSet FOLLOW_insn_format3rc_type_in_instruction1980 -> cQ
    org.antlr.runtime.BitSet FOLLOW_insn_format45cc_method_in_instruction1986 -> cR
    org.antlr.runtime.BitSet FOLLOW_insn_format4rcc_method_in_instruction1992 -> cS
    org.antlr.runtime.BitSet FOLLOW_insn_format51l_type_in_instruction1998 -> cT
    org.antlr.runtime.BitSet FOLLOW_insn_array_data_directive_in_instruction2004 -> cU
    org.antlr.runtime.BitSet FOLLOW_insn_packed_switch_directive_in_instruction2010 -> cV
    org.antlr.runtime.BitSet FOLLOW_insn_sparse_switch_directive_in_instruction2016 -> cW
    org.antlr.runtime.BitSet FOLLOW_I_STATEMENT_FORMAT10t_in_insn_format10t2040 -> cX
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT10t_in_insn_format10t2042 -> cY
    org.antlr.runtime.BitSet FOLLOW_label_ref_in_insn_format10t2044 -> cZ
    org.antlr.runtime.BitSet FOLLOW_I_STATEMENT_FORMAT10x_in_insn_format10x2067 -> da
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT10x_in_insn_format10x2069 -> db
    org.antlr.runtime.BitSet FOLLOW_I_STATEMENT_FORMAT11n_in_insn_format11n2092 -> dc
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT11n_in_insn_format11n2094 -> dd
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format11n2096 -> de
    org.antlr.runtime.BitSet FOLLOW_short_integral_literal_in_insn_format11n2098 -> df
    org.antlr.runtime.BitSet FOLLOW_I_STATEMENT_FORMAT11x_in_insn_format11x2121 -> dg
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT11x_in_insn_format11x2123 -> dh
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format11x2125 -> di
    org.antlr.runtime.BitSet FOLLOW_I_STATEMENT_FORMAT12x_in_insn_format12x2148 -> dj
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT12x_in_insn_format12x2150 -> dk
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format12x2154 -> dl
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format12x2158 -> dm
    org.antlr.runtime.BitSet FOLLOW_I_STATEMENT_FORMAT20bc_in_insn_format20bc2181 -> dn
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT20bc_in_insn_format20bc2183 -> do
    org.antlr.runtime.BitSet FOLLOW_verification_error_type_in_insn_format20bc2185 -> dp
    org.antlr.runtime.BitSet FOLLOW_verification_error_reference_in_insn_format20bc2187 -> dq
    org.antlr.runtime.BitSet FOLLOW_I_STATEMENT_FORMAT20t_in_insn_format20t2210 -> dr
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT20t_in_insn_format20t2212 -> ds
    org.antlr.runtime.BitSet FOLLOW_label_ref_in_insn_format20t2214 -> dt
    org.antlr.runtime.BitSet FOLLOW_I_STATEMENT_FORMAT21c_FIELD_in_insn_format21c_field2237 -> du
    org.antlr.runtime.BitSet FOLLOW_set_in_insn_format21c_field2241 -> dv
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format21c_field2249 -> dw
    org.antlr.runtime.BitSet FOLLOW_field_reference_in_insn_format21c_field2251 -> dx
    org.antlr.runtime.BitSet FOLLOW_I_STATEMENT_FORMAT21c_STRING_in_insn_format21c_string2274 -> dy
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT21c_STRING_in_insn_format21c_string2276 -> dz
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format21c_string2278 -> dA
    org.antlr.runtime.BitSet FOLLOW_string_literal_in_insn_format21c_string2280 -> dB
    org.antlr.runtime.BitSet FOLLOW_I_STATEMENT_FORMAT21c_TYPE_in_insn_format21c_type2303 -> dC
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT21c_TYPE_in_insn_format21c_type2305 -> dD
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format21c_type2307 -> dE
    org.antlr.runtime.BitSet FOLLOW_nonvoid_type_descriptor_in_insn_format21c_type2309 -> dF
    org.antlr.runtime.BitSet FOLLOW_I_STATEMENT_FORMAT21ih_in_insn_format21ih2332 -> dG
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT21ih_in_insn_format21ih2334 -> dH
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format21ih2336 -> dI
    org.antlr.runtime.BitSet FOLLOW_fixed_32bit_literal_in_insn_format21ih2338 -> dJ
    org.antlr.runtime.BitSet FOLLOW_I_STATEMENT_FORMAT21lh_in_insn_format21lh2361 -> dK
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT21lh_in_insn_format21lh2363 -> dL
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format21lh2365 -> dM
    org.antlr.runtime.BitSet FOLLOW_fixed_64bit_literal_in_insn_format21lh2367 -> dN
    org.antlr.runtime.BitSet FOLLOW_I_STATEMENT_FORMAT21s_in_insn_format21s2390 -> dO
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT21s_in_insn_format21s2392 -> dP
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format21s2394 -> dQ
    org.antlr.runtime.BitSet FOLLOW_short_integral_literal_in_insn_format21s2396 -> dR
    org.antlr.runtime.BitSet FOLLOW_I_STATEMENT_FORMAT21t_in_insn_format21t2419 -> dS
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT21t_in_insn_format21t2421 -> dT
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format21t2423 -> dU
    org.antlr.runtime.BitSet FOLLOW_label_ref_in_insn_format21t2425 -> dV
    org.antlr.runtime.BitSet FOLLOW_I_STATEMENT_FORMAT22b_in_insn_format22b2448 -> dW
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT22b_in_insn_format22b2450 -> dX
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format22b2454 -> dY
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format22b2458 -> dZ
    org.antlr.runtime.BitSet FOLLOW_short_integral_literal_in_insn_format22b2460 -> ea
    org.antlr.runtime.BitSet FOLLOW_I_STATEMENT_FORMAT22c_FIELD_in_insn_format22c_field2483 -> eb
    org.antlr.runtime.BitSet FOLLOW_set_in_insn_format22c_field2487 -> ec
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format22c_field2497 -> ed
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format22c_field2501 -> ee
    org.antlr.runtime.BitSet FOLLOW_field_reference_in_insn_format22c_field2503 -> ef
    org.antlr.runtime.BitSet FOLLOW_I_STATEMENT_FORMAT22c_TYPE_in_insn_format22c_type2526 -> eg
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT22c_TYPE_in_insn_format22c_type2528 -> eh
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format22c_type2532 -> ei
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format22c_type2536 -> ej
    org.antlr.runtime.BitSet FOLLOW_nonvoid_type_descriptor_in_insn_format22c_type2538 -> ek
    org.antlr.runtime.BitSet FOLLOW_I_STATEMENT_FORMAT22s_in_insn_format22s2561 -> el
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT22s_in_insn_format22s2563 -> em
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format22s2567 -> en
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format22s2571 -> eo
    org.antlr.runtime.BitSet FOLLOW_short_integral_literal_in_insn_format22s2573 -> ep
    org.antlr.runtime.BitSet FOLLOW_I_STATEMENT_FORMAT22t_in_insn_format22t2596 -> eq
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT22t_in_insn_format22t2598 -> er
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format22t2602 -> es
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format22t2606 -> et
    org.antlr.runtime.BitSet FOLLOW_label_ref_in_insn_format22t2608 -> eu
    org.antlr.runtime.BitSet FOLLOW_I_STATEMENT_FORMAT22x_in_insn_format22x2631 -> ev
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT22x_in_insn_format22x2633 -> ew
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format22x2637 -> ex
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format22x2641 -> ey
    org.antlr.runtime.BitSet FOLLOW_I_STATEMENT_FORMAT23x_in_insn_format23x2664 -> ez
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT23x_in_insn_format23x2666 -> eA
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format23x2670 -> eB
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format23x2674 -> eC
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format23x2678 -> eD
    org.antlr.runtime.BitSet FOLLOW_I_STATEMENT_FORMAT30t_in_insn_format30t2701 -> eE
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT30t_in_insn_format30t2703 -> eF
    org.antlr.runtime.BitSet FOLLOW_label_ref_in_insn_format30t2705 -> eG
    org.antlr.runtime.BitSet FOLLOW_I_STATEMENT_FORMAT31c_in_insn_format31c2728 -> eH
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT31c_in_insn_format31c2730 -> eI
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format31c2732 -> eJ
    org.antlr.runtime.BitSet FOLLOW_string_literal_in_insn_format31c2734 -> eK
    org.antlr.runtime.BitSet FOLLOW_I_STATEMENT_FORMAT31i_in_insn_format31i2757 -> eL
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT31i_in_insn_format31i2759 -> eM
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format31i2761 -> eN
    org.antlr.runtime.BitSet FOLLOW_fixed_32bit_literal_in_insn_format31i2763 -> eO
    org.antlr.runtime.BitSet FOLLOW_I_STATEMENT_FORMAT31t_in_insn_format31t2786 -> eP
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT31t_in_insn_format31t2788 -> eQ
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format31t2790 -> eR
    org.antlr.runtime.BitSet FOLLOW_label_ref_in_insn_format31t2792 -> eS
    org.antlr.runtime.BitSet FOLLOW_I_STATEMENT_FORMAT32x_in_insn_format32x2815 -> eT
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT32x_in_insn_format32x2817 -> eU
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format32x2821 -> eV
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format32x2825 -> eW
    org.antlr.runtime.BitSet FOLLOW_I_STATEMENT_FORMAT35c_METHOD_in_insn_format35c_method2848 -> eX
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT35c_METHOD_in_insn_format35c_method2850 -> eY
    org.antlr.runtime.BitSet FOLLOW_register_list_in_insn_format35c_method2852 -> eZ
    org.antlr.runtime.BitSet FOLLOW_method_reference_in_insn_format35c_method2854 -> fa
    org.antlr.runtime.BitSet FOLLOW_I_STATEMENT_FORMAT35c_TYPE_in_insn_format35c_type2877 -> fb
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT35c_TYPE_in_insn_format35c_type2879 -> fc
    org.antlr.runtime.BitSet FOLLOW_register_list_in_insn_format35c_type2881 -> fd
    org.antlr.runtime.BitSet FOLLOW_nonvoid_type_descriptor_in_insn_format35c_type2883 -> fe
    org.antlr.runtime.BitSet FOLLOW_I_STATEMENT_FORMAT3rc_METHOD_in_insn_format3rc_method2906 -> ff
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT3rc_METHOD_in_insn_format3rc_method2908 -> fg
    org.antlr.runtime.BitSet FOLLOW_register_range_in_insn_format3rc_method2910 -> fh
    org.antlr.runtime.BitSet FOLLOW_method_reference_in_insn_format3rc_method2912 -> fi
    org.antlr.runtime.BitSet FOLLOW_I_STATEMENT_FORMAT3rc_TYPE_in_insn_format3rc_type2935 -> fj
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT3rc_TYPE_in_insn_format3rc_type2937 -> fk
    org.antlr.runtime.BitSet FOLLOW_register_range_in_insn_format3rc_type2939 -> fl
    org.antlr.runtime.BitSet FOLLOW_nonvoid_type_descriptor_in_insn_format3rc_type2941 -> fm
    org.antlr.runtime.BitSet FOLLOW_I_STATEMENT_FORMAT45cc_METHOD_in_insn_format45cc_method2964 -> fn
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT45cc_METHOD_in_insn_format45cc_method2966 -> fo
    org.antlr.runtime.BitSet FOLLOW_register_list_in_insn_format45cc_method2968 -> fp
    org.antlr.runtime.BitSet FOLLOW_method_reference_in_insn_format45cc_method2970 -> fq
    org.antlr.runtime.BitSet FOLLOW_method_prototype_in_insn_format45cc_method2972 -> fr
    org.antlr.runtime.BitSet FOLLOW_I_STATEMENT_FORMAT4rcc_METHOD_in_insn_format4rcc_method2995 -> fs
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT4rcc_METHOD_in_insn_format4rcc_method2997 -> ft
    org.antlr.runtime.BitSet FOLLOW_register_range_in_insn_format4rcc_method2999 -> fu
    org.antlr.runtime.BitSet FOLLOW_method_reference_in_insn_format4rcc_method3001 -> fv
    org.antlr.runtime.BitSet FOLLOW_method_prototype_in_insn_format4rcc_method3003 -> fw
    org.antlr.runtime.BitSet FOLLOW_I_STATEMENT_FORMAT51l_in_insn_format51l_type3026 -> fx
    org.antlr.runtime.BitSet FOLLOW_INSTRUCTION_FORMAT51l_in_insn_format51l_type3028 -> fy
    org.antlr.runtime.BitSet FOLLOW_REGISTER_in_insn_format51l_type3030 -> fz
    org.antlr.runtime.BitSet FOLLOW_fixed_64bit_literal_in_insn_format51l_type3032 -> fA
    org.antlr.runtime.BitSet FOLLOW_I_STATEMENT_ARRAY_DATA_in_insn_array_data_directive3055 -> fB
    org.antlr.runtime.BitSet FOLLOW_I_ARRAY_ELEMENT_SIZE_in_insn_array_data_directive3058 -> fC
    org.antlr.runtime.BitSet FOLLOW_short_integral_literal_in_insn_array_data_directive3060 -> fD
    org.antlr.runtime.BitSet FOLLOW_array_elements_in_insn_array_data_directive3063 -> fE
    org.antlr.runtime.BitSet FOLLOW_I_STATEMENT_PACKED_SWITCH_in_insn_packed_switch_directive3085 -> fF
    org.antlr.runtime.BitSet FOLLOW_I_PACKED_SWITCH_START_KEY_in_insn_packed_switch_directive3088 -> fG
    org.antlr.runtime.BitSet FOLLOW_fixed_32bit_literal_in_insn_packed_switch_directive3090 -> fH
    org.antlr.runtime.BitSet FOLLOW_packed_switch_elements_in_insn_packed_switch_directive3093 -> fI
    org.antlr.runtime.BitSet FOLLOW_I_STATEMENT_SPARSE_SWITCH_in_insn_sparse_switch_directive3117 -> fJ
    org.antlr.runtime.BitSet FOLLOW_sparse_switch_elements_in_insn_sparse_switch_directive3119 -> fK
    org.antlr.runtime.BitSet FOLLOW_ARRAY_TYPE_PREFIX_in_array_descriptor3140 -> fL
    org.antlr.runtime.BitSet FOLLOW_PRIMITIVE_TYPE_in_array_descriptor3144 -> fM
    org.antlr.runtime.BitSet FOLLOW_CLASS_DESCRIPTOR_in_array_descriptor3172 -> fN
    org.antlr.runtime.BitSet FOLLOW_PRIMITIVE_TYPE_in_nonvoid_type_descriptor3190 -> fO
    org.antlr.runtime.BitSet FOLLOW_CLASS_DESCRIPTOR_in_nonvoid_type_descriptor3198 -> fP
    org.antlr.runtime.BitSet FOLLOW_array_descriptor_in_nonvoid_type_descriptor3206 -> fQ
    org.antlr.runtime.BitSet FOLLOW_CLASS_DESCRIPTOR_in_reference_type_descriptor3227 -> fR
    org.antlr.runtime.BitSet FOLLOW_array_descriptor_in_reference_type_descriptor3235 -> fS
    org.antlr.runtime.BitSet FOLLOW_VOID_TYPE_in_type_descriptor3255 -> fT
    org.antlr.runtime.BitSet FOLLOW_nonvoid_type_descriptor_in_type_descriptor3263 -> fU
    org.antlr.runtime.BitSet FOLLOW_long_literal_in_short_integral_literal3281 -> fV
    org.antlr.runtime.BitSet FOLLOW_integer_literal_in_short_integral_literal3293 -> fW
    org.antlr.runtime.BitSet FOLLOW_short_literal_in_short_integral_literal3305 -> fX
    org.antlr.runtime.BitSet FOLLOW_char_literal_in_short_integral_literal3313 -> fY
    org.antlr.runtime.BitSet FOLLOW_byte_literal_in_short_integral_literal3321 -> fZ
    org.antlr.runtime.BitSet FOLLOW_long_literal_in_integral_literal3336 -> ga
    org.antlr.runtime.BitSet FOLLOW_integer_literal_in_integral_literal3348 -> gb
    org.antlr.runtime.BitSet FOLLOW_short_literal_in_integral_literal3356 -> gc
    org.antlr.runtime.BitSet FOLLOW_byte_literal_in_integral_literal3364 -> gd
    org.antlr.runtime.BitSet FOLLOW_INTEGER_LITERAL_in_integer_literal3380 -> ge
    org.antlr.runtime.BitSet FOLLOW_LONG_LITERAL_in_long_literal3395 -> gf
    org.antlr.runtime.BitSet FOLLOW_SHORT_LITERAL_in_short_literal3410 -> gg
    org.antlr.runtime.BitSet FOLLOW_BYTE_LITERAL_in_byte_literal3425 -> gh
    org.antlr.runtime.BitSet FOLLOW_FLOAT_LITERAL_in_float_literal3440 -> gi
    org.antlr.runtime.BitSet FOLLOW_DOUBLE_LITERAL_in_double_literal3455 -> gj
    org.antlr.runtime.BitSet FOLLOW_CHAR_LITERAL_in_char_literal3470 -> gk
    org.antlr.runtime.BitSet FOLLOW_STRING_LITERAL_in_string_literal3485 -> gl
    org.antlr.runtime.BitSet FOLLOW_BOOL_LITERAL_in_bool_literal3504 -> gm
    org.antlr.runtime.BitSet FOLLOW_I_ENCODED_ARRAY_in_array_literal3526 -> gn
    org.antlr.runtime.BitSet FOLLOW_literal_in_array_literal3529 -> go
    org.antlr.runtime.BitSet FOLLOW_I_ANNOTATIONS_in_annotations3554 -> gp
    org.antlr.runtime.BitSet FOLLOW_annotation_in_annotations3557 -> gq
    org.antlr.runtime.BitSet FOLLOW_I_ANNOTATION_in_annotation3586 -> gr
    org.antlr.runtime.BitSet FOLLOW_ANNOTATION_VISIBILITY_in_annotation3588 -> gs
    org.antlr.runtime.BitSet FOLLOW_subannotation_in_annotation3590 -> gt
    org.antlr.runtime.BitSet FOLLOW_I_ANNOTATION_ELEMENT_in_annotation_element3611 -> gu
    org.antlr.runtime.BitSet FOLLOW_SIMPLE_NAME_in_annotation_element3613 -> gv
    org.antlr.runtime.BitSet FOLLOW_literal_in_annotation_element3615 -> gw
    org.antlr.runtime.BitSet FOLLOW_I_SUBANNOTATION_in_subannotation3642 -> gx
    org.antlr.runtime.BitSet FOLLOW_CLASS_DESCRIPTOR_in_subannotation3652 -> gy
    org.antlr.runtime.BitSet FOLLOW_annotation_element_in_subannotation3663 -> gz
    org.antlr.runtime.BitSet FOLLOW_I_ENCODED_FIELD_in_field_literal3702 -> gA
    org.antlr.runtime.BitSet FOLLOW_field_reference_in_field_literal3704 -> gB
    org.antlr.runtime.BitSet FOLLOW_I_ENCODED_METHOD_in_method_literal3725 -> gC
    org.antlr.runtime.BitSet FOLLOW_method_reference_in_method_literal3727 -> gD
    org.antlr.runtime.BitSet FOLLOW_I_ENCODED_ENUM_in_enum_literal3748 -> gE
    org.antlr.runtime.BitSet FOLLOW_field_reference_in_enum_literal3750 -> gF
    317:318:void <init>(org.antlr.runtime.tree.TreeNodeStream) -> <init>
    320:2072:void <init>(org.antlr.runtime.tree.TreeNodeStream,org.antlr.runtime.RecognizerSharedState) -> <init>
    323:323:java.lang.String[] getTokenNames() -> f
    324:324:java.lang.String getGrammarFileName() -> g
    334:335:void setDexBuilder(org.jf.dexlib2.writer.builder.DexBuilder) -> a
    343:344:void setVerboseErrors(boolean) -> b
    348:360:byte parseRegister_nibble(java.lang.String) -> b
    366:376:short parseRegister_byte(java.lang.String) -> c
    382:393:int parseRegister_short(java.lang.String) -> d
    397:400:java.lang.String getErrorMessage(org.antlr.runtime.RecognitionException,java.lang.String[]) -> a
    405:405:java.lang.String getErrorHeader(org.antlr.runtime.RecognitionException) -> b
    413:464:org.jf.dexlib2.iface.ClassDef smali_file() -> i
    481:542:org.jf.smali.smaliTreeWalker$header_return header() -> j
    556:585:org.jf.smali.smaliTreeWalker$class_spec_return class_spec() -> k
    594:621:java.lang.String super_spec() -> l
    630:657:java.lang.String implements_spec() -> m
    666:720:java.util.List implements_list() -> n
    729:782:java.lang.String source_spec() -> o
    791:844:int access_list() -> p
    853:907:java.util.List fields() -> q
    916:970:java.util.List methods() -> r
    979:1053:org.jf.dexlib2.writer.builder.BuilderField field() -> s
    1062:1114:org.jf.dexlib2.iface.value.EncodedValue field_initial_value() -> t
    1123:1402:org.jf.dexlib2.iface.value.EncodedValue literal() -> u
    1411:1563:java.lang.Number fixed_64bit_literal_number() -> v
    1572:1724:long fixed_64bit_literal() -> w
    1733:1869:int fixed_32bit_literal() -> x
    1878:1932:java.util.List array_elements() -> y
    1941:1993:java.util.List packed_switch_elements() -> z
    2002:2061:java.util.List sparse_switch_elements() -> A
    2078:2268:org.jf.dexlib2.writer.builder.BuilderMethod method() -> B
    2282:2322:org.jf.smali.smaliTreeWalker$method_prototype_return method_prototype() -> C
    2337:2376:org.jf.smali.smaliTreeWalker$method_name_and_prototype_return method_name_and_prototype() -> D
    2385:2435:java.util.List method_type_list() -> E
    2444:2499:org.jf.dexlib2.immutable.reference.ImmutableMethodReference method_reference() -> F
    2508:2563:org.jf.dexlib2.immutable.reference.ImmutableFieldReference field_reference() -> G
    2577:2639:org.jf.smali.smaliTreeWalker$registers_directive_return registers_directive() -> H
    2648:2672:void label_def() -> I
    2680:2754:java.util.List catches() -> J
    2763:2806:void catch_directive() -> K
    2814:2851:void catchall_directive() -> L
    2863:2904:void parameters(java.util.List) -> a
    2912:2990:void parameter(java.util.List) -> b
    3000:3116:void debug_directive() -> M
    3124:3151:void line() -> N
    3159:3278:void local() -> O
    3286:3311:void end_local() -> P
    3319:3344:void restart_local() -> Q
    3356:3370:void prologue() -> R
    3382:3396:void epilogue() -> S
    3404:3448:void source() -> T
    3460:3572:void ordered_method_items() -> U
    3580:3601:org.jf.dexlib2.builder.Label label_ref() -> V
    3615:3674:org.jf.smali.smaliTreeWalker$register_list_return register_list() -> W
    3688:3765:org.jf.smali.smaliTreeWalker$register_range_return register_range() -> X
    3774:4005:org.jf.dexlib2.immutable.reference.ImmutableReference verification_error_reference() -> Y
    4014:4037:int verification_error_type() -> Z
    4049:4579:org.jf.smali.smaliTreeWalker$instruction_return instruction() -> aa
    4588:4618:void insn_format10t() -> ab
    4626:4651:void insn_format10x() -> ac
    4659:4696:void insn_format11n() -> ad
    4704:4733:void insn_format11x() -> ae
    4741:4773:void insn_format12x() -> af
    4781:4821:void insn_format20bc() -> ag
    4829:4859:void insn_format20t() -> ah
    4867:4912:void insn_format21c_field() -> ai
    4920:4955:void insn_format21c_string() -> aj
    4963:4998:void insn_format21c_type() -> ak
    5006:5042:void insn_format21ih() -> al
    5050:5086:void insn_format21lh() -> am
    5094:5130:void insn_format21s() -> an
    5138:5172:void insn_format21t() -> ao
    5180:5220:void insn_format22b() -> ap
    5228:5276:void insn_format22c_field() -> aq
    5284:5322:void insn_format22c_type() -> ar
    5330:5369:void insn_format22s() -> as
    5377:5414:void insn_format22t() -> at
    5422:5454:void insn_format22x() -> au
    5462:5497:void insn_format23x() -> av
    5505:5536:void insn_format30t() -> aw
    5544:5579:void insn_format31c() -> ax
    5587:5623:void insn_format31i() -> ay
    5631:5666:void insn_format31t() -> az
    5674:5706:void insn_format32x() -> aA
    5714:5757:void insn_format35c_method() -> aB
    5765:5806:void insn_format35c_type() -> aC
    5814:5857:void insn_format3rc_method() -> aD
    5865:5906:void insn_format3rc_type() -> aE
    5914:5967:void insn_format45cc_method() -> aF
    5975:6027:void insn_format4rcc_method() -> aG
    6035:6071:void insn_format51l_type() -> aH
    6079:6118:void insn_array_data_directive() -> aI
    6126:6164:void insn_packed_switch_directive() -> aJ
    6172:6199:void insn_sparse_switch_directive() -> aK
    6207:6263:java.lang.String array_descriptor() -> aL
    6276:6346:org.jf.smali.smaliTreeWalker$nonvoid_type_descriptor_return nonvoid_type_descriptor() -> aM
    6359:6415:org.jf.smali.smaliTreeWalker$reference_type_descriptor_return reference_type_descriptor() -> aN
    6424:6474:java.lang.String type_descriptor() -> aO
    6483:6593:short short_integral_literal() -> aP
    6602:6693:int integral_literal() -> aQ
    6702:6723:int integer_literal() -> aR
    6732:6753:long long_literal() -> aS
    6762:6783:short short_literal() -> aT
    6792:6813:byte byte_literal() -> aU
    6822:6843:float float_literal() -> aV
    6852:6873:double double_literal() -> aW
    6882:6903:char char_literal() -> aX
    6912:6936:java.lang.String string_literal() -> aY
    6945:6966:boolean bool_literal() -> aZ
    6975:7027:java.util.List array_literal() -> ba
    7036:7099:java.util.Set annotations() -> bb
    7108:7141:org.jf.dexlib2.iface.Annotation annotation() -> bc
    7150:7182:org.jf.dexlib2.iface.AnnotationElement annotation_element() -> bd
    7196:7254:org.jf.smali.smaliTreeWalker$subannotation_return subannotation() -> be
    7263:7293:org.jf.dexlib2.iface.reference.FieldReference field_literal() -> bf
    7302:7332:org.jf.dexlib2.iface.reference.MethodReference method_literal() -> bg
    7341:7371:org.jf.dexlib2.iface.reference.FieldReference enum_literal() -> bh
    51:7765:void <clinit>() -> <clinit>
org.jf.smali.smaliTreeWalker$1 -> org.c.c.dq:
    int val$indexGuess -> a
    org.jf.smali.smaliTreeWalker this$0 -> b
    2966:2966:void <init>(org.jf.smali.smaliTreeWalker,int) -> <init>
    2966:2966:int getRegister() -> d
org.jf.smali.smaliTreeWalker$class_spec_return -> org.c.c.dr:
    java.lang.String type -> b
    int accessFlags -> c
    547:547:void <init>() -> <init>
org.jf.smali.smaliTreeWalker$header_return -> org.c.c.ds:
    java.lang.String classType -> b
    int accessFlags -> c
    java.lang.String superType -> d
    java.util.List implementsList -> e
    java.lang.String sourceSpec -> f
    469:469:void <init>() -> <init>
org.jf.smali.smaliTreeWalker$instruction_return -> org.c.c.dt:
    4042:4042:void <init>() -> <init>
org.jf.smali.smaliTreeWalker$method_name_and_prototype_return -> org.c.c.du:
    java.lang.String name -> b
    java.util.List parameters -> c
    java.lang.String returnType -> d
    2327:2327:void <init>() -> <init>
org.jf.smali.smaliTreeWalker$method_prototype_return -> org.c.c.dv:
    java.util.List parameters -> b
    java.lang.String returnType -> c
    2273:2273:void <init>() -> <init>
org.jf.smali.smaliTreeWalker$method_scope -> org.c.c.dw:
    boolean isStatic -> a
    int totalMethodRegisters -> b
    int methodParameterRegisters -> c
    org.jf.dexlib2.builder.MethodImplementationBuilder methodBuilder -> d
    2066:2066:void <init>() -> <init>
org.jf.smali.smaliTreeWalker$nonvoid_type_descriptor_return -> org.c.c.dx:
    java.lang.String type -> b
    6268:6268:void <init>() -> <init>
org.jf.smali.smaliTreeWalker$reference_type_descriptor_return -> org.c.c.dy:
    java.lang.String type -> b
    6351:6351:void <init>() -> <init>
org.jf.smali.smaliTreeWalker$register_list_return -> org.c.c.dz:
    byte[] registers -> b
    byte registerCount -> c
    3606:3606:void <init>() -> <init>
org.jf.smali.smaliTreeWalker$register_range_return -> org.c.c.ea:
    int startRegister -> b
    int endRegister -> c
    3679:3679:void <init>() -> <init>
org.jf.smali.smaliTreeWalker$registers_directive_return -> org.c.c.eb:
    boolean isLocalsDirective -> b
    int registers -> c
    2568:2568:void <init>() -> <init>
org.jf.smali.smaliTreeWalker$subannotation_return -> org.c.c.ec:
    java.lang.String annotationType -> b
    java.util.List elements -> c
    7187:7187:void <init>() -> <init>
org.jf.util.AbstractForwardSequentialList -> org.c.d.a:
    41:41:void <init>() -> <init>
    44:52:java.util.Iterator iterator(int) -> a
    java.util.Iterator iterator() -> iterator
    61:66:java.util.ListIterator listIterator(int) -> listIterator
    116:116:java.util.ListIterator listIterator() -> listIterator
    41:41:java.util.Iterator access$000(org.jf.util.AbstractForwardSequentialList,int) -> a
org.jf.util.AbstractForwardSequentialList$1 -> org.c.d.b:
    int index -> d
    java.util.Iterator forwardIterator -> e
    int val$initialIndex -> a
    java.util.Iterator val$initialIterator -> b
    org.jf.util.AbstractForwardSequentialList this$0 -> c
    66:68:void <init>(org.jf.util.AbstractForwardSequentialList,int,java.util.Iterator) -> <init>
    72:79:java.util.Iterator getForwardIterator() -> a
    83:83:boolean hasNext() -> hasNext
    87:87:boolean hasPrevious() -> hasPrevious
    91:93:java.lang.Object next() -> next
    97:97:int nextIndex() -> nextIndex
    101:105:java.lang.Object previous() -> previous
    110:110:int previousIndex() -> previousIndex
org.jf.util.AbstractListIterator -> org.c.d.c:
    36:36:void <init>() -> <init>
    39:39:boolean hasNext() -> hasNext
    44:44:java.lang.Object next() -> next
    49:49:boolean hasPrevious() -> hasPrevious
    54:54:java.lang.Object previous() -> previous
    59:59:int nextIndex() -> nextIndex
    64:64:int previousIndex() -> previousIndex
    69:69:void remove() -> remove
    74:74:void set(java.lang.Object) -> set
    79:79:void add(java.lang.Object) -> add
org.jf.util.AlignmentUtils -> org.c.d.d:
    boolean $assertionsDisabled -> a
    31:31:void <init>() -> <init>
    33:35:int alignOffset(int,int) -> a
    31:31:void <clinit>() -> <clinit>
org.jf.util.BitSetUtils -> org.c.d.e:
    38:42:java.util.BitSet bitSetOfIndexes(int[]) -> a
org.jf.util.CharSequenceUtils -> org.c.d.f:
    com.google.common.base.Function TO_STRING -> a
    48:49:boolean listEquals(java.util.List,java.util.List) -> a
    41:41:void <clinit>() -> <clinit>
org.jf.util.ClassFileNameHandler -> org.c.d.g:
    int NO_VALUE -> b
    int CASE_INSENSITIVE -> c
    int CASE_SENSITIVE -> d
    int forcedCaseSensitivity -> e
    org.jf.util.ClassFileNameHandler$DirectoryEntry top -> f
    java.lang.String fileExtension -> g
    boolean modifyWindowsReservedFilenames -> h
    java.util.regex.Pattern reservedFileNameRegex -> i
    boolean $assertionsDisabled -> a
    59:72:void <init>(java.io.File,java.lang.String) -> <init>
    84:84:int getMaxFilenameLength() -> a
    90:127:java.io.File getUniqueFilenameForClass(java.lang.String) -> a
    133:146:java.io.File addUniqueChild(org.jf.util.ClassFileNameHandler$DirectoryEntry,java.lang.String[],int) -> a
    151:158:int utf8Length(java.lang.String) -> d
    162:169:int utf8Length(int) -> a
    183:229:java.lang.String shortenPathComponent(java.lang.String,int) -> a
    233:233:boolean isWindows() -> b
    239:239:boolean isReservedFileName(java.lang.String) -> e
    439:450:java.lang.String addSuffixBeforeExtension(java.lang.String,java.lang.String) -> b
    52:52:boolean access$200(org.jf.util.ClassFileNameHandler) -> a
    52:52:boolean access$300(java.lang.String) -> b
    52:52:java.lang.String access$400(java.lang.String,java.lang.String) -> a
    52:52:int access$500(java.lang.String) -> c
    52:52:int access$600(org.jf.util.ClassFileNameHandler) -> b
    52:52:int access$700(org.jf.util.ClassFileNameHandler) -> c
    52:236:void <clinit>() -> <clinit>
org.jf.util.ClassFileNameHandler$1 -> org.c.d.h:
org.jf.util.ClassFileNameHandler$DirectoryEntry -> org.c.d.i:
    java.io.File file -> g
    int caseSensitivity -> h
    com.google.common.collect.Multimap children -> i
    boolean $assertionsDisabled -> a
    org.jf.util.ClassFileNameHandler this$0 -> b
    289:301:void <init>(org.jf.util.ClassFileNameHandler,java.io.File) -> <init>
    289:305:void <init>(org.jf.util.ClassFileNameHandler,org.jf.util.ClassFileNameHandler$DirectoryEntry,java.lang.String) -> <init>
    308:319:org.jf.util.ClassFileNameHandler$FileSystemEntry addChild(org.jf.util.ClassFileNameHandler$FileSystemEntry) -> a
    324:327:java.lang.String makePhysicalName(int) -> a
    332:337:void setSuffix(int) -> b
    340:365:boolean isCaseSensitive() -> a
    370:419:boolean testCaseSensitivity(java.io.File) -> a
    288:288:java.io.File access$100(org.jf.util.ClassFileNameHandler$DirectoryEntry) -> a
    288:288:void <clinit>() -> <clinit>
org.jf.util.ClassFileNameHandler$FileEntry -> org.c.d.j:
    org.jf.util.ClassFileNameHandler this$0 -> a
    425:427:void <init>(org.jf.util.ClassFileNameHandler,org.jf.util.ClassFileNameHandler$DirectoryEntry,java.lang.String) -> <init>
    431:434:java.lang.String makePhysicalName(int) -> a
    424:424:void <init>(org.jf.util.ClassFileNameHandler,org.jf.util.ClassFileNameHandler$DirectoryEntry,java.lang.String,org.jf.util.ClassFileNameHandler$1) -> <init>
org.jf.util.ClassFileNameHandler$FileSystemEntry -> org.c.d.k:
    org.jf.util.ClassFileNameHandler$DirectoryEntry parent -> c
    java.lang.String logicalName -> d
    java.lang.String physicalName -> e
    org.jf.util.ClassFileNameHandler this$0 -> f
    245:250:void <init>(org.jf.util.ClassFileNameHandler,org.jf.util.ClassFileNameHandler$DirectoryEntry,java.lang.String) -> <init>
    253:266:java.lang.String getNormalizedName(boolean) -> a
    271:271:java.lang.String getPhysicalName() -> b
    275:283:void setSuffix(int) -> b
    java.lang.String makePhysicalName(int) -> a
    242:242:void <init>(org.jf.util.ClassFileNameHandler,org.jf.util.ClassFileNameHandler$DirectoryEntry,java.lang.String,org.jf.util.ClassFileNameHandler$1) -> <init>
org.jf.util.CollectionUtils -> org.c.d.l:
    44:48:int listHashCode(java.lang.Iterable) -> a
    52:60:int lastIndexOf(java.lang.Iterable,com.google.common.base.Predicate) -> a
    65:72:int compareAsList(java.util.Collection,java.util.Collection) -> a
    78:92:int compareAsIterable(java.util.Comparator,java.lang.Iterable,java.lang.Iterable) -> a
    139:144:boolean isNaturalSortedSet(java.lang.Iterable) -> b
    162:165:java.util.SortedSet toNaturalSortedSet(java.util.Collection) -> a
    194:205:int compareAsSet(java.util.Collection,java.util.Collection) -> b
org.jf.util.ExceptionWithContext -> org.c.d.m:
    java.lang.StringBuffer context -> a
    51:58:org.jf.util.ExceptionWithContext withContext(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> a
    67:68:void <init>(java.lang.String,java.lang.Object[]) -> <init>
    76:77:void <init>(java.lang.Throwable) -> <init>
    86:97:void <init>(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> <init>
    100:103:java.lang.String formatMessage(java.lang.String,java.lang.Object[]) -> a
    109:111:void printStackTrace(java.io.PrintStream) -> printStackTrace
    116:118:void printStackTrace(java.io.PrintWriter) -> printStackTrace
    126:134:void addContext(java.lang.String) -> a
org.jf.util.Hex -> org.c.d.n:
    65:71:java.lang.String u4(int) -> a
    129:135:java.lang.String u1(int) -> b
org.jf.util.ImmutableConverter -> org.c.d.o:
    44:44:void <init>() -> <init>
    boolean isImmutable(java.lang.Object) -> b
    java.lang.Object makeImmutable(java.lang.Object) -> a
    50:72:com.google.common.collect.ImmutableList toList(java.lang.Iterable) -> a
    81:103:com.google.common.collect.ImmutableSet toSet(java.lang.Iterable) -> b
org.jf.util.ImmutableConverter$1 -> org.c.d.p:
    java.util.Iterator val$iter -> a
    org.jf.util.ImmutableConverter this$0 -> b
    72:72:void <init>(org.jf.util.ImmutableConverter,java.util.Iterator) -> <init>
    73:73:boolean hasNext() -> hasNext
    74:74:java.lang.Object next() -> next
    75:75:void remove() -> remove
org.jf.util.ImmutableConverter$2 -> org.c.d.q:
    java.util.Iterator val$iter -> a
    org.jf.util.ImmutableConverter this$0 -> b
    103:103:void <init>(org.jf.util.ImmutableConverter,java.util.Iterator) -> <init>
    104:104:boolean hasNext() -> hasNext
    105:105:java.lang.Object next() -> next
    106:106:void remove() -> remove
org.jf.util.ImmutableUtils -> org.c.d.r:
    43:46:com.google.common.collect.ImmutableList nullToEmptyList(com.google.common.collect.ImmutableList) -> a
    50:53:com.google.common.collect.ImmutableSet nullToEmptySet(com.google.common.collect.ImmutableSet) -> a
org.jf.util.IndentingWriter -> org.c.d.s:
    java.io.Writer writer -> a
    char[] buffer -> b
    int indentLevel -> c
    boolean beginningOfLine -> d
    java.lang.String newLine -> e
    36:43:void <init>(java.io.Writer) -> <init>
    46:49:void writeIndent() -> a
    53:63:void write(int) -> write
    69:74:void writeLine(char[],int,int) -> a
    81:86:void writeLine(java.lang.String,int,int) -> a
    90:91:void write(char[]) -> write
    95:110:void write(char[],int,int) -> write
    114:115:void write(java.lang.String) -> write
    119:133:void write(java.lang.String,int,int) -> write
    137:138:java.io.Writer append(java.lang.CharSequence) -> append
    143:144:java.io.Writer append(java.lang.CharSequence,int,int) -> append
    149:150:java.io.Writer append(char) -> append
    155:156:void flush() -> flush
    160:161:void close() -> close
    164:168:void indent(int) -> a
    171:175:void deindent(int) -> b
    178:193:void printUnsignedLongAsHex(long) -> a
    196:213:void printSignedLongAsDec(long) -> b
    216:233:void printSignedIntAsDec(int) -> c
    236:243:void printUnsignedIntAsDec(int) -> d
    34:34:java.lang.Appendable append(char) -> append
    34:34:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    34:34:java.lang.Appendable append(java.lang.CharSequence) -> append
    39:39:void <clinit>() -> <clinit>
org.jf.util.LinearSearch -> org.c.d.t:
    49:82:int linearSearch(java.util.List,java.util.Comparator,java.lang.Object,int) -> a
org.jf.util.NibbleUtils -> org.c.d.u:
    42:42:int extractHighSignedNibble(int) -> a
    62:62:int extractHighUnsignedNibble(int) -> b
    72:72:int extractLowUnsignedNibble(int) -> c
org.jf.util.NumberUtils -> org.c.d.v:
    int canonicalFloatNaN -> a
    int maxFloat -> b
    int piFloat -> c
    int eFloat -> d
    long canonicalDoubleNaN -> e
    long maxDouble -> f
    long piDouble -> g
    long eDouble -> h
    java.text.DecimalFormat format -> i
    52:97:boolean isLikelyFloat(int) -> a
    103:139:boolean isLikelyDouble(long) -> a
    37:47:void <clinit>() -> <clinit>
org.jf.util.PathUtil -> org.c.d.w:
    43:47:java.io.File getRelativeFile(java.io.File,java.io.File) -> a
    51:98:java.lang.String getRelativeFileInternal(java.io.File,java.io.File) -> b
    102:116:java.util.List getPathComponents(java.io.File) -> a
org.jf.util.RandomAccessFileInputStream -> org.c.d.x:
    int filePosition -> a
    java.io.RandomAccessFile raf -> b
    43:46:void <init>(java.io.RandomAccessFile,int) -> <init>
    49:51:int read() -> read
    55:58:int read(byte[]) -> read
    62:65:int read(byte[],int,int) -> read
    69:71:long skip(long) -> skip
    75:75:int available() -> available
    79:79:boolean markSupported() -> markSupported
org.jf.util.RandomAccessFileOutputStream -> org.c.d.y:
    int filePosition -> a
    java.io.RandomAccessFile raf -> b
    43:46:void <init>(java.io.RandomAccessFile,int) -> <init>
    49:52:void write(int) -> write
    55:58:void write(byte[]) -> write
    61:64:void write(byte[],int,int) -> write
org.jf.util.SparseArray -> org.c.d.z:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    51:52:void <init>() -> <init>
    45:63:void <init>(int) -> <init>
    70:70:java.lang.Object get(int) -> a
    78:83:java.lang.Object get(int,java.lang.Object) -> a
    111:133:void gc() -> c
    141:185:void put(int,java.lang.Object) -> b
    192:196:int size() -> a
    205:209:int keyAt(int) -> b
    218:222:java.lang.Object valueAt(int) -> c
    244:248:int indexOfKey(int) -> d
    291:318:void append(int,java.lang.Object) -> c
    326:340:void ensureCapacity(int) -> e
    343:359:int binarySearch(int[],int,int,int) -> a
    367:367:java.util.List getValues() -> b
    44:44:void <clinit>() -> <clinit>
org.jf.util.SparseIntArray -> org.c.d.aa:
    int[] mKeys -> a
    int[] mValues -> b
    int mSize -> c
    44:45:void <init>() -> <init>
    52:56:void <init>(int) -> <init>
    71:76:int get(int,int) -> a
    124:155:void put(int,int) -> b
    220:243:void append(int,int) -> c
    246:262:int binarySearch(int[],int,int,int) -> a
org.jf.util.StringUtils -> org.c.d.ab:
    39:58:void writeEscapedChar(java.io.Writer,char) -> a
    61:84:void writeEscapedString(java.io.Writer,java.lang.String) -> a
    87:114:java.lang.String escapeString(java.lang.String) -> a
org.jf.util.Utf8Utils -> org.c.d.ac:
    java.lang.ThreadLocal localBuffer -> a
    193:270:java.lang.String utf8BytesWithUtf16LengthToString(byte[],int,int,int[]) -> a
    283:284:java.lang.String throwBadUtf8(int,int) -> a
    69:69:void <clinit>() -> <clinit>
org.jf.util.Utf8Utils$1 -> org.c.d.ad:
    70:70:void <init>() -> <init>
    73:73:char[] initialValue() -> a
    70:70:java.lang.Object initialValue() -> initialValue
org.jf.util.jcommander.Command -> org.c.d.a.a:
    java.util.List commandAncestors -> b
    47:49:void <init>(java.util.List) -> <init>
org.xmlpull.mxp1.MXParser -> org.xmlpull.mxp1.MXParser:
    boolean allStringsInterned -> a
    boolean processNamespaces -> b
    boolean roundtripSupported -> c
    java.lang.String location -> d
    int lineNumber -> e
    int columnNumber -> f
    boolean seenRoot -> g
    boolean reachedEnd -> h
    int eventType -> i
    boolean emptyElementTag -> j
    int depth -> k
    char[][] elRawName -> l
    int[] elRawNameEnd -> m
    int[] elRawNameLine -> n
    java.lang.String[] elName -> o
    java.lang.String[] elPrefix -> p
    java.lang.String[] elUri -> q
    int[] elNamespaceCount -> r
    int attributeCount -> s
    java.lang.String[] attributeName -> t
    int[] attributeNameHash -> u
    java.lang.String[] attributePrefix -> v
    java.lang.String[] attributeUri -> w
    java.lang.String[] attributeValue -> x
    int namespaceEnd -> y
    java.lang.String[] namespacePrefix -> z
    int[] namespacePrefixHash -> A
    java.lang.String[] namespaceUri -> B
    int entityEnd -> C
    java.lang.String[] entityName -> D
    char[][] entityNameBuf -> E
    java.lang.String[] entityReplacement -> F
    char[][] entityReplacementBuf -> G
    int[] entityNameHash -> H
    java.io.Reader reader -> I
    java.lang.String inputEncoding -> J
    java.io.InputStream inputStream -> K
    int bufLoadFactor -> L
    char[] buf -> M
    int bufSoftLimit -> N
    boolean preventBufferCompaction -> O
    int bufAbsoluteStart -> P
    int bufStart -> Q
    int bufEnd -> R
    int pos -> S
    int posStart -> T
    int posEnd -> U
    char[] pc -> V
    int pcStart -> W
    int pcEnd -> X
    boolean usePC -> Y
    boolean seenStartTag -> Z
    boolean seenEndTag -> aa
    boolean pastEndTag -> ab
    boolean seenAmpersand -> ac
    boolean seenMarkup -> ad
    boolean seenDocdecl -> ae
    boolean tokenize -> af
    java.lang.String text -> ag
    java.lang.String entityRefName -> ah
    java.lang.String xmlDeclVersion -> ai
    java.lang.Boolean xmlDeclStandalone -> aj
    java.lang.String xmlDeclContent -> ak
    char[] charRefOneCharBuf -> al
    char[] VERSION -> am
    char[] NCODING -> an
    char[] TANDALONE -> ao
    char[] YES -> ap
    char[] NO -> aq
    boolean[] lookupNameStartChar -> ar
    boolean[] lookupNameChar -> as
    65:65:void resetStringCache() -> a
    68:68:java.lang.String newString(char[],int,int) -> a
    72:72:java.lang.String newStringIntern(char[],int,int) -> b
    108:170:void ensureElementsCapacity() -> b
    191:225:void ensureAttributesCapacity(int) -> a
    234:263:void ensureNamespacesCapacity(int) -> b
    271:285:int fastHash(char[],int,int) -> c
    299:328:void ensureEntityCapacity() -> c
    382:422:void reset() -> d
    337:2153:void <init>() -> <init>
    440:470:void setFeature(java.lang.String,boolean) -> setFeature
    475:490:boolean getFeature(java.lang.String) -> getFeature
    497:502:void setProperty(java.lang.String,java.lang.Object) -> setProperty
    507:517:java.lang.Object getProperty(java.lang.String) -> getProperty
    523:525:void setInput(java.io.Reader) -> setInput
    530:553:void setInput(java.io.InputStream,java.lang.String) -> setInput
    556:556:java.lang.String getInputEncoding() -> getInputEncoding
    566:581:void defineEntityReplacementText(java.lang.String,java.lang.String) -> defineEntityReplacementText
    586:593:int getNamespaceCount(int) -> getNamespaceCount
    602:605:java.lang.String getNamespacePrefix(int) -> getNamespacePrefix
    614:617:java.lang.String getNamespaceUri(int) -> getNamespaceUri
    626:645:java.lang.String getNamespace(java.lang.String) -> getNamespace
    651:651:int getDepth() -> getDepth
    657:671:int findFragment(int,char[],int,int) -> a
    681:693:java.lang.String getPositionDescription() -> getPositionDescription
    701:701:int getLineNumber() -> getLineNumber
    706:706:int getColumnNumber() -> getColumnNumber
    712:729:boolean isWhitespace() -> isWhitespace
    734:751:java.lang.String getText() -> getText
    756:785:char[] getTextCharacters(int[]) -> getTextCharacters
    800:806:java.lang.String getNamespace() -> getNamespace
    827:838:java.lang.String getName() -> getName
    844:850:java.lang.String getPrefix() -> getPrefix
    859:861:boolean isEmptyElementTag() -> isEmptyElementTag
    866:867:int getAttributeCount() -> getAttributeCount
    872:877:java.lang.String getAttributeNamespace(int) -> getAttributeNamespace
    882:886:java.lang.String getAttributeName(int) -> getAttributeName
    891:896:java.lang.String getAttributePrefix(int) -> getAttributePrefix
    900:904:java.lang.String getAttributeType(int) -> getAttributeType
    908:912:boolean isAttributeDefault(int) -> isAttributeDefault
    917:921:java.lang.String getAttributeValue(int) -> getAttributeValue
    927:961:java.lang.String getAttributeValue(java.lang.String,java.lang.String) -> getAttributeValue
    968:968:int getEventType() -> getEventType
    974:1001:void require(int,java.lang.String,java.lang.String) -> require
    1012:1022:void skipSubTree() -> skipSubTree
    1054:1071:java.lang.String nextText() -> nextText
    1078:1086:int nextTag() -> nextTag
    1092:1093:int next() -> next
    1099:1100:int nextToken() -> nextToken
    1107:1395:int nextImpl() -> e
    1407:1524:int parseProlog() -> f
    1530:1655:int parseEpilog() -> g
    1663:1717:int parseEndTag() -> parseEndTag
    1724:1900:int parseStartTag() -> parseStartTag
    1909:2150:char parseAttribute() -> h
    2162:2276:char[] parseEntityRef() -> i
    2284:2310:char[] lookuEntityReplacement(int) -> c
    2320:2404:void parseComment() -> j
    2414:2531:boolean parsePI() -> k
    2554:2594:void parseXmlDecl(char) -> a
    2600:2735:void parseXmlDeclWithVersion(int,int) -> a
    2740:2806:void parseDocdecl() -> l
    2819:2927:void parseCDSect(boolean) -> a
    2930:3040:void fillBuf() -> m
    3045:3055:char more() -> n
    3070:3076:void ensurePC(int) -> d
    3081:3089:void joinPC() -> o
    3094:3103:char requireInput(char,char[]) -> a
    3109:3114:char requireNextS() -> p
    3120:3121:char skipS(char) -> b
    3134:3134:void setName(char) -> g
    3137:3137:void setNameStart(char) -> h
    3157:3157:boolean isNameStartChar(char) -> c
    3191:3191:boolean isNameChar(char) -> d
    3213:3213:boolean isS(char) -> e
    3223:3234:java.lang.String printable(char) -> f
    3238:3245:java.lang.String printable(java.lang.String) -> a
    2540:3153:void <clinit>() -> <clinit>
org.xmlpull.mxp1.MXParserCachingStrings -> org.xmlpull.mxp1.MXParserCachingStrings:
    int cacheEntriesCount -> at
    int cacheEntriesThreshold -> au
    char[][] keys -> av
    java.lang.String[] values -> aw
    53:218:java.lang.Object clone() -> clone
    222:229:char[][] cloneCCArr(char[][]) -> a
    233:236:void <init>() -> <init>
    244:254:void setFeature(java.lang.String,boolean) -> setFeature
    258:261:boolean getFeature(java.lang.String) -> getFeature
    279:279:void finalize() -> finalize
    286:289:java.lang.String newString(char[],int,int) -> a
    300:321:java.lang.String newStringIntern(char[],int,int) -> b
    327:342:void initStringCache() -> q
    347:348:void resetStringCache() -> a
    352:382:void rehash() -> r
    386:394:boolean keysAreEqual(char[],int,int,char[],int,int) -> a
org.xmlpull.mxp1.MXParserFactory -> org.xmlpull.mxp1.MXParserFactory:
    boolean stringCachedParserAvailable -> a
    27:27:void <init>() -> <init>
    33:51:org.xmlpull.v1.XmlPullParser newPullParser() -> newPullParser
    56:56:org.xmlpull.v1.XmlSerializer newSerializer() -> newSerializer
    30:30:void <clinit>() -> <clinit>
org.xmlpull.mxp1.MXParserNonValidating -> org.xmlpull.mxp1.MXParserNonValidating:
    boolean processDocDecl -> ax
    27:28:void <init>() -> <init>
    36:46:void setFeature(java.lang.String,boolean) -> setFeature
    50:53:boolean getFeature(java.lang.String) -> getFeature
    60:60:char more() -> n
    67:93:char[] lookuEntityReplacement(int) -> c
    101:149:void parseDocdecl() -> l
    160:160:char processExternalId(char) -> g
    171:181:void processInternalSubset() -> r
    187:187:void processPEReference() -> s
    196:235:void processMarkupDecl(char) -> h
    251:255:void processElementDecl(char) -> i
    274:274:void processAttlistDecl(char) -> j
    293:293:void processEntityDecl(char) -> k
    303:303:void processNotationDecl(char) -> l
    310:317:char readName(char) -> m
org.xmlpull.mxp1_serializer.MXSerializer -> org.xmlpull.mxp1_serializer.MXSerializer:
    java.lang.String FEATURE_SERIALIZER_ATTVALUE_USE_APOSTROPHE -> a
    java.lang.String FEATURE_NAMES_INTERNED -> b
    java.lang.String PROPERTY_SERIALIZER_INDENTATION -> c
    java.lang.String PROPERTY_SERIALIZER_LINE_SEPARATOR -> d
    boolean namesInterned -> e
    boolean attributeUseApostrophe -> f
    java.lang.String indentationString -> g
    java.lang.String lineSeparator -> h
    java.lang.String location -> i
    java.io.Writer out -> j
    int autoDeclaredPrefixes -> k
    int depth -> l
    java.lang.String[] elNamespace -> m
    java.lang.String[] elName -> n
    java.lang.String[] elPrefix -> o
    int[] elNamespaceCount -> p
    int namespaceEnd -> q
    java.lang.String[] namespacePrefix -> r
    java.lang.String[] namespaceUri -> s
    boolean finished -> t
    boolean pastRoot -> u
    boolean setPrefixCalled -> v
    boolean startTagIncomplete -> w
    boolean doIndent -> x
    boolean seenTag -> y
    boolean seenBracket -> z
    boolean seenBracketBracket -> A
    int BUF_LEN -> J
    char[] buf -> B
    java.lang.String[] precomputedPrefixes -> C
    boolean checkNamesInterned -> K
    int offsetNewLine -> D
    int indentationJump -> E
    char[] indentationBuf -> F
    int maxIndentLevel -> G
    boolean writeLineSepartor -> H
    boolean writeIndentation -> I
    26:93:void <init>() -> <init>
    96:101:void checkInterning(java.lang.String) -> c
    104:147:void reset() -> a
    151:182:void ensureElementsCapacity() -> b
    190:218:void ensureNamespacesCapacity() -> c
    224:234:void setFeature(java.lang.String,boolean) -> setFeature
    238:246:boolean getFeature(java.lang.String) -> getFeature
    263:296:void rebuildIndentationBuf() -> d
    300:303:void writeIndent() -> e
    308:328:void setProperty(java.lang.String,java.lang.Object) -> setProperty
    332:342:java.lang.Object getProperty(java.lang.String) -> getProperty
    347:347:java.lang.String getLocation() -> g
    353:353:java.io.Writer getWriter() -> getWriter
    358:360:void setOutput(java.io.Writer) -> setOutput
    364:371:void setOutput(java.io.OutputStream,java.lang.String) -> setOutput
    375:404:void startDocument(java.lang.String,java.lang.Boolean) -> startDocument
    409:416:void endDocument() -> endDocument
    420:457:void setPrefix(java.lang.String,java.lang.String) -> setPrefix
    460:460:java.lang.String lookupOrDeclarePrefix(java.lang.String) -> a
    465:465:java.lang.String getPrefix(java.lang.String,boolean) -> getPrefix
    471:504:java.lang.String getPrefix(java.lang.String,boolean,boolean) -> a
    510:530:java.lang.String generatePrefix(java.lang.String) -> d
    536:536:int getDepth() -> getDepth
    541:541:java.lang.String getNamespace() -> getNamespace
    546:546:java.lang.String getName() -> getName
    551:634:org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String) -> startTag
    640:675:org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String) -> attribute
    679:700:void closeStartTag() -> f
    705:725:void writeNamespaceDeclarations() -> h
    734:792:org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String) -> endTag
    798:801:org.xmlpull.v1.XmlSerializer text(java.lang.String) -> text
    806:809:org.xmlpull.v1.XmlSerializer text(char[],int,int) -> text
    814:819:void cdsect(java.lang.String) -> cdsect
    823:828:void entityRef(java.lang.String) -> entityRef
    832:837:void processingInstruction(java.lang.String) -> processingInstruction
    841:846:void comment(java.lang.String) -> comment
    850:855:void docdecl(java.lang.String) -> docdecl
    859:866:void ignorableWhitespace(java.lang.String) -> ignorableWhitespace
    870:872:void flush() -> flush
    879:934:void writeAttributeValue(java.lang.String,java.io.Writer) -> a
    939:1006:void writeElementContent(java.lang.String,java.io.Writer) -> b
    1011:1084:void writeElementContent(char[],int,int,java.io.Writer) -> a
    1088:1096:java.lang.String printable(java.lang.String) -> b
    1100:1102:java.lang.String printable(char) -> a
    1107:1141:void addPrintable(java.lang.StringBuffer,char) -> a
    79:91:void <clinit>() -> <clinit>
org.xmlpull.renamed.MXSerializer -> org.xmlpull.renamed.MXSerializer:
    java.lang.String FEATURE_SERIALIZER_ATTVALUE_USE_APOSTROPHE -> a
    java.lang.String FEATURE_NAMES_INTERNED -> b
    java.lang.String PROPERTY_SERIALIZER_INDENTATION -> c
    java.lang.String PROPERTY_SERIALIZER_LINE_SEPARATOR -> d
    boolean namesInterned -> e
    boolean attributeUseApostrophe -> f
    java.lang.String indentationString -> g
    java.lang.String lineSeparator -> h
    java.lang.String location -> i
    java.io.Writer out -> j
    int autoDeclaredPrefixes -> k
    int depth -> l
    java.lang.String[] elNamespace -> m
    java.lang.String[] elName -> n
    java.lang.String[] elPrefix -> o
    int[] elNamespaceCount -> p
    int namespaceEnd -> q
    java.lang.String[] namespacePrefix -> r
    java.lang.String[] namespaceUri -> s
    boolean finished -> t
    boolean pastRoot -> u
    boolean setPrefixCalled -> v
    boolean startTagIncomplete -> w
    boolean doIndent -> x
    boolean seenTag -> y
    boolean seenBracket -> z
    boolean seenBracketBracket -> A
    int BUF_LEN -> J
    char[] buf -> B
    java.lang.String[] precomputedPrefixes -> C
    boolean checkNamesInterned -> K
    int offsetNewLine -> D
    int indentationJump -> E
    char[] indentationBuf -> F
    int maxIndentLevel -> G
    boolean writeLineSepartor -> H
    boolean writeIndentation -> I
    46:107:void <init>() -> <init>
    110:115:void checkInterning(java.lang.String) -> c
    118:160:void reset() -> b
    163:198:void ensureElementsCapacity() -> c
    207:234:void ensureNamespacesCapacity() -> d
    239:249:void setFeature(java.lang.String,boolean) -> setFeature
    253:261:boolean getFeature(java.lang.String) -> getFeature
    279:311:void rebuildIndentationBuf() -> e
    315:319:void writeIndent() -> f
    324:346:void setProperty(java.lang.String,java.lang.Object) -> setProperty
    350:360:java.lang.Object getProperty(java.lang.String) -> getProperty
    365:365:java.lang.String getLocation() -> a
    371:371:java.io.Writer getWriter() -> getWriter
    376:378:void setOutput(java.io.Writer) -> setOutput
    382:390:void setOutput(java.io.OutputStream,java.lang.String) -> setOutput
    395:424:void startDocument(java.lang.String,java.lang.Boolean) -> startDocument
    429:436:void endDocument() -> endDocument
    440:480:void setPrefix(java.lang.String,java.lang.String) -> setPrefix
    483:483:java.lang.String lookupOrDeclarePrefix(java.lang.String) -> a
    488:488:java.lang.String getPrefix(java.lang.String,boolean) -> getPrefix
    494:530:java.lang.String getPrefix(java.lang.String,boolean,boolean) -> a
    536:557:java.lang.String generatePrefix(java.lang.String) -> d
    563:563:int getDepth() -> getDepth
    568:568:java.lang.String getNamespace() -> getNamespace
    573:573:java.lang.String getName() -> getName
    579:671:org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String) -> startTag
    677:714:org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String) -> attribute
    718:744:void closeStartTag() -> g
    748:767:void writeNamespaceDeclarations() -> h
    777:838:org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String) -> endTag
    844:849:org.xmlpull.v1.XmlSerializer text(java.lang.String) -> text
    855:860:org.xmlpull.v1.XmlSerializer text(char[],int,int) -> text
    865:872:void cdsect(java.lang.String) -> cdsect
    876:883:void entityRef(java.lang.String) -> entityRef
    887:894:void processingInstruction(java.lang.String) -> processingInstruction
    898:905:void comment(java.lang.String) -> comment
    909:916:void docdecl(java.lang.String) -> docdecl
    920:930:void ignorableWhitespace(java.lang.String) -> ignorableWhitespace
    934:937:void flush() -> flush
    944:1010:void writeAttributeValue(java.lang.String,java.io.Writer) -> a
    1015:1090:void writeElementContent(java.lang.String,java.io.Writer) -> b
    1095:1168:void writeElementContent(char[],int,int,java.io.Writer) -> a
    1172:1181:java.lang.String printable(java.lang.String) -> b
    1185:1187:java.lang.String printable(char) -> a
    1191:1225:void addPrintable(java.lang.StringBuffer,char) -> a
    94:105:void <clinit>() -> <clinit>
org.xmlpull.v1.XmlPullParser -> org.xmlpull.v1.XmlPullParser:
    java.lang.String NO_NAMESPACE -> NO_NAMESPACE
    int START_DOCUMENT -> START_DOCUMENT
    int END_DOCUMENT -> END_DOCUMENT
    int START_TAG -> START_TAG
    int END_TAG -> END_TAG
    int TEXT -> TEXT
    int CDSECT -> CDSECT
    int ENTITY_REF -> ENTITY_REF
    int IGNORABLE_WHITESPACE -> IGNORABLE_WHITESPACE
    int PROCESSING_INSTRUCTION -> PROCESSING_INSTRUCTION
    int COMMENT -> COMMENT
    int DOCDECL -> DOCDECL
    java.lang.String[] TYPES -> TYPES
    java.lang.String FEATURE_PROCESS_NAMESPACES -> FEATURE_PROCESS_NAMESPACES
    java.lang.String FEATURE_REPORT_NAMESPACE_ATTRIBUTES -> FEATURE_REPORT_NAMESPACE_ATTRIBUTES
    java.lang.String FEATURE_PROCESS_DOCDECL -> FEATURE_PROCESS_DOCDECL
    java.lang.String FEATURE_VALIDATION -> FEATURE_VALIDATION
    void setFeature(java.lang.String,boolean) -> setFeature
    boolean getFeature(java.lang.String) -> getFeature
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    java.lang.Object getProperty(java.lang.String) -> getProperty
    void setInput(java.io.Reader) -> setInput
    void setInput(java.io.InputStream,java.lang.String) -> setInput
    java.lang.String getInputEncoding() -> getInputEncoding
    void defineEntityReplacementText(java.lang.String,java.lang.String) -> defineEntityReplacementText
    int getNamespaceCount(int) -> getNamespaceCount
    java.lang.String getNamespacePrefix(int) -> getNamespacePrefix
    java.lang.String getNamespaceUri(int) -> getNamespaceUri
    java.lang.String getNamespace(java.lang.String) -> getNamespace
    int getDepth() -> getDepth
    java.lang.String getPositionDescription() -> getPositionDescription
    int getLineNumber() -> getLineNumber
    int getColumnNumber() -> getColumnNumber
    boolean isWhitespace() -> isWhitespace
    java.lang.String getText() -> getText
    char[] getTextCharacters(int[]) -> getTextCharacters
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getName() -> getName
    java.lang.String getPrefix() -> getPrefix
    boolean isEmptyElementTag() -> isEmptyElementTag
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeNamespace(int) -> getAttributeNamespace
    java.lang.String getAttributeName(int) -> getAttributeName
    java.lang.String getAttributePrefix(int) -> getAttributePrefix
    java.lang.String getAttributeType(int) -> getAttributeType
    boolean isAttributeDefault(int) -> isAttributeDefault
    java.lang.String getAttributeValue(int) -> getAttributeValue
    java.lang.String getAttributeValue(java.lang.String,java.lang.String) -> getAttributeValue
    int getEventType() -> getEventType
    int next() -> next
    int nextToken() -> nextToken
    void require(int,java.lang.String,java.lang.String) -> require
    java.lang.String nextText() -> nextText
    int nextTag() -> nextTag
    330:330:void <clinit>() -> <clinit>
org.xmlpull.v1.XmlPullParserException -> org.xmlpull.v1.XmlPullParserException:
    java.lang.Throwable detail -> a
    int row -> b
    int column -> c
    13:21:void <init>(java.lang.String) -> <init>
    13:46:void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable) -> <init>
    48:48:java.lang.Throwable getDetail() -> getDetail
    50:50:int getLineNumber() -> getLineNumber
    51:51:int getColumnNumber() -> getColumnNumber
    65:73:void printStackTrace() -> printStackTrace
org.xmlpull.v1.XmlPullParserFactory -> org.xmlpull.v1.XmlPullParserFactory:
    java.lang.Class referenceContextClass -> b
    java.lang.String PROPERTY_NAME -> PROPERTY_NAME
    java.util.Vector parserClasses -> c
    java.lang.String classNamesLocation -> d
    java.util.Vector serializerClasses -> e
    java.util.Hashtable features -> f
    68:76:void <init>() -> <init>
    91:92:void setFeature(java.lang.String,boolean) -> setFeature
    105:106:boolean getFeature(java.lang.String) -> getFeature
    119:120:void setNamespaceAware(boolean) -> setNamespaceAware
    132:132:boolean isNamespaceAware() -> isNamespaceAware
    146:147:void setValidating(boolean) -> setValidating
    158:158:boolean isValidating() -> isValidating
    172:202:org.xmlpull.v1.XmlPullParser newPullParser() -> newPullParser
    218:248:org.xmlpull.v1.XmlSerializer newSerializer() -> newSerializer
    259:259:org.xmlpull.v1.XmlPullParserFactory newInstance() -> newInstance
    265:352:org.xmlpull.v1.XmlPullParserFactory newInstance(java.lang.String,java.lang.Class) -> newInstance
    40:42:void <clinit>() -> <clinit>
org.xmlpull.v1.XmlSerializer -> org.xmlpull.v1.XmlSerializer:
    void setFeature(java.lang.String,boolean) -> setFeature
    boolean getFeature(java.lang.String) -> getFeature
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    java.lang.Object getProperty(java.lang.String) -> getProperty
    void setOutput(java.io.OutputStream,java.lang.String) -> setOutput
    void setOutput(java.io.Writer) -> setOutput
    void startDocument(java.lang.String,java.lang.Boolean) -> startDocument
    void endDocument() -> endDocument
    void setPrefix(java.lang.String,java.lang.String) -> setPrefix
    java.lang.String getPrefix(java.lang.String,boolean) -> getPrefix
    int getDepth() -> getDepth
    java.lang.String getNamespace() -> getNamespace
    java.lang.String getName() -> getName
    org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String) -> startTag
    org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String) -> attribute
    org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String) -> endTag
    org.xmlpull.v1.XmlSerializer text(java.lang.String) -> text
    org.xmlpull.v1.XmlSerializer text(char[],int,int) -> text
    void cdsect(java.lang.String) -> cdsect
    void entityRef(java.lang.String) -> entityRef
    void processingInstruction(java.lang.String) -> processingInstruction
    void comment(java.lang.String) -> comment
    void docdecl(java.lang.String) -> docdecl
    void ignorableWhitespace(java.lang.String) -> ignorableWhitespace
    void flush() -> flush
org.xmlpull.v1.builder.Iterable -> org.xmlpull.v1.builder.Iterable:
    java.util.Iterator iterator() -> iterator
org.xmlpull.v1.builder.XmlAttribute -> org.xmlpull.v1.builder.XmlAttribute:
    java.lang.Object clone() -> clone
    org.xmlpull.v1.builder.XmlElement getOwner() -> getOwner
    java.lang.String getNamespaceName() -> getNamespaceName
    org.xmlpull.v1.builder.XmlNamespace getNamespace() -> getNamespace
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    java.lang.String getType() -> getType
    boolean isSpecified() -> isSpecified
org.xmlpull.v1.builder.XmlBuilderException -> org.xmlpull.v1.builder.XmlBuilderException:
    java.lang.Throwable detail -> a
    18:19:void <init>(java.lang.String) -> <init>
    23:25:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    28:28:java.lang.Throwable getDetail() -> getDetail
    32:35:java.lang.String getMessage() -> getMessage
    41:50:void printStackTrace(java.io.PrintStream) -> printStackTrace
    53:54:void printStackTrace() -> printStackTrace
    57:66:void printStackTrace(java.io.PrintWriter) -> printStackTrace
org.xmlpull.v1.builder.XmlCharacters -> org.xmlpull.v1.builder.XmlCharacters:
    java.lang.String getText() -> getText
    java.lang.Boolean isWhitespaceContent() -> isWhitespaceContent
org.xmlpull.v1.builder.XmlComment -> org.xmlpull.v1.builder.XmlComment:
    java.lang.String getContent() -> getContent
    org.xmlpull.v1.builder.XmlContainer getParent() -> getParent
org.xmlpull.v1.builder.XmlContained -> org.xmlpull.v1.builder.XmlContained:
    org.xmlpull.v1.builder.XmlContainer getParent() -> getParent
    void setParent(org.xmlpull.v1.builder.XmlContainer) -> setParent
org.xmlpull.v1.builder.XmlContainer -> org.xmlpull.v1.builder.XmlContainer:
org.xmlpull.v1.builder.XmlDoctype -> org.xmlpull.v1.builder.XmlDoctype:
    java.lang.String getSystemIdentifier() -> getSystemIdentifier
    java.lang.String getPublicIdentifier() -> getPublicIdentifier
    java.util.Iterator children() -> children
    org.xmlpull.v1.builder.XmlDocument getParent() -> getParent
    org.xmlpull.v1.builder.XmlProcessingInstruction addProcessingInstruction(java.lang.String,java.lang.String) -> addProcessingInstruction
    void removeAllProcessingInstructions() -> removeAllProcessingInstructions
org.xmlpull.v1.builder.XmlDocument -> org.xmlpull.v1.builder.XmlDocument:
    java.lang.Object clone() -> clone
    org.xmlpull.v1.builder.Iterable children() -> children
    org.xmlpull.v1.builder.XmlElement getDocumentElement() -> getDocumentElement
    org.xmlpull.v1.builder.XmlElement requiredElement(org.xmlpull.v1.builder.XmlNamespace,java.lang.String) -> requiredElement
    org.xmlpull.v1.builder.XmlElement element(org.xmlpull.v1.builder.XmlNamespace,java.lang.String) -> element
    org.xmlpull.v1.builder.XmlElement element(org.xmlpull.v1.builder.XmlNamespace,java.lang.String,boolean) -> element
    org.xmlpull.v1.builder.Iterable notations() -> notations
    org.xmlpull.v1.builder.Iterable unparsedEntities() -> unparsedEntities
    java.lang.String getBaseUri() -> getBaseUri
    java.lang.String getCharacterEncodingScheme() -> getCharacterEncodingScheme
    void setCharacterEncodingScheme(java.lang.String) -> setCharacterEncodingScheme
    java.lang.Boolean isStandalone() -> isStandalone
    java.lang.String getVersion() -> getVersion
    boolean isAllDeclarationsProcessed() -> isAllDeclarationsProcessed
    void setDocumentElement(org.xmlpull.v1.builder.XmlElement) -> setDocumentElement
    void addChild(java.lang.Object) -> addChild
    void insertChild(int,java.lang.Object) -> insertChild
    void removeAllChildren() -> removeAllChildren
    org.xmlpull.v1.builder.XmlComment newComment(java.lang.String) -> newComment
    org.xmlpull.v1.builder.XmlComment addComment(java.lang.String) -> addComment
    org.xmlpull.v1.builder.XmlDoctype newDoctype(java.lang.String,java.lang.String) -> newDoctype
    org.xmlpull.v1.builder.XmlDoctype addDoctype(java.lang.String,java.lang.String) -> addDoctype
    org.xmlpull.v1.builder.XmlElement addDocumentElement(java.lang.String) -> addDocumentElement
    org.xmlpull.v1.builder.XmlElement addDocumentElement(org.xmlpull.v1.builder.XmlNamespace,java.lang.String) -> addDocumentElement
    org.xmlpull.v1.builder.XmlProcessingInstruction newProcessingInstruction(java.lang.String,java.lang.String) -> newProcessingInstruction
    org.xmlpull.v1.builder.XmlProcessingInstruction addProcessingInstruction(java.lang.String,java.lang.String) -> addProcessingInstruction
    void removeAllUnparsedEntities() -> removeAllUnparsedEntities
    org.xmlpull.v1.builder.XmlNotation addNotation(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> addNotation
    void removeAllNotations() -> removeAllNotations
org.xmlpull.v1.builder.XmlElement -> org.xmlpull.v1.builder.XmlElement:
    java.lang.String NO_NAMESPACE -> NO_NAMESPACE
    java.lang.Object clone() -> clone
    java.lang.String getBaseUri() -> getBaseUri
    void setBaseUri(java.lang.String) -> setBaseUri
    org.xmlpull.v1.builder.XmlContainer getRoot() -> getRoot
    org.xmlpull.v1.builder.XmlContainer getParent() -> getParent
    void setParent(org.xmlpull.v1.builder.XmlContainer) -> setParent
    org.xmlpull.v1.builder.XmlNamespace getNamespace() -> getNamespace
    java.lang.String getNamespaceName() -> getNamespaceName
    void setNamespace(org.xmlpull.v1.builder.XmlNamespace) -> setNamespace
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.util.Iterator attributes() -> attributes
    org.xmlpull.v1.builder.XmlAttribute addAttribute(org.xmlpull.v1.builder.XmlAttribute) -> addAttribute
    org.xmlpull.v1.builder.XmlAttribute addAttribute(java.lang.String,java.lang.String) -> addAttribute
    org.xmlpull.v1.builder.XmlAttribute addAttribute(org.xmlpull.v1.builder.XmlNamespace,java.lang.String,java.lang.String) -> addAttribute
    org.xmlpull.v1.builder.XmlAttribute addAttribute(java.lang.String,org.xmlpull.v1.builder.XmlNamespace,java.lang.String,java.lang.String) -> addAttribute
    org.xmlpull.v1.builder.XmlAttribute addAttribute(java.lang.String,org.xmlpull.v1.builder.XmlNamespace,java.lang.String,java.lang.String,boolean) -> addAttribute
    org.xmlpull.v1.builder.XmlAttribute addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> addAttribute
    void ensureAttributeCapacity(int) -> ensureAttributeCapacity
    java.lang.String getAttributeValue(java.lang.String,java.lang.String) -> getAttributeValue
    org.xmlpull.v1.builder.XmlAttribute attribute(java.lang.String) -> attribute
    org.xmlpull.v1.builder.XmlAttribute attribute(org.xmlpull.v1.builder.XmlNamespace,java.lang.String) -> attribute
    org.xmlpull.v1.builder.XmlAttribute findAttribute(java.lang.String,java.lang.String) -> findAttribute
    boolean hasAttributes() -> hasAttributes
    void removeAttribute(org.xmlpull.v1.builder.XmlAttribute) -> removeAttribute
    void removeAllAttributes() -> removeAllAttributes
    java.util.Iterator namespaces() -> namespaces
    org.xmlpull.v1.builder.XmlNamespace declareNamespace(java.lang.String,java.lang.String) -> declareNamespace
    org.xmlpull.v1.builder.XmlNamespace declareNamespace(org.xmlpull.v1.builder.XmlNamespace) -> declareNamespace
    void ensureNamespaceDeclarationsCapacity(int) -> ensureNamespaceDeclarationsCapacity
    boolean hasNamespaceDeclarations() -> hasNamespaceDeclarations
    org.xmlpull.v1.builder.XmlNamespace lookupNamespaceByPrefix(java.lang.String) -> lookupNamespaceByPrefix
    org.xmlpull.v1.builder.XmlNamespace lookupNamespaceByName(java.lang.String) -> lookupNamespaceByName
    org.xmlpull.v1.builder.XmlNamespace newNamespace(java.lang.String) -> newNamespace
    org.xmlpull.v1.builder.XmlNamespace newNamespace(java.lang.String,java.lang.String) -> newNamespace
    void removeAllNamespaceDeclarations() -> removeAllNamespaceDeclarations
    java.util.Iterator children() -> children
    void addChild(java.lang.Object) -> addChild
    void addChild(int,java.lang.Object) -> addChild
    org.xmlpull.v1.builder.XmlElement addElement(org.xmlpull.v1.builder.XmlElement) -> addElement
    org.xmlpull.v1.builder.XmlElement addElement(int,org.xmlpull.v1.builder.XmlElement) -> addElement
    org.xmlpull.v1.builder.XmlElement addElement(java.lang.String) -> addElement
    org.xmlpull.v1.builder.XmlElement addElement(org.xmlpull.v1.builder.XmlNamespace,java.lang.String) -> addElement
    boolean hasChildren() -> hasChildren
    boolean hasChild(java.lang.Object) -> hasChild
    void ensureChildrenCapacity(int) -> ensureChildrenCapacity
    org.xmlpull.v1.builder.XmlElement findElementByName(java.lang.String) -> findElementByName
    org.xmlpull.v1.builder.XmlElement findElementByName(java.lang.String,java.lang.String) -> findElementByName
    org.xmlpull.v1.builder.XmlElement findElementByName(java.lang.String,org.xmlpull.v1.builder.XmlElement) -> findElementByName
    org.xmlpull.v1.builder.XmlElement findElementByName(java.lang.String,java.lang.String,org.xmlpull.v1.builder.XmlElement) -> findElementByName
    org.xmlpull.v1.builder.XmlElement element(int) -> element
    org.xmlpull.v1.builder.XmlElement requiredElement(org.xmlpull.v1.builder.XmlNamespace,java.lang.String) -> requiredElement
    org.xmlpull.v1.builder.XmlElement element(org.xmlpull.v1.builder.XmlNamespace,java.lang.String) -> element
    org.xmlpull.v1.builder.XmlElement element(org.xmlpull.v1.builder.XmlNamespace,java.lang.String,boolean) -> element
    org.xmlpull.v1.builder.Iterable elements(org.xmlpull.v1.builder.XmlNamespace,java.lang.String) -> elements
    void insertChild(int,java.lang.Object) -> insertChild
    org.xmlpull.v1.builder.XmlElement newElement(java.lang.String) -> newElement
    org.xmlpull.v1.builder.XmlElement newElement(org.xmlpull.v1.builder.XmlNamespace,java.lang.String) -> newElement
    org.xmlpull.v1.builder.XmlElement newElement(java.lang.String,java.lang.String) -> newElement
    void removeAllChildren() -> removeAllChildren
    void removeChild(java.lang.Object) -> removeChild
    void replaceChild(java.lang.Object,java.lang.Object) -> replaceChild
    org.xmlpull.v1.builder.Iterable requiredElementContent() -> requiredElementContent
    java.lang.String requiredTextContent() -> requiredTextContent
    void replaceChildrenWithText(java.lang.String) -> replaceChildrenWithText
org.xmlpull.v1.builder.XmlInfosetBuilder -> org.xmlpull.v1.builder.XmlInfosetBuilder:
    org.xmlpull.v1.XmlPullParserFactory factory -> a
    42:42:void <init>() -> <init>
    51:60:org.xmlpull.v1.builder.XmlInfosetBuilder newInstance() -> newInstance
    65:73:org.xmlpull.v1.builder.XmlInfosetBuilder newInstance(org.xmlpull.v1.XmlPullParserFactory) -> newInstance
    80:80:org.xmlpull.v1.XmlPullParserFactory getFactory() -> getFactory
    88:88:org.xmlpull.v1.builder.XmlDocument newDocument() -> newDocument
    org.xmlpull.v1.builder.XmlDocument newDocument(java.lang.String,java.lang.Boolean,java.lang.String) -> newDocument
    org.xmlpull.v1.builder.XmlElement newFragment(java.lang.String) -> newFragment
    org.xmlpull.v1.builder.XmlElement newFragment(java.lang.String,java.lang.String) -> newFragment
    org.xmlpull.v1.builder.XmlElement newFragment(org.xmlpull.v1.builder.XmlNamespace,java.lang.String) -> newFragment
    org.xmlpull.v1.builder.XmlNamespace newNamespace(java.lang.String) -> newNamespace
    org.xmlpull.v1.builder.XmlNamespace newNamespace(java.lang.String,java.lang.String) -> newNamespace
    org.xmlpull.v1.builder.XmlDocument parse(org.xmlpull.v1.XmlPullParser) -> parse
    java.lang.Object parseItem(org.xmlpull.v1.XmlPullParser) -> parseItem
    org.xmlpull.v1.builder.XmlElement parseStartTag(org.xmlpull.v1.XmlPullParser) -> parseStartTag
    210:218:org.xmlpull.v1.builder.XmlDocument parseInputStream(java.io.InputStream) -> parseInputStream
    234:242:org.xmlpull.v1.builder.XmlDocument parseInputStream(java.io.InputStream,java.lang.String) -> parseInputStream
    257:265:org.xmlpull.v1.builder.XmlDocument parseReader(java.io.Reader) -> parseReader
    org.xmlpull.v1.builder.XmlDocument parseLocation(java.lang.String) -> parseLocation
    org.xmlpull.v1.builder.XmlElement parseFragment(org.xmlpull.v1.XmlPullParser) -> parseFragment
    298:312:org.xmlpull.v1.builder.XmlElement parseFragmentFromInputStream(java.io.InputStream) -> parseFragmentFromInputStream
    328:342:org.xmlpull.v1.builder.XmlElement parseFragementFromInputStream(java.io.InputStream,java.lang.String) -> parseFragementFromInputStream
    357:371:org.xmlpull.v1.builder.XmlElement parseFragmentFromReader(java.io.Reader) -> parseFragmentFromReader
    386:401:void skipSubTree(org.xmlpull.v1.XmlPullParser) -> skipSubTree
    void serializeStartTag(org.xmlpull.v1.builder.XmlElement,org.xmlpull.v1.XmlSerializer) -> serializeStartTag
    void serializeEndTag(org.xmlpull.v1.builder.XmlElement,org.xmlpull.v1.XmlSerializer) -> serializeEndTag
    void serialize(java.lang.Object,org.xmlpull.v1.XmlSerializer) -> serialize
    void serializeItem(java.lang.Object,org.xmlpull.v1.XmlSerializer) -> serializeItem
    457:458:void serializeToOutputStream(java.lang.Object,java.io.OutputStream) -> serializeToOutputStream
    478:492:void serializeToOutputStream(java.lang.Object,java.io.OutputStream,java.lang.String) -> serializeToOutputStream
    508:521:void serializeToWriter(java.lang.Object,java.io.Writer) -> serializeToWriter
    537:539:java.lang.String serializeToString(java.lang.Object) -> serializeToString
org.xmlpull.v1.builder.XmlNamespace -> org.xmlpull.v1.builder.XmlNamespace:
    java.lang.String getPrefix() -> getPrefix
    java.lang.String getNamespaceName() -> getNamespaceName
org.xmlpull.v1.builder.XmlNotation -> org.xmlpull.v1.builder.XmlNotation:
    java.lang.String getName() -> getName
    java.lang.String getSystemIdentifier() -> getSystemIdentifier
    java.lang.String getPublicIdentifier() -> getPublicIdentifier
    java.lang.String getDeclarationBaseUri() -> getDeclarationBaseUri
org.xmlpull.v1.builder.XmlProcessingInstruction -> org.xmlpull.v1.builder.XmlProcessingInstruction:
    java.lang.String getTarget() -> getTarget
    java.lang.String getContent() -> getContent
    java.lang.String getBaseUri() -> getBaseUri
    org.xmlpull.v1.builder.XmlNotation getNotation() -> getNotation
    org.xmlpull.v1.builder.XmlContainer getParent() -> getParent
org.xmlpull.v1.builder.XmlSerializable -> org.xmlpull.v1.builder.XmlSerializable:
    void serialize(org.xmlpull.v1.XmlSerializer) -> serialize
org.xmlpull.v1.builder.XmlUnexpandedEntityReference -> org.xmlpull.v1.builder.XmlUnexpandedEntityReference:
    java.lang.String getName() -> getName
    java.lang.String getSystemIdentifier() -> getSystemIdentifier
    java.lang.String getPublicIdentifier() -> getPublicIdentifier
    java.lang.String getDeclarationBaseUri() -> getDeclarationBaseUri
    org.xmlpull.v1.builder.XmlElement getParent() -> getParent
org.xmlpull.v1.builder.XmlUnparsedEntity -> org.xmlpull.v1.builder.XmlUnparsedEntity:
    java.lang.String getName() -> getName
    java.lang.String getSystemIdentifier() -> getSystemIdentifier
    java.lang.String getPublicIdentifier() -> getPublicIdentifier
    java.lang.String getDeclarationBaseUri() -> getDeclarationBaseUri
    java.lang.String getNotationName() -> getNotationName
    org.xmlpull.v1.builder.XmlNotation getNotation() -> getNotation
org.xmlpull.v1.builder.adapter.XmlAttributeAdapter -> org.xmlpull.v1.builder.adapter.XmlAttributeAdapter:
    org.xmlpull.v1.builder.XmlAttribute target -> a
    17:19:java.lang.Object clone() -> clone
    23:25:void <init>(org.xmlpull.v1.builder.XmlAttribute) -> <init>
    29:29:org.xmlpull.v1.builder.XmlElement getOwner() -> getOwner
    33:33:java.lang.String getNamespaceName() -> getNamespaceName
    37:37:org.xmlpull.v1.builder.XmlNamespace getNamespace() -> getNamespace
    41:41:java.lang.String getName() -> getName
    45:45:java.lang.String getValue() -> getValue
    49:49:java.lang.String getType() -> getType
    53:53:boolean isSpecified() -> isSpecified
org.xmlpull.v1.builder.adapter.XmlDocumentAdapter -> org.xmlpull.v1.builder.adapter.XmlDocumentAdapter:
    org.xmlpull.v1.builder.XmlDocument target -> a
    22:24:java.lang.Object clone() -> clone
    28:34:void <init>(org.xmlpull.v1.builder.XmlDocument) -> <init>
    37:44:void fixImportedChildParent(java.lang.Object) -> a
    47:47:org.xmlpull.v1.builder.Iterable children() -> children
    51:51:org.xmlpull.v1.builder.XmlElement getDocumentElement() -> getDocumentElement
    55:55:org.xmlpull.v1.builder.XmlElement requiredElement(org.xmlpull.v1.builder.XmlNamespace,java.lang.String) -> requiredElement
    59:59:org.xmlpull.v1.builder.XmlElement element(org.xmlpull.v1.builder.XmlNamespace,java.lang.String) -> element
    63:63:org.xmlpull.v1.builder.XmlElement element(org.xmlpull.v1.builder.XmlNamespace,java.lang.String,boolean) -> element
    67:67:org.xmlpull.v1.builder.Iterable notations() -> notations
    71:71:org.xmlpull.v1.builder.Iterable unparsedEntities() -> unparsedEntities
    75:75:java.lang.String getBaseUri() -> getBaseUri
    79:79:java.lang.String getCharacterEncodingScheme() -> getCharacterEncodingScheme
    83:84:void setCharacterEncodingScheme(java.lang.String) -> setCharacterEncodingScheme
    87:87:java.lang.Boolean isStandalone() -> isStandalone
    91:91:java.lang.String getVersion() -> getVersion
    95:95:boolean isAllDeclarationsProcessed() -> isAllDeclarationsProcessed
    99:100:void setDocumentElement(org.xmlpull.v1.builder.XmlElement) -> setDocumentElement
    103:104:void addChild(java.lang.Object) -> addChild
    107:108:void insertChild(int,java.lang.Object) -> insertChild
    111:112:void removeAllChildren() -> removeAllChildren
    115:115:org.xmlpull.v1.builder.XmlComment newComment(java.lang.String) -> newComment
    119:119:org.xmlpull.v1.builder.XmlComment addComment(java.lang.String) -> addComment
    123:123:org.xmlpull.v1.builder.XmlDoctype newDoctype(java.lang.String,java.lang.String) -> newDoctype
    127:127:org.xmlpull.v1.builder.XmlDoctype addDoctype(java.lang.String,java.lang.String) -> addDoctype
    131:131:org.xmlpull.v1.builder.XmlElement addDocumentElement(java.lang.String) -> addDocumentElement
    135:135:org.xmlpull.v1.builder.XmlElement addDocumentElement(org.xmlpull.v1.builder.XmlNamespace,java.lang.String) -> addDocumentElement
    139:139:org.xmlpull.v1.builder.XmlProcessingInstruction newProcessingInstruction(java.lang.String,java.lang.String) -> newProcessingInstruction
    143:143:org.xmlpull.v1.builder.XmlProcessingInstruction addProcessingInstruction(java.lang.String,java.lang.String) -> addProcessingInstruction
    147:148:void removeAllUnparsedEntities() -> removeAllUnparsedEntities
    152:152:org.xmlpull.v1.builder.XmlNotation addNotation(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> addNotation
    156:157:void removeAllNotations() -> removeAllNotations
org.xmlpull.v1.builder.adapter.XmlElementAdapter -> org.xmlpull.v1.builder.adapter.XmlElementAdapter:
    org.xmlpull.v1.builder.adapter.XmlElementAdapter topAdapter -> c
    org.xmlpull.v1.builder.XmlElement target -> d
    org.xmlpull.v1.builder.XmlContainer parent -> e
    java.lang.Class class$org$xmlpull$v1$builder$adapter$XmlElementAdapter -> a
    java.lang.Class class$org$xmlpull$v1$builder$XmlElement -> b
    22:24:void <init>(org.xmlpull.v1.builder.XmlElement) -> <init>
    27:50:void setTarget(org.xmlpull.v1.builder.XmlElement) -> a
    54:57:java.lang.Object clone() -> clone
    60:60:org.xmlpull.v1.builder.XmlElement getTarget() -> getTarget
    63:63:org.xmlpull.v1.builder.adapter.XmlElementAdapter getTopAdapter() -> getTopAdapter
    67:71:void setTopAdapter(org.xmlpull.v1.builder.adapter.XmlElementAdapter) -> setTopAdapter
    75:118:org.xmlpull.v1.builder.adapter.XmlElementAdapter castOrWrap(org.xmlpull.v1.builder.XmlElement,java.lang.Class) -> castOrWrap
    124:131:void fixImportedChildParent(java.lang.Object) -> a
    134:135:org.xmlpull.v1.builder.XmlElement fixElementParent(org.xmlpull.v1.builder.XmlElement) -> b
    139:143:org.xmlpull.v1.builder.XmlContainer getRoot() -> getRoot
    147:147:org.xmlpull.v1.builder.XmlContainer getParent() -> getParent
    151:153:void setParent(org.xmlpull.v1.builder.XmlContainer) -> setParent
    156:156:org.xmlpull.v1.builder.XmlNamespace newNamespace(java.lang.String,java.lang.String) -> newNamespace
    160:160:org.xmlpull.v1.builder.XmlAttribute attribute(java.lang.String) -> attribute
    166:166:org.xmlpull.v1.builder.XmlAttribute attribute(org.xmlpull.v1.builder.XmlNamespace,java.lang.String) -> attribute
    171:171:org.xmlpull.v1.builder.XmlAttribute findAttribute(java.lang.String,java.lang.String) -> findAttribute
    175:175:java.util.Iterator attributes() -> attributes
    179:180:void removeAllChildren() -> removeAllChildren
    189:189:org.xmlpull.v1.builder.XmlAttribute addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> addAttribute
    200:200:java.lang.String getAttributeValue(java.lang.String,java.lang.String) -> getAttributeValue
    205:205:org.xmlpull.v1.builder.XmlAttribute addAttribute(org.xmlpull.v1.builder.XmlNamespace,java.lang.String,java.lang.String) -> addAttribute
    209:209:java.lang.String getNamespaceName() -> getNamespaceName
    213:214:void ensureChildrenCapacity(int) -> ensureChildrenCapacity
    217:217:java.util.Iterator namespaces() -> namespaces
    221:222:void removeAllAttributes() -> removeAllAttributes
    225:225:org.xmlpull.v1.builder.XmlNamespace getNamespace() -> getNamespace
    229:229:java.lang.String getBaseUri() -> getBaseUri
    233:234:void removeAttribute(org.xmlpull.v1.builder.XmlAttribute) -> removeAttribute
    237:237:org.xmlpull.v1.builder.XmlNamespace declareNamespace(java.lang.String,java.lang.String) -> declareNamespace
    241:242:void removeAllNamespaceDeclarations() -> removeAllNamespaceDeclarations
    245:245:boolean hasAttributes() -> hasAttributes
    249:249:org.xmlpull.v1.builder.XmlAttribute addAttribute(java.lang.String,org.xmlpull.v1.builder.XmlNamespace,java.lang.String,java.lang.String,boolean) -> addAttribute
    253:253:org.xmlpull.v1.builder.XmlNamespace declareNamespace(org.xmlpull.v1.builder.XmlNamespace) -> declareNamespace
    257:257:org.xmlpull.v1.builder.XmlAttribute addAttribute(java.lang.String,java.lang.String) -> addAttribute
    261:261:boolean hasNamespaceDeclarations() -> hasNamespaceDeclarations
    265:273:org.xmlpull.v1.builder.XmlNamespace lookupNamespaceByName(java.lang.String) -> lookupNamespaceByName
    277:285:org.xmlpull.v1.builder.XmlNamespace lookupNamespaceByPrefix(java.lang.String) -> lookupNamespaceByPrefix
    290:290:org.xmlpull.v1.builder.XmlNamespace newNamespace(java.lang.String) -> newNamespace
    294:295:void setBaseUri(java.lang.String) -> setBaseUri
    298:299:void setNamespace(org.xmlpull.v1.builder.XmlNamespace) -> setNamespace
    302:303:void ensureNamespaceDeclarationsCapacity(int) -> ensureNamespaceDeclarationsCapacity
    314:314:java.lang.String getName() -> getName
    318:319:void setName(java.lang.String) -> setName
    322:322:org.xmlpull.v1.builder.XmlAttribute addAttribute(java.lang.String,org.xmlpull.v1.builder.XmlNamespace,java.lang.String,java.lang.String) -> addAttribute
    326:327:void ensureAttributeCapacity(int) -> ensureAttributeCapacity
    330:330:org.xmlpull.v1.builder.XmlAttribute addAttribute(org.xmlpull.v1.builder.XmlAttribute) -> addAttribute
    336:336:org.xmlpull.v1.builder.XmlElement element(int) -> element
    340:340:org.xmlpull.v1.builder.XmlElement requiredElement(org.xmlpull.v1.builder.XmlNamespace,java.lang.String) -> requiredElement
    344:344:org.xmlpull.v1.builder.XmlElement element(org.xmlpull.v1.builder.XmlNamespace,java.lang.String) -> element
    348:348:org.xmlpull.v1.builder.XmlElement element(org.xmlpull.v1.builder.XmlNamespace,java.lang.String,boolean) -> element
    352:352:org.xmlpull.v1.builder.Iterable elements(org.xmlpull.v1.builder.XmlNamespace,java.lang.String) -> elements
    356:356:org.xmlpull.v1.builder.XmlElement findElementByName(java.lang.String,org.xmlpull.v1.builder.XmlElement) -> findElementByName
    360:360:org.xmlpull.v1.builder.XmlElement newElement(org.xmlpull.v1.builder.XmlNamespace,java.lang.String) -> newElement
    365:365:org.xmlpull.v1.builder.XmlElement addElement(org.xmlpull.v1.builder.XmlElement) -> addElement
    369:369:org.xmlpull.v1.builder.XmlElement addElement(int,org.xmlpull.v1.builder.XmlElement) -> addElement
    374:374:org.xmlpull.v1.builder.XmlElement addElement(java.lang.String) -> addElement
    378:378:org.xmlpull.v1.builder.XmlElement findElementByName(java.lang.String,java.lang.String) -> findElementByName
    382:384:void addChild(java.lang.Object) -> addChild
    387:389:void insertChild(int,java.lang.Object) -> insertChild
    392:392:org.xmlpull.v1.builder.XmlElement findElementByName(java.lang.String) -> findElementByName
    397:397:org.xmlpull.v1.builder.XmlElement findElementByName(java.lang.String,java.lang.String,org.xmlpull.v1.builder.XmlElement) -> findElementByName
    401:402:void removeChild(java.lang.Object) -> removeChild
    405:405:java.util.Iterator children() -> children
    409:409:org.xmlpull.v1.builder.Iterable requiredElementContent() -> requiredElementContent
    413:413:java.lang.String requiredTextContent() -> requiredTextContent
    417:417:boolean hasChild(java.lang.Object) -> hasChild
    421:421:org.xmlpull.v1.builder.XmlElement newElement(java.lang.String,java.lang.String) -> newElement
    425:425:org.xmlpull.v1.builder.XmlElement addElement(org.xmlpull.v1.builder.XmlNamespace,java.lang.String) -> addElement
    429:429:boolean hasChildren() -> hasChildren
    433:435:void addChild(int,java.lang.Object) -> addChild
    438:440:void replaceChild(java.lang.Object,java.lang.Object) -> replaceChild
    443:443:org.xmlpull.v1.builder.XmlElement newElement(java.lang.String) -> newElement
    447:448:void replaceChildrenWithText(java.lang.String) -> replaceChildrenWithText
    78:78:java.lang.Class class$(java.lang.String) -> a
org.xmlpull.v1.builder.impl.XmlAttributeImpl -> org.xmlpull.v1.builder.impl.XmlAttributeImpl:
    org.xmlpull.v1.builder.XmlElement owner_ -> a
    java.lang.String prefix_ -> b
    org.xmlpull.v1.builder.XmlNamespace namespace_ -> c
    java.lang.String name_ -> d
    java.lang.String value_ -> e
    java.lang.String type_ -> f
    boolean default_ -> g
    23:31:java.lang.Object clone() -> clone
    19:40:void <init>(org.xmlpull.v1.builder.XmlElement,java.lang.String,java.lang.String) -> <init>
    44:46:void <init>(org.xmlpull.v1.builder.XmlElement,org.xmlpull.v1.builder.XmlNamespace,java.lang.String,java.lang.String) -> <init>
    61:68:void <init>(org.xmlpull.v1.builder.XmlElement,java.lang.String,org.xmlpull.v1.builder.XmlNamespace,java.lang.String,java.lang.String,boolean) -> <init>
    71:71:org.xmlpull.v1.builder.XmlElement getOwner() -> getOwner
    81:81:org.xmlpull.v1.builder.XmlNamespace getNamespace() -> getNamespace
    86:86:java.lang.String getNamespaceName() -> getNamespaceName
    91:91:java.lang.String getName() -> getName
    96:96:java.lang.String getValue() -> getValue
    101:101:java.lang.String getType() -> getType
    106:106:boolean isSpecified() -> isSpecified
    110:114:boolean equals(java.lang.Object) -> equals
    120:120:java.lang.String toString() -> toString
org.xmlpull.v1.builder.impl.XmlCommentImpl -> org.xmlpull.v1.builder.impl.XmlCommentImpl:
    org.xmlpull.v1.builder.XmlContainer owner_ -> a
    java.lang.String content_ -> b
    17:21:void <init>(org.xmlpull.v1.builder.XmlContainer,java.lang.String) -> <init>
    24:24:java.lang.String getContent() -> getContent
    28:28:org.xmlpull.v1.builder.XmlContainer getParent() -> getParent
org.xmlpull.v1.builder.impl.XmlDocumentImpl -> org.xmlpull.v1.builder.impl.XmlDocumentImpl:
    java.util.List children -> a
    org.xmlpull.v1.builder.XmlElement root -> b
    java.lang.String version -> c
    java.lang.Boolean standalone -> d
    java.lang.String characterEncoding -> e
    28:37:java.lang.Object clone() -> clone
    41:67:java.util.List cloneList(org.xmlpull.v1.builder.impl.XmlDocumentImpl,java.util.List) -> a
    21:74:void <init>(java.lang.String,java.lang.Boolean,java.lang.String) -> <init>
    80:80:java.lang.String getVersion() -> getVersion
    87:87:java.lang.Boolean isStandalone() -> isStandalone
    95:95:java.lang.String getCharacterEncodingScheme() -> getCharacterEncodingScheme
    100:101:void setCharacterEncodingScheme(java.lang.String) -> setCharacterEncodingScheme
    108:108:org.xmlpull.v1.builder.XmlProcessingInstruction newProcessingInstruction(java.lang.String,java.lang.String) -> newProcessingInstruction
    115:115:org.xmlpull.v1.builder.XmlProcessingInstruction addProcessingInstruction(java.lang.String,java.lang.String) -> addProcessingInstruction
    130:130:org.xmlpull.v1.builder.Iterable children() -> children
    141:141:void removeAllUnparsedEntities() -> removeAllUnparsedEntities
    148:157:void setDocumentElement(org.xmlpull.v1.builder.XmlElement) -> setDocumentElement
    160:167:int findDocumentElement() -> a
    171:176:org.xmlpull.v1.builder.XmlElement requiredElement(org.xmlpull.v1.builder.XmlNamespace,java.lang.String) -> requiredElement
    180:180:org.xmlpull.v1.builder.XmlElement element(org.xmlpull.v1.builder.XmlNamespace,java.lang.String) -> element
    184:205:org.xmlpull.v1.builder.XmlElement element(org.xmlpull.v1.builder.XmlNamespace,java.lang.String,boolean) -> element
    214:214:void insertChild(int,java.lang.Object) -> insertChild
    222:224:org.xmlpull.v1.builder.XmlComment addComment(java.lang.String) -> addComment
    232:232:org.xmlpull.v1.builder.XmlDoctype newDoctype(java.lang.String,java.lang.String) -> newDoctype
    241:241:org.xmlpull.v1.builder.Iterable unparsedEntities() -> unparsedEntities
    249:249:void removeAllChildren() -> removeAllChildren
    257:257:org.xmlpull.v1.builder.XmlComment newComment(java.lang.String) -> newComment
    266:266:void removeAllNotations() -> removeAllNotations
    274:274:org.xmlpull.v1.builder.XmlDoctype addDoctype(java.lang.String,java.lang.String) -> addDoctype
    282:282:void addChild(java.lang.Object) -> addChild
    291:291:org.xmlpull.v1.builder.XmlNotation addNotation(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> addNotation
    305:305:java.lang.String getBaseUri() -> getBaseUri
    314:314:org.xmlpull.v1.builder.Iterable notations() -> notations
    321:321:org.xmlpull.v1.builder.XmlElement addDocumentElement(java.lang.String) -> addDocumentElement
    326:331:org.xmlpull.v1.builder.XmlElement addDocumentElement(org.xmlpull.v1.builder.XmlNamespace,java.lang.String) -> addDocumentElement
    340:340:boolean isAllDeclarationsProcessed() -> isAllDeclarationsProcessed
    348:348:org.xmlpull.v1.builder.XmlElement getDocumentElement() -> getDocumentElement
    19:19:java.util.List access$000(org.xmlpull.v1.builder.impl.XmlDocumentImpl) -> a
org.xmlpull.v1.builder.impl.XmlDocumentImpl$1 -> org.xmlpull.v1.builder.impl.XmlDocumentImpl$1:
    org.xmlpull.v1.builder.impl.XmlDocumentImpl this$0 -> a
    131:131:void <init>(org.xmlpull.v1.builder.impl.XmlDocumentImpl) -> <init>
    132:132:java.util.Iterator iterator() -> iterator
org.xmlpull.v1.builder.impl.XmlElementImpl -> org.xmlpull.v1.builder.impl.XmlElementImpl:
    org.xmlpull.v1.builder.XmlContainer parent -> a
    org.xmlpull.v1.builder.XmlNamespace namespace -> b
    java.lang.String name -> c
    java.util.List attrs -> d
    java.util.List nsList -> e
    java.util.List children -> f
    java.util.Iterator EMPTY_ITERATOR -> g
    org.xmlpull.v1.builder.Iterable EMPTY_ITERABLE -> h
    36:66:java.lang.Object clone() -> clone
    70:108:java.util.List cloneList(org.xmlpull.v1.builder.impl.XmlElementImpl,java.util.List) -> a
    116:119:void <init>(org.xmlpull.v1.builder.XmlNamespace,java.lang.String) -> <init>
    121:126:void <init>(java.lang.String,java.lang.String) -> <init>
    130:142:org.xmlpull.v1.builder.XmlContainer getRoot() -> getRoot
    148:148:org.xmlpull.v1.builder.XmlContainer getParent() -> getParent
    153:181:void setParent(org.xmlpull.v1.builder.XmlContainer) -> setParent
    184:184:org.xmlpull.v1.builder.XmlNamespace getNamespace() -> getNamespace
    189:189:java.lang.String getNamespaceName() -> getNamespaceName
    193:194:void setNamespace(org.xmlpull.v1.builder.XmlNamespace) -> setNamespace
    205:205:java.lang.String getName() -> getName
    209:210:void setName(java.lang.String) -> setName
    214:214:java.lang.String toString() -> toString
    219:219:java.lang.String getBaseUri() -> getBaseUri
    224:224:void setBaseUri(java.lang.String) -> setBaseUri
    231:234:java.util.Iterator attributes() -> attributes
    238:241:org.xmlpull.v1.builder.XmlAttribute addAttribute(org.xmlpull.v1.builder.XmlAttribute) -> addAttribute
    245:245:org.xmlpull.v1.builder.XmlAttribute addAttribute(org.xmlpull.v1.builder.XmlNamespace,java.lang.String,java.lang.String) -> addAttribute
    249:249:org.xmlpull.v1.builder.XmlAttribute addAttribute(java.lang.String,java.lang.String) -> addAttribute
    253:253:org.xmlpull.v1.builder.XmlAttribute addAttribute(java.lang.String,org.xmlpull.v1.builder.XmlNamespace,java.lang.String,java.lang.String) -> addAttribute
    259:260:org.xmlpull.v1.builder.XmlAttribute addAttribute(java.lang.String,org.xmlpull.v1.builder.XmlNamespace,java.lang.String,java.lang.String,boolean) -> addAttribute
    270:271:org.xmlpull.v1.builder.XmlAttribute addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> addAttribute
    275:280:void ensureAttributeCapacity(int) -> ensureAttributeCapacity
    285:289:java.lang.String getAttributeValue(java.lang.String,java.lang.String) -> getAttributeValue
    293:293:boolean hasAttributes() -> hasAttributes
    297:297:org.xmlpull.v1.builder.XmlAttribute attribute(java.lang.String) -> attribute
    303:303:org.xmlpull.v1.builder.XmlAttribute attribute(org.xmlpull.v1.builder.XmlNamespace,java.lang.String) -> attribute
    315:362:org.xmlpull.v1.builder.XmlAttribute findAttribute(java.lang.String,java.lang.String) -> findAttribute
    366:367:void removeAllAttributes() -> removeAllAttributes
    370:380:void removeAttribute(org.xmlpull.v1.builder.XmlAttribute) -> removeAttribute
    386:390:org.xmlpull.v1.builder.XmlNamespace declareNamespace(java.lang.String,java.lang.String) -> declareNamespace
    394:400:org.xmlpull.v1.builder.XmlNamespace declareNamespace(org.xmlpull.v1.builder.XmlNamespace) -> declareNamespace
    404:404:boolean hasNamespaceDeclarations() -> hasNamespaceDeclarations
    408:424:org.xmlpull.v1.builder.XmlNamespace lookupNamespaceByPrefix(java.lang.String) -> lookupNamespaceByPrefix
    429:445:org.xmlpull.v1.builder.XmlNamespace lookupNamespaceByName(java.lang.String) -> lookupNamespaceByName
    450:453:java.util.Iterator namespaces() -> namespaces
    458:458:org.xmlpull.v1.builder.XmlNamespace newNamespace(java.lang.String) -> newNamespace
    462:462:org.xmlpull.v1.builder.XmlNamespace newNamespace(java.lang.String,java.lang.String) -> newNamespace
    467:472:void ensureNamespaceDeclarationsCapacity(int) -> ensureNamespaceDeclarationsCapacity
    475:476:void removeAllNamespaceDeclarations() -> removeAllNamespaceDeclarations
    482:487:void addChild(java.lang.Object) -> addChild
    490:494:void addChild(int,java.lang.Object) -> addChild
    497:511:void checkChildParent(java.lang.Object) -> a
    514:518:void setChildParent(java.lang.Object) -> b
    522:525:org.xmlpull.v1.builder.XmlElement addElement(org.xmlpull.v1.builder.XmlElement) -> addElement
    530:533:org.xmlpull.v1.builder.XmlElement addElement(int,org.xmlpull.v1.builder.XmlElement) -> addElement
    537:540:org.xmlpull.v1.builder.XmlElement addElement(org.xmlpull.v1.builder.XmlNamespace,java.lang.String) -> addElement
    544:544:org.xmlpull.v1.builder.XmlElement addElement(java.lang.String) -> addElement
    548:551:java.util.Iterator children() -> children
    555:558:org.xmlpull.v1.builder.Iterable requiredElementContent() -> requiredElementContent
    566:598:java.lang.String requiredTextContent() -> requiredTextContent
    603:608:void ensureChildrenCapacity(int) -> ensureChildrenCapacity
    611:630:org.xmlpull.v1.builder.XmlElement element(int) -> element
    636:641:org.xmlpull.v1.builder.XmlElement requiredElement(org.xmlpull.v1.builder.XmlNamespace,java.lang.String) -> requiredElement
    645:645:org.xmlpull.v1.builder.XmlElement element(org.xmlpull.v1.builder.XmlNamespace,java.lang.String) -> element
    648:656:org.xmlpull.v1.builder.XmlElement element(org.xmlpull.v1.builder.XmlNamespace,java.lang.String,boolean) -> element
    661:661:org.xmlpull.v1.builder.Iterable elements(org.xmlpull.v1.builder.XmlNamespace,java.lang.String) -> elements
    669:681:org.xmlpull.v1.builder.XmlElement findElementByName(java.lang.String) -> findElementByName
    687:687:org.xmlpull.v1.builder.XmlElement findElementByName(java.lang.String,java.lang.String,org.xmlpull.v1.builder.XmlElement) -> findElementByName
    694:694:org.xmlpull.v1.builder.XmlElement findElementByName(java.lang.String,org.xmlpull.v1.builder.XmlElement) -> findElementByName
    698:718:org.xmlpull.v1.builder.XmlElement findElementByName(java.lang.String,java.lang.String) -> findElementByName
    723:732:boolean hasChild(java.lang.Object) -> hasChild
    737:737:boolean hasChildren() -> hasChildren
    742:744:void insertChild(int,java.lang.Object) -> insertChild
    747:747:org.xmlpull.v1.builder.XmlElement newElement(java.lang.String) -> newElement
    751:751:org.xmlpull.v1.builder.XmlElement newElement(java.lang.String,java.lang.String) -> newElement
    755:755:org.xmlpull.v1.builder.XmlElement newElement(org.xmlpull.v1.builder.XmlNamespace,java.lang.String) -> newElement
    759:773:void replaceChild(java.lang.Object,java.lang.Object) -> replaceChild
    776:777:void removeAllChildren() -> removeAllChildren
    780:797:void removeChild(java.lang.Object) -> removeChild
    801:803:void replaceChildrenWithText(java.lang.String) -> replaceChildrenWithText
    807:818:boolean isWhiteSpace(java.lang.String) -> b
    20:20:java.util.List access$000(org.xmlpull.v1.builder.impl.XmlElementImpl) -> a
    20:20:boolean access$100(java.lang.String) -> a
    20:20:java.util.Iterator access$300() -> a
    951:953:void <clinit>() -> <clinit>
org.xmlpull.v1.builder.impl.XmlElementImpl$1 -> org.xmlpull.v1.builder.impl.XmlElementImpl$1:
    org.xmlpull.v1.builder.impl.XmlElementImpl this$0 -> a
    559:559:void <init>(org.xmlpull.v1.builder.impl.XmlElementImpl) -> <init>
    560:560:java.util.Iterator iterator() -> iterator
org.xmlpull.v1.builder.impl.XmlElementImpl$2 -> org.xmlpull.v1.builder.impl.XmlElementImpl$2:
    org.xmlpull.v1.builder.XmlNamespace val$n -> a
    java.lang.String val$name -> b
    org.xmlpull.v1.builder.impl.XmlElementImpl this$0 -> c
    662:662:void <init>(org.xmlpull.v1.builder.impl.XmlElementImpl,org.xmlpull.v1.builder.XmlNamespace,java.lang.String) -> <init>
    663:663:java.util.Iterator iterator() -> iterator
org.xmlpull.v1.builder.impl.XmlElementImpl$3 -> org.xmlpull.v1.builder.impl.XmlElementImpl$3:
    955:955:void <init>() -> <init>
    956:956:java.util.Iterator iterator() -> iterator
org.xmlpull.v1.builder.impl.XmlElementImpl$ElementsSimpleIterator -> org.xmlpull.v1.builder.impl.XmlElementImpl$ElementsSimpleIterator:
    java.util.Iterator children -> a
    org.xmlpull.v1.builder.XmlElement currentEl -> b
    org.xmlpull.v1.builder.XmlNamespace n -> c
    java.lang.String name -> d
    org.xmlpull.v1.builder.impl.XmlElementImpl this$0 -> e
    830:835:void <init>(org.xmlpull.v1.builder.impl.XmlElementImpl,org.xmlpull.v1.builder.XmlNamespace,java.lang.String,java.util.Iterator) -> <init>
    838:852:void findNextEl() -> a
    855:855:boolean hasNext() -> hasNext
    859:865:java.lang.Object next() -> next
    869:869:void remove() -> remove
org.xmlpull.v1.builder.impl.XmlElementImpl$EmptyIterator -> org.xmlpull.v1.builder.impl.XmlElementImpl$EmptyIterator:
    935:935:void <init>() -> <init>
    937:937:boolean hasNext() -> hasNext
    941:941:java.lang.Object next() -> next
    946:946:void remove() -> remove
    935:935:void <init>(org.xmlpull.v1.builder.impl.XmlElementImpl$1) -> <init>
org.xmlpull.v1.builder.impl.XmlElementImpl$RequiredElementContentIterator -> org.xmlpull.v1.builder.impl.XmlElementImpl$RequiredElementContentIterator:
    java.util.Iterator children -> a
    org.xmlpull.v1.builder.XmlElement currentEl -> b
    880:883:void <init>(java.util.Iterator) -> <init>
    886:913:void findNextEl() -> a
    916:916:boolean hasNext() -> hasNext
    920:926:java.lang.Object next() -> next
    930:930:void remove() -> remove
org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl -> org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl:
    41:41:void <init>() -> <init>
    45:45:org.xmlpull.v1.builder.XmlDocument newDocument(java.lang.String,java.lang.Boolean,java.lang.String) -> newDocument
    50:50:org.xmlpull.v1.builder.XmlElement newFragment(java.lang.String) -> newFragment
    55:55:org.xmlpull.v1.builder.XmlElement newFragment(java.lang.String,java.lang.String) -> newFragment
    60:60:org.xmlpull.v1.builder.XmlElement newFragment(org.xmlpull.v1.builder.XmlNamespace,java.lang.String) -> newFragment
    68:68:org.xmlpull.v1.builder.XmlNamespace newNamespace(java.lang.String) -> newNamespace
    73:73:org.xmlpull.v1.builder.XmlNamespace newNamespace(java.lang.String,java.lang.String) -> newNamespace
    78:82:org.xmlpull.v1.builder.XmlDocument parse(org.xmlpull.v1.XmlPullParser) -> parse
    88:100:java.lang.Object parseItem(org.xmlpull.v1.XmlPullParser) -> parseItem
    110:127:org.xmlpull.v1.builder.XmlDocument parseDocumentStart(org.xmlpull.v1.XmlPullParser) -> a
    135:169:org.xmlpull.v1.builder.XmlElement parseFragment(org.xmlpull.v1.XmlPullParser) -> parseFragment
    177:205:org.xmlpull.v1.builder.XmlElement parseStartTag(org.xmlpull.v1.XmlPullParser) -> parseStartTag
    214:223:org.xmlpull.v1.builder.XmlDocument parseLocation(java.lang.String) -> parseLocation
    229:240:void serialize(java.lang.Object,org.xmlpull.v1.XmlSerializer) -> serialize
    244:258:void serializeContainer(org.xmlpull.v1.builder.XmlContainer,org.xmlpull.v1.XmlSerializer) -> a
    263:282:void serializeItem(java.lang.Object,org.xmlpull.v1.XmlSerializer) -> serializeItem
    287:347:void serializeStartTag(org.xmlpull.v1.builder.XmlElement,org.xmlpull.v1.XmlSerializer) -> serializeStartTag
    351:355:void serializeEndTag(org.xmlpull.v1.builder.XmlElement,org.xmlpull.v1.XmlSerializer) -> serializeEndTag
    362:376:void serializeDocument(org.xmlpull.v1.builder.XmlDocument,org.xmlpull.v1.XmlSerializer) -> a
    380:406:void serializeFragment(org.xmlpull.v1.builder.XmlElement,org.xmlpull.v1.XmlSerializer) -> a
org.xmlpull.v1.builder.impl.XmlNamespaceImpl -> org.xmlpull.v1.builder.impl.XmlNamespaceImpl:
    java.lang.String namespaceName -> a
    java.lang.String prefix -> b
    26:38:void <init>(java.lang.String,java.lang.String) -> <init>
    42:42:java.lang.String getPrefix() -> getPrefix
    47:47:java.lang.String getNamespaceName() -> getNamespaceName
    51:55:boolean equals(java.lang.Object) -> equals
    62:62:java.lang.String toString() -> toString
org.xmlpull.v1.dom2_builder.DOM2XmlPullBuilder -> org.xmlpull.v1.dom2_builder.DOM2XmlPullBuilder:
    41:43:void <init>() -> <init>
    55:64:org.w3c.dom.Document newDoc() -> a
    70:71:org.xmlpull.v1.XmlPullParser newParser() -> b
    75:76:org.w3c.dom.Element parse(java.io.Reader) -> parse
    82:86:org.w3c.dom.Element parse(java.io.Reader,org.w3c.dom.Document) -> parse
    92:93:org.w3c.dom.Element parse(org.xmlpull.v1.XmlPullParser,org.w3c.dom.Document) -> parse
    97:99:org.w3c.dom.Element parseSubTree(org.xmlpull.v1.XmlPullParser) -> parseSubTree
    105:106:org.w3c.dom.Element parseSubTree(org.xmlpull.v1.XmlPullParser,org.w3c.dom.Document) -> parseSubTree
    232:232:void main(java.lang.String[]) -> main
org.xmlpull.v1.dom2_builder.DOM2XmlPullBuilder$1 -> org.xmlpull.v1.dom2_builder.DOM2XmlPullBuilder$1:
org.xmlpull.v1.dom2_builder.DOM2XmlPullBuilder$BuildProcess -> org.xmlpull.v1.dom2_builder.DOM2XmlPullBuilder$BuildProcess:
    org.xmlpull.v1.XmlPullParser pp -> a
    org.w3c.dom.Document docFactory -> b
    boolean scanNamespaces -> c
    112:115:void <init>() -> <init>
    120:122:org.w3c.dom.Element parseSubTree(org.xmlpull.v1.XmlPullParser,org.w3c.dom.Document) -> parseSubTree
    128:168:org.w3c.dom.Element parseSubTree() -> a
    174:203:void declareNamespaces(org.xmlpull.v1.XmlPullParser,org.w3c.dom.Element) -> a
    207:211:void declareOneNamespace(org.xmlpull.v1.XmlPullParser,int,org.w3c.dom.Element) -> a
    109:109:void <init>(org.xmlpull.v1.dom2_builder.DOM2XmlPullBuilder$1) -> <init>
org.xmlpull.v1.parser_pool.XmlPullParserPool -> org.xmlpull.v1.parser_pool.XmlPullParserPool:
    java.util.List pool -> a
    org.xmlpull.v1.XmlPullParserFactory factory -> b
    25:26:void <init>() -> <init>
    20:31:void <init>(org.xmlpull.v1.XmlPullParserFactory) -> <init>
    34:34:org.xmlpull.v1.XmlPullParser newParser() -> a
    40:52:org.xmlpull.v1.XmlPullParser getPullParserFromPool() -> getPullParserFromPool
    56:60:void returnPullParserToPool(org.xmlpull.v1.XmlPullParser) -> returnPullParserToPool
    68:76:void main(java.lang.String[]) -> main
org.xmlpull.v1.sax2.Driver -> org.xmlpull.v1.sax2.Driver:
    org.xml.sax.ContentHandler contentHandler -> a
    org.xml.sax.ErrorHandler errorHandler -> b
    java.lang.String systemId -> c
    org.xmlpull.v1.XmlPullParser pp -> d
    68:83:void <init>() -> <init>
    68:87:void <init>(org.xmlpull.v1.XmlPullParser) -> <init>
    91:91:int getLength() -> getLength
    92:92:java.lang.String getURI(int) -> getURI
    93:93:java.lang.String getLocalName(int) -> getLocalName
    95:99:java.lang.String getQName(int) -> getQName
    102:102:java.lang.String getType(int) -> getType
    103:103:java.lang.String getValue(int) -> getValue
    106:115:int getIndex(java.lang.String,java.lang.String) -> getIndex
    119:127:int getIndex(java.lang.String) -> getIndex
    131:140:java.lang.String getType(java.lang.String,java.lang.String) -> getType
    143:151:java.lang.String getType(java.lang.String) -> getType
    154:154:java.lang.String getValue(java.lang.String,java.lang.String) -> getValue
    157:157:java.lang.String getValue(java.lang.String) -> getValue
    162:162:java.lang.String getPublicId() -> getPublicId
    163:163:java.lang.String getSystemId() -> getSystemId
    164:164:int getLineNumber() -> getLineNumber
    165:165:int getColumnNumber() -> getColumnNumber
    172:183:boolean getFeature(java.lang.String) -> getFeature
    192:216:void setFeature(java.lang.String,boolean) -> setFeature
    221:226:java.lang.Object getProperty(java.lang.String) -> getProperty
    235:247:void setProperty(java.lang.String,java.lang.Object) -> setProperty
    249:249:void setEntityResolver(org.xml.sax.EntityResolver) -> setEntityResolver
    251:251:org.xml.sax.EntityResolver getEntityResolver() -> getEntityResolver
    253:253:void setDTDHandler(org.xml.sax.DTDHandler) -> setDTDHandler
    255:255:org.xml.sax.DTDHandler getDTDHandler() -> getDTDHandler
    259:260:void setContentHandler(org.xml.sax.ContentHandler) -> setContentHandler
    262:262:org.xml.sax.ContentHandler getContentHandler() -> getContentHandler
    265:266:void setErrorHandler(org.xml.sax.ErrorHandler) -> setErrorHandler
    268:268:org.xml.sax.ErrorHandler getErrorHandler() -> getErrorHandler
    273:345:void parse(org.xml.sax.InputSource) -> parse
    348:349:void parse(java.lang.String) -> parse
    353:455:void parseSubTree(org.xmlpull.v1.XmlPullParser) -> parseSubTree
    465:466:void startElement(java.lang.String,java.lang.String,java.lang.String) -> a
org.xmlpull.v1.util.XmlPullUtil -> org.xmlpull.v1.util.XmlPullUtil:
    java.lang.String XSI_NS -> XSI_NS
    21:21:void <init>() -> <init>
    27:27:java.lang.String getAttributeValue(org.xmlpull.v1.XmlPullParser,java.lang.String) -> getAttributeValue
    40:59:java.lang.String getPITarget(org.xmlpull.v1.XmlPullParser) -> getPITarget
    73:94:java.lang.String getPIData(org.xmlpull.v1.XmlPullParser) -> getPIData
    103:103:boolean isS(char) -> a
    114:124:void skipSubTree(org.xmlpull.v1.XmlPullParser) -> skipSubTree
    132:136:void nextStartTag(org.xmlpull.v1.XmlPullParser) -> nextStartTag
    144:146:void nextStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String) -> nextStartTag
    154:156:void nextStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String) -> nextStartTag
    167:169:void nextEndTag(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String) -> nextEndTag
    180:184:java.lang.String nextText(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String) -> nextText
    195:199:java.lang.String getRequiredAttributeValue(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String) -> getRequiredAttributeValue
    208:212:void nextEndTag(org.xmlpull.v1.XmlPullParser) -> nextEndTag
    223:227:boolean matches(org.xmlpull.v1.XmlPullParser,int,java.lang.String,java.lang.String) -> matches
    242:253:void writeSimpleElement(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.lang.String) -> writeSimpleElement
org.xmlpull.v1.wrapper.XmlPullParserWrapper -> org.xmlpull.v1.wrapper.XmlPullParserWrapper:
    java.lang.String XSI_NS -> XSI_NS
    java.lang.String XSD_NS -> XSD_NS
    java.lang.String getAttributeValue(java.lang.String) -> getAttributeValue
    java.lang.String getPITarget() -> getPITarget
    java.lang.String getPIData() -> getPIData
    java.lang.String getRequiredAttributeValue(java.lang.String) -> getRequiredAttributeValue
    java.lang.String getRequiredAttributeValue(java.lang.String,java.lang.String) -> getRequiredAttributeValue
    java.lang.String getRequiredElementText(java.lang.String,java.lang.String) -> getRequiredElementText
    boolean isNil() -> isNil
    boolean matches(int,java.lang.String,java.lang.String) -> matches
    void nextStartTag() -> nextStartTag
    void nextStartTag(java.lang.String) -> nextStartTag
    void nextStartTag(java.lang.String,java.lang.String) -> nextStartTag
    void nextEndTag() -> nextEndTag
    void nextEndTag(java.lang.String) -> nextEndTag
    void nextEndTag(java.lang.String,java.lang.String) -> nextEndTag
    java.lang.String nextText(java.lang.String,java.lang.String) -> nextText
    void skipSubTree() -> skipSubTree
org.xmlpull.v1.wrapper.XmlPullWrapperFactory -> org.xmlpull.v1.wrapper.XmlPullWrapperFactory:
    org.xmlpull.v1.XmlPullParserFactory f -> a
    29:29:org.xmlpull.v1.wrapper.XmlPullWrapperFactory newInstance() -> newInstance
    35:35:org.xmlpull.v1.wrapper.XmlPullWrapperFactory newInstance(org.xmlpull.v1.XmlPullParserFactory) -> newInstance
    41:42:org.xmlpull.v1.wrapper.XmlPullWrapperFactory newInstance(java.lang.String,java.lang.Class) -> newInstance
    48:54:void <init>(org.xmlpull.v1.XmlPullParserFactory) -> <init>
    57:57:org.xmlpull.v1.XmlPullParserFactory getFactory() -> getFactory
    63:64:void setFeature(java.lang.String,boolean) -> setFeature
    68:68:boolean getFeature(java.lang.String) -> getFeature
    72:73:void setNamespaceAware(boolean) -> setNamespaceAware
    76:76:boolean isNamespaceAware() -> isNamespaceAware
    80:81:void setValidating(boolean) -> setValidating
    84:84:boolean isValidating() -> isValidating
    90:94:org.xmlpull.v1.wrapper.XmlPullParserWrapper newPullParserWrapper() -> newPullParserWrapper
    98:98:org.xmlpull.v1.wrapper.XmlPullParserWrapper newPullParserWrapper(org.xmlpull.v1.XmlPullParser) -> newPullParserWrapper
    102:103:org.xmlpull.v1.wrapper.XmlSerializerWrapper newSerializerWrapper() -> newSerializerWrapper
    107:107:org.xmlpull.v1.wrapper.XmlSerializerWrapper newSerializerWrapper(org.xmlpull.v1.XmlSerializer) -> newSerializerWrapper
org.xmlpull.v1.wrapper.XmlSerializerWrapper -> org.xmlpull.v1.wrapper.XmlSerializerWrapper:
    java.lang.String NO_NAMESPACE -> NO_NAMESPACE
    java.lang.String XSI_NS -> XSI_NS
    java.lang.String XSD_NS -> XSD_NS
    java.lang.String getCurrentNamespaceForElements() -> getCurrentNamespaceForElements
    java.lang.String setCurrentNamespaceForElements(java.lang.String) -> setCurrentNamespaceForElements
    org.xmlpull.v1.wrapper.XmlSerializerWrapper attribute(java.lang.String,java.lang.String) -> attribute
    org.xmlpull.v1.wrapper.XmlSerializerWrapper startTag(java.lang.String) -> startTag
    org.xmlpull.v1.wrapper.XmlSerializerWrapper endTag(java.lang.String) -> endTag
    org.xmlpull.v1.wrapper.XmlSerializerWrapper element(java.lang.String,java.lang.String,java.lang.String) -> element
    org.xmlpull.v1.wrapper.XmlSerializerWrapper element(java.lang.String,java.lang.String) -> element
    void fragment(java.lang.String) -> fragment
    void event(org.xmlpull.v1.XmlPullParser) -> event
    java.lang.String escapeText(java.lang.String) -> escapeText
    java.lang.String escapeAttributeValue(java.lang.String) -> escapeAttributeValue
org.xmlpull.v1.wrapper.classic.StaticXmlPullParserWrapper -> org.xmlpull.v1.wrapper.classic.StaticXmlPullParserWrapper:
    23:24:void <init>(org.xmlpull.v1.XmlPullParser) -> <init>
    28:28:java.lang.String getAttributeValue(java.lang.String) -> getAttributeValue
    34:34:java.lang.String getRequiredAttributeValue(java.lang.String) -> getRequiredAttributeValue
    41:41:java.lang.String getRequiredAttributeValue(java.lang.String,java.lang.String) -> getRequiredAttributeValue
    56:69:java.lang.String getRequiredElementText(java.lang.String,java.lang.String) -> getRequiredElementText
    76:82:boolean isNil() -> isNil
    86:86:java.lang.String getPITarget() -> getPITarget
    90:90:java.lang.String getPIData() -> getPIData
    96:96:boolean matches(int,java.lang.String,java.lang.String) -> matches
    102:106:void nextStartTag() -> nextStartTag
    111:113:void nextStartTag(java.lang.String) -> nextStartTag
    118:120:void nextStartTag(java.lang.String,java.lang.String) -> nextStartTag
    123:124:void nextEndTag() -> nextEndTag
    129:130:void nextEndTag(java.lang.String) -> nextEndTag
    135:136:void nextEndTag(java.lang.String,java.lang.String) -> nextEndTag
    141:141:java.lang.String nextText(java.lang.String,java.lang.String) -> nextText
    146:147:void skipSubTree() -> skipSubTree
    150:166:double readDouble() -> readDouble
    170:186:float readFloat() -> readFloat
    195:219:int parseDigits(java.lang.String,int,int) -> a
    226:261:int parseInt(java.lang.String) -> a
    268:271:int readInt() -> readInt
    276:281:java.lang.String readString() -> readString
    287:288:double readDoubleElement(java.lang.String,java.lang.String) -> readDoubleElement
    294:295:float readFloatElement(java.lang.String,java.lang.String) -> readFloatElement
    301:302:int readIntElement(java.lang.String,java.lang.String) -> readIntElement
    308:309:java.lang.String readStringElemet(java.lang.String,java.lang.String) -> readStringElemet
org.xmlpull.v1.wrapper.classic.StaticXmlSerializerWrapper -> org.xmlpull.v1.wrapper.classic.StaticXmlSerializerWrapper:
    java.lang.String currentNs -> e
    org.xmlpull.v1.wrapper.XmlPullWrapperFactory wf -> f
    org.xmlpull.v1.wrapper.XmlPullParserWrapper fragmentParser -> g
    int namespaceEnd -> h
    java.lang.String[] namespacePrefix -> i
    java.lang.String[] namespaceUri -> j
    int[] namespaceDepth -> k
    33:101:void <init>(org.xmlpull.v1.XmlSerializer,org.xmlpull.v1.wrapper.XmlPullWrapperFactory) -> <init>
    37:37:java.lang.String getCurrentNamespaceForElements() -> getCurrentNamespaceForElements
    41:43:java.lang.String setCurrentNamespaceForElements(java.lang.String) -> setCurrentNamespaceForElements
    49:50:org.xmlpull.v1.wrapper.XmlSerializerWrapper attribute(java.lang.String,java.lang.String) -> attribute
    56:57:org.xmlpull.v1.wrapper.XmlSerializerWrapper startTag(java.lang.String) -> startTag
    63:64:org.xmlpull.v1.wrapper.XmlSerializerWrapper endTag(java.lang.String) -> endTag
    71:71:org.xmlpull.v1.wrapper.XmlSerializerWrapper element(java.lang.String,java.lang.String) -> element
    78:90:org.xmlpull.v1.wrapper.XmlSerializerWrapper element(java.lang.String,java.lang.String,java.lang.String) -> element
    104:120:void ensureNamespacesCapacity() -> a
    132:149:void setPrefix(java.lang.String,java.lang.String) -> setPrefix
    154:195:void fragment(java.lang.String) -> fragment
    198:252:void event(org.xmlpull.v1.XmlPullParser) -> event
    255:273:void writeStartTag(org.xmlpull.v1.XmlPullParser) -> a
    279:308:java.lang.String escapeAttributeValue(java.lang.String) -> escapeAttributeValue
    316:347:java.lang.String escapeText(java.lang.String) -> escapeText
    354:361:void writeDouble(double) -> writeDouble
    366:373:void writeFloat(float) -> writeFloat
    378:379:void writeInt(int) -> writeInt
    384:388:void writeString(java.lang.String) -> writeString
    393:396:void writeDoubleElement(java.lang.String,java.lang.String,double) -> writeDoubleElement
    401:404:void writeFloatElement(java.lang.String,java.lang.String,float) -> writeFloatElement
    409:412:void writeIntElement(java.lang.String,java.lang.String,int) -> writeIntElement
    417:424:void writeStringElement(java.lang.String,java.lang.String,java.lang.String) -> writeStringElement
org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate -> org.xmlpull.v1.wrapper.classic.XmlPullParserDelegate:
    org.xmlpull.v1.XmlPullParser pp -> a
    24:26:void <init>(org.xmlpull.v1.XmlPullParser) -> <init>
    29:29:java.lang.String getText() -> getText
    33:34:void setFeature(java.lang.String,boolean) -> setFeature
    37:37:char[] getTextCharacters(int[]) -> getTextCharacters
    41:41:int getColumnNumber() -> getColumnNumber
    45:45:int getNamespaceCount(int) -> getNamespaceCount
    49:49:java.lang.String getNamespacePrefix(int) -> getNamespacePrefix
    53:53:java.lang.String getAttributeName(int) -> getAttributeName
    57:57:java.lang.String getName() -> getName
    61:61:boolean getFeature(java.lang.String) -> getFeature
    65:65:java.lang.String getInputEncoding() -> getInputEncoding
    69:69:java.lang.String getAttributeValue(int) -> getAttributeValue
    73:73:java.lang.String getNamespace(java.lang.String) -> getNamespace
    77:78:void setInput(java.io.Reader) -> setInput
    81:81:int getLineNumber() -> getLineNumber
    85:85:java.lang.Object getProperty(java.lang.String) -> getProperty
    89:89:boolean isEmptyElementTag() -> isEmptyElementTag
    93:93:boolean isAttributeDefault(int) -> isAttributeDefault
    97:97:java.lang.String getNamespaceUri(int) -> getNamespaceUri
    101:101:int next() -> next
    105:105:int nextToken() -> nextToken
    112:113:void defineEntityReplacementText(java.lang.String,java.lang.String) -> defineEntityReplacementText
    116:116:int getAttributeCount() -> getAttributeCount
    120:120:boolean isWhitespace() -> isWhitespace
    124:124:java.lang.String getPrefix() -> getPrefix
    128:129:void require(int,java.lang.String,java.lang.String) -> require
    132:132:java.lang.String nextText() -> nextText
    136:136:java.lang.String getAttributeType(int) -> getAttributeType
    140:140:int getDepth() -> getDepth
    144:144:int nextTag() -> nextTag
    148:148:int getEventType() -> getEventType
    152:152:java.lang.String getAttributePrefix(int) -> getAttributePrefix
    156:157:void setInput(java.io.InputStream,java.lang.String) -> setInput
    160:160:java.lang.String getAttributeValue(java.lang.String,java.lang.String) -> getAttributeValue
    164:165:void setProperty(java.lang.String,java.lang.Object) -> setProperty
    168:168:java.lang.String getPositionDescription() -> getPositionDescription
    172:172:java.lang.String getNamespace() -> getNamespace
    176:176:java.lang.String getAttributeNamespace(int) -> getAttributeNamespace
org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate -> org.xmlpull.v1.wrapper.classic.XmlSerializerDelegate:
    org.xmlpull.v1.XmlSerializer xs -> l
    23:25:void <init>(org.xmlpull.v1.XmlSerializer) -> <init>
    28:28:java.lang.String getName() -> getName
    34:35:void setPrefix(java.lang.String,java.lang.String) -> setPrefix
    38:39:void setOutput(java.io.OutputStream,java.lang.String) -> setOutput
    42:43:void endDocument() -> endDocument
    46:47:void comment(java.lang.String) -> comment
    50:50:int getDepth() -> getDepth
    54:55:void setProperty(java.lang.String,java.lang.Object) -> setProperty
    58:59:void cdsect(java.lang.String) -> cdsect
    62:63:void setFeature(java.lang.String,boolean) -> setFeature
    66:67:void entityRef(java.lang.String) -> entityRef
    70:71:void processingInstruction(java.lang.String) -> processingInstruction
    74:75:void setOutput(java.io.Writer) -> setOutput
    78:79:void docdecl(java.lang.String) -> docdecl
    82:83:void flush() -> flush
    86:86:java.lang.Object getProperty(java.lang.String) -> getProperty
    90:90:org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String) -> startTag
    94:95:void ignorableWhitespace(java.lang.String) -> ignorableWhitespace
    98:98:org.xmlpull.v1.XmlSerializer text(java.lang.String) -> text
    102:102:boolean getFeature(java.lang.String) -> getFeature
    106:106:org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String) -> attribute
    110:111:void startDocument(java.lang.String,java.lang.Boolean) -> startDocument
    114:114:java.lang.String getPrefix(java.lang.String,boolean) -> getPrefix
    118:118:java.lang.String getNamespace() -> getNamespace
    124:124:org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String) -> endTag
    128:128:org.xmlpull.v1.XmlSerializer text(char[],int,int) -> text
org.yaml.snakeyaml.DumperOptions -> org.d.a.a:
    org.yaml.snakeyaml.DumperOptions$ScalarStyle defaultStyle -> a
    org.yaml.snakeyaml.DumperOptions$FlowStyle defaultFlowStyle -> b
    boolean canonical -> c
    boolean allowUnicode -> d
    boolean allowReadOnlyProperties -> e
    int indent -> f
    int indicatorIndent -> g
    int bestWidth -> h
    boolean splitLines -> i
    org.yaml.snakeyaml.DumperOptions$LineBreak lineBreak -> j
    boolean explicitStart -> k
    boolean explicitEnd -> l
    java.util.TimeZone timeZone -> m
    org.yaml.snakeyaml.DumperOptions$Version version -> n
    java.util.Map tags -> o
    java.lang.Boolean prettyFlow -> p
    org.yaml.snakeyaml.serializer.AnchorGenerator anchorGenerator -> q
    26:177:void <init>() -> <init>
    180:180:boolean isAllowUnicode() -> a
    198:198:org.yaml.snakeyaml.DumperOptions$ScalarStyle getDefaultScalarStyle() -> b
    226:226:int getIndent() -> c
    240:240:int getIndicatorIndent() -> d
    248:248:org.yaml.snakeyaml.DumperOptions$Version getVersion() -> e
    262:262:boolean isCanonical() -> f
    277:277:boolean isPrettyFlow() -> g
    293:293:int getWidth() -> h
    308:308:boolean getSplitLines() -> i
    312:312:org.yaml.snakeyaml.DumperOptions$LineBreak getLineBreak() -> j
    316:320:void setDefaultFlowStyle(org.yaml.snakeyaml.DumperOptions$FlowStyle) -> a
    323:323:org.yaml.snakeyaml.DumperOptions$FlowStyle getDefaultFlowStyle() -> k
    340:340:boolean isExplicitStart() -> l
    348:348:boolean isExplicitEnd() -> m
    356:356:java.util.Map getTags() -> n
    370:370:boolean isAllowReadOnlyProperties() -> o
    386:386:java.util.TimeZone getTimeZone() -> p
    400:400:org.yaml.snakeyaml.serializer.AnchorGenerator getAnchorGenerator() -> q
org.yaml.snakeyaml.DumperOptions$FlowStyle -> org.d.a.b:
    org.yaml.snakeyaml.DumperOptions$FlowStyle FLOW -> a
    org.yaml.snakeyaml.DumperOptions$FlowStyle BLOCK -> b
    org.yaml.snakeyaml.DumperOptions$FlowStyle AUTO -> c
    java.lang.Boolean styleBoolean -> d
    org.yaml.snakeyaml.DumperOptions$FlowStyle[] $VALUES -> e
    84:84:org.yaml.snakeyaml.DumperOptions$FlowStyle[] values() -> values
    84:84:org.yaml.snakeyaml.DumperOptions$FlowStyle valueOf(java.lang.String) -> valueOf
    89:91:void <init>(java.lang.String,int,java.lang.Boolean) -> <init>
    94:94:java.lang.Boolean getStyleBoolean() -> a
    99:99:java.lang.String toString() -> toString
    84:85:void <clinit>() -> <clinit>
org.yaml.snakeyaml.DumperOptions$LineBreak -> org.d.a.c:
    org.yaml.snakeyaml.DumperOptions$LineBreak WIN -> a
    org.yaml.snakeyaml.DumperOptions$LineBreak MAC -> b
    org.yaml.snakeyaml.DumperOptions$LineBreak UNIX -> c
    java.lang.String lineBreak -> d
    org.yaml.snakeyaml.DumperOptions$LineBreak[] $VALUES -> e
    106:106:org.yaml.snakeyaml.DumperOptions$LineBreak[] values() -> values
    106:106:org.yaml.snakeyaml.DumperOptions$LineBreak valueOf(java.lang.String) -> valueOf
    111:113:void <init>(java.lang.String,int,java.lang.String) -> <init>
    116:116:java.lang.String getString() -> a
    121:121:java.lang.String toString() -> toString
    106:107:void <clinit>() -> <clinit>
org.yaml.snakeyaml.DumperOptions$ScalarStyle -> org.d.a.d:
    org.yaml.snakeyaml.DumperOptions$ScalarStyle DOUBLE_QUOTED -> a
    org.yaml.snakeyaml.DumperOptions$ScalarStyle SINGLE_QUOTED -> b
    org.yaml.snakeyaml.DumperOptions$ScalarStyle LITERAL -> c
    org.yaml.snakeyaml.DumperOptions$ScalarStyle FOLDED -> d
    org.yaml.snakeyaml.DumperOptions$ScalarStyle PLAIN -> e
    java.lang.Character styleChar -> f
    org.yaml.snakeyaml.DumperOptions$ScalarStyle[] $VALUES -> g
    38:38:org.yaml.snakeyaml.DumperOptions$ScalarStyle[] values() -> values
    38:38:org.yaml.snakeyaml.DumperOptions$ScalarStyle valueOf(java.lang.String) -> valueOf
    43:45:void <init>(java.lang.String,int,java.lang.Character) -> <init>
    48:48:java.lang.Character getChar() -> a
    53:53:java.lang.String toString() -> toString
    38:40:void <clinit>() -> <clinit>
org.yaml.snakeyaml.DumperOptions$Version -> org.d.a.e:
    org.yaml.snakeyaml.DumperOptions$Version V1_0 -> a
    org.yaml.snakeyaml.DumperOptions$Version V1_1 -> b
    java.lang.Integer[] version -> c
    org.yaml.snakeyaml.DumperOptions$Version[] $VALUES -> d
    138:138:org.yaml.snakeyaml.DumperOptions$Version[] values() -> values
    138:138:org.yaml.snakeyaml.DumperOptions$Version valueOf(java.lang.String) -> valueOf
    143:145:void <init>(java.lang.String,int,java.lang.Integer[]) -> <init>
    147:147:int major() -> a
    151:151:java.lang.String getRepresentation() -> b
    156:156:java.lang.String toString() -> toString
    138:139:void <clinit>() -> <clinit>
org.yaml.snakeyaml.LoaderOptions -> org.d.a.f:
    boolean allowDuplicateKeys -> a
    18:20:void <init>() -> <init>
    23:23:boolean isAllowDuplicateKeys() -> a
org.yaml.snakeyaml.TypeDescription -> org.d.a.g:
    java.lang.Class type -> a
    org.yaml.snakeyaml.nodes.Tag tag -> b
    java.util.Map listProperties -> c
    java.util.Map keyProperties -> d
    java.util.Map valueProperties -> e
    34:40:void <init>(java.lang.Class,org.yaml.snakeyaml.nodes.Tag) -> <init>
    47:48:void <init>(java.lang.Class) -> <init>
    57:57:org.yaml.snakeyaml.nodes.Tag getTag() -> a
    80:80:java.lang.Class getType() -> b
    103:103:java.lang.Class getListPropertyType(java.lang.String) -> a
    130:130:java.lang.Class getMapKeyType(java.lang.String) -> b
    141:141:java.lang.Class getMapValueType(java.lang.String) -> c
    146:146:java.lang.String toString() -> toString
org.yaml.snakeyaml.Yaml -> org.d.a.h:
    org.yaml.snakeyaml.resolver.Resolver resolver -> a
    java.lang.String name -> f
    org.yaml.snakeyaml.constructor.BaseConstructor constructor -> b
    org.yaml.snakeyaml.representer.Representer representer -> c
    org.yaml.snakeyaml.DumperOptions dumperOptions -> d
    org.yaml.snakeyaml.LoaderOptions loadingConfig -> e
    64:66:void <init>() -> <init>
    148:149:void <init>(org.yaml.snakeyaml.constructor.BaseConstructor,org.yaml.snakeyaml.representer.Representer,org.yaml.snakeyaml.DumperOptions) -> <init>
    203:224:void <init>(org.yaml.snakeyaml.constructor.BaseConstructor,org.yaml.snakeyaml.representer.Representer,org.yaml.snakeyaml.DumperOptions,org.yaml.snakeyaml.LoaderOptions,org.yaml.snakeyaml.resolver.Resolver) -> <init>
    274:277:void dump(java.lang.Object,java.io.Writer) -> a
    292:304:void dumpAll(java.util.Iterator,java.io.Writer,org.yaml.snakeyaml.nodes.Tag) -> a
    499:499:java.lang.Object loadAs(java.io.InputStream,java.lang.Class) -> a
    503:505:java.lang.Object loadFromReader(org.yaml.snakeyaml.reader.StreamReader,java.lang.Class) -> a
    649:649:java.lang.String toString() -> toString
org.yaml.snakeyaml.composer.Composer -> org.d.a.a.a:
    org.yaml.snakeyaml.parser.Parser parser -> a
    org.yaml.snakeyaml.resolver.Resolver resolver -> b
    java.util.Map anchors -> c
    java.util.Set recursiveNodes -> d
    54:59:void <init>(org.yaml.snakeyaml.parser.Parser,org.yaml.snakeyaml.resolver.Resolver) -> <init>
    68:72:boolean checkNode() -> a
    83:86:org.yaml.snakeyaml.nodes.Node getNode() -> b
    101:115:org.yaml.snakeyaml.nodes.Node getSingleNode() -> c
    120:127:org.yaml.snakeyaml.nodes.Node composeDocument() -> d
    131:158:org.yaml.snakeyaml.nodes.Node composeNode(org.yaml.snakeyaml.nodes.Node) -> a
    162:178:org.yaml.snakeyaml.nodes.Node composeScalarNode(java.lang.String) -> a
    182:203:org.yaml.snakeyaml.nodes.Node composeSequenceNode(java.lang.String) -> b
    207:229:org.yaml.snakeyaml.nodes.Node composeMappingNode(java.lang.String) -> c
    233:239:void composeMappingChildren(java.util.List,org.yaml.snakeyaml.nodes.MappingNode) -> a
    242:242:org.yaml.snakeyaml.nodes.Node composeKeyNode(org.yaml.snakeyaml.nodes.MappingNode) -> a
    246:246:org.yaml.snakeyaml.nodes.Node composeValueNode(org.yaml.snakeyaml.nodes.MappingNode) -> b
org.yaml.snakeyaml.composer.ComposerException -> org.d.a.a.b:
    25:26:void <init>(java.lang.String,org.yaml.snakeyaml.error.Mark,java.lang.String,org.yaml.snakeyaml.error.Mark) -> <init>
org.yaml.snakeyaml.constructor.AbstractConstruct -> org.d.a.b.a:
    25:25:void <init>() -> <init>
    35:38:void construct2ndStep(org.yaml.snakeyaml.nodes.Node,java.lang.Object) -> construct2ndStep
org.yaml.snakeyaml.constructor.BaseConstructor -> org.d.a.b.b:
    java.util.Map yamlClassConstructors -> a
    java.util.Map yamlConstructors -> b
    java.util.Map yamlMultiConstructors -> c
    org.yaml.snakeyaml.composer.Composer composer -> d
    java.util.Map constructedObjects -> f
    java.util.Set recursiveObjects -> g
    java.util.ArrayList maps2fill -> h
    java.util.ArrayList sets2fill -> i
    org.yaml.snakeyaml.nodes.Tag rootTag -> e
    org.yaml.snakeyaml.introspector.PropertyUtils propertyUtils -> j
    boolean explicitPropertyUtils -> k
    boolean allowDuplicateKeys -> l
    47:81:void <init>() -> <init>
    84:85:void setComposer(org.yaml.snakeyaml.composer.Composer) -> setComposer
    94:94:boolean checkData() -> checkData
    104:109:java.lang.Object getData() -> getData
    122:131:java.lang.Object getSingleData(java.lang.Class) -> getSingleData
    143:147:java.lang.Object constructDocument(org.yaml.snakeyaml.nodes.Node) -> a
    151:164:void fillRecursive() -> c
    175:190:java.lang.Object constructObject(org.yaml.snakeyaml.nodes.Node) -> b
    203:215:org.yaml.snakeyaml.constructor.Construct getConstructor(org.yaml.snakeyaml.nodes.Node) -> c
    220:220:java.lang.Object constructScalar(org.yaml.snakeyaml.nodes.ScalarNode) -> a
    224:224:java.util.List createDefaultList(int) -> a
    228:228:java.util.Set createDefaultSet(int) -> b
    232:232:java.lang.Object createArray(java.lang.Class,int) -> a
    238:249:java.util.List constructSequence(org.yaml.snakeyaml.nodes.SequenceNode) -> a
    256:267:java.util.Set constructSet(org.yaml.snakeyaml.nodes.SequenceNode) -> b
    272:272:java.lang.Object constructArray(org.yaml.snakeyaml.nodes.SequenceNode) -> c
    276:279:void constructSequenceStep2(org.yaml.snakeyaml.nodes.SequenceNode,java.util.Collection) -> a
    282:336:java.lang.Object constructArrayStep2(org.yaml.snakeyaml.nodes.SequenceNode,java.lang.Object) -> a
    341:341:java.util.Map createDefaultMap() -> a
    346:346:java.util.Set createDefaultSet() -> b
    350:352:java.util.Set constructSet(org.yaml.snakeyaml.nodes.MappingNode) -> a
    356:358:java.util.Map constructMapping(org.yaml.snakeyaml.nodes.MappingNode) -> b
    362:391:void constructMapping2ndStep(org.yaml.snakeyaml.nodes.MappingNode,java.util.Map) -> a
    394:418:void constructSet2ndStep(org.yaml.snakeyaml.nodes.MappingNode,java.util.Set) -> a
    421:423:void setPropertyUtils(org.yaml.snakeyaml.introspector.PropertyUtils) -> setPropertyUtils
    426:429:org.yaml.snakeyaml.introspector.PropertyUtils getPropertyUtils() -> getPropertyUtils
    451:451:boolean isExplicitPropertyUtils() -> isExplicitPropertyUtils
    455:455:boolean isAllowDuplicateKeys() -> isAllowDuplicateKeys
    459:460:void setAllowDuplicateKeys(boolean) -> setAllowDuplicateKeys
org.yaml.snakeyaml.constructor.BaseConstructor$RecursiveTuple -> org.d.a.b.c:
    java.lang.Object _1 -> a
    java.lang.Object _2 -> b
    436:439:void <init>(java.lang.Object,java.lang.Object) -> <init>
    442:442:java.lang.Object _2() -> a
    446:446:java.lang.Object _1() -> b
org.yaml.snakeyaml.constructor.Construct -> org.d.a.b.d:
    java.lang.Object construct(org.yaml.snakeyaml.nodes.Node) -> construct
    void construct2ndStep(org.yaml.snakeyaml.nodes.Node,java.lang.Object) -> construct2ndStep
org.yaml.snakeyaml.constructor.Constructor -> org.d.a.b.e:
    java.util.Map typeTags -> g
    java.util.Map typeDefinitions -> f
    54:55:void <init>() -> <init>
    64:65:void <init>(java.lang.Class) -> <init>
    71:74:java.lang.Class checkRoot(java.lang.Class) -> a
    77:91:void <init>(org.yaml.snakeyaml.TypeDescription) -> <init>
    103:104:void <init>(java.lang.String) -> <init>
    107:113:java.lang.String check(java.lang.String) -> b
    127:132:org.yaml.snakeyaml.TypeDescription addTypeDescription(org.yaml.snakeyaml.TypeDescription) -> addTypeDescription
    657:669:java.lang.Class getClassForNode(org.yaml.snakeyaml.nodes.Node) -> d
    675:677:java.lang.Class getClassForName(java.lang.String) -> a
org.yaml.snakeyaml.constructor.Constructor$1 -> org.d.a.b.f:
    int[] $SwitchMap$org$yaml$snakeyaml$nodes$NodeId -> a
    245:245:void <clinit>() -> <clinit>
org.yaml.snakeyaml.constructor.Constructor$ConstructMapping -> org.d.a.b.g:
    org.yaml.snakeyaml.constructor.Constructor this$0 -> a
    139:139:void <init>(org.yaml.snakeyaml.constructor.Constructor) -> <init>
    151:189:java.lang.Object construct(org.yaml.snakeyaml.nodes.Node) -> construct
    196:203:void construct2ndStep(org.yaml.snakeyaml.nodes.Node,java.lang.Object) -> construct2ndStep
    215:219:java.lang.Object createEmptyJavaBean(org.yaml.snakeyaml.nodes.MappingNode) -> a
    224:317:java.lang.Object constructJavaBean2ndStep(org.yaml.snakeyaml.nodes.MappingNode,java.lang.Object) -> a
    321:321:org.yaml.snakeyaml.introspector.Property getProperty(java.lang.Class,java.lang.String) -> a
org.yaml.snakeyaml.constructor.Constructor$ConstructScalar -> org.d.a.b.h:
    org.yaml.snakeyaml.constructor.Constructor this$0 -> a
    369:369:void <init>(org.yaml.snakeyaml.constructor.Constructor) -> <init>
    371:424:java.lang.Object construct(org.yaml.snakeyaml.nodes.Node) -> construct
    431:515:java.lang.Object constructStandardJavaInstance(java.lang.Class,org.yaml.snakeyaml.nodes.ScalarNode) -> a
org.yaml.snakeyaml.constructor.Constructor$ConstructSequence -> org.d.a.b.i:
    org.yaml.snakeyaml.constructor.Constructor this$0 -> a
    523:523:void <init>(org.yaml.snakeyaml.constructor.Constructor) -> <init>
    526:606:java.lang.Object construct(org.yaml.snakeyaml.nodes.Node) -> construct
    612:639:java.lang.Class wrapIfPrimitive(java.lang.Class) -> a
    644:653:void construct2ndStep(org.yaml.snakeyaml.nodes.Node,java.lang.Object) -> construct2ndStep
org.yaml.snakeyaml.constructor.Constructor$ConstructYamlObject -> org.d.a.b.j:
    org.yaml.snakeyaml.constructor.Constructor this$0 -> a
    331:331:void <init>(org.yaml.snakeyaml.constructor.Constructor) -> <init>
    334:338:org.yaml.snakeyaml.constructor.Construct getConstructor(org.yaml.snakeyaml.nodes.Node) -> a
    342:351:java.lang.Object construct(org.yaml.snakeyaml.nodes.Node) -> construct
    356:362:void construct2ndStep(org.yaml.snakeyaml.nodes.Node,java.lang.Object) -> construct2ndStep
org.yaml.snakeyaml.constructor.ConstructorException -> org.d.a.b.k:
    26:27:void <init>(java.lang.String,org.yaml.snakeyaml.error.Mark,java.lang.String,org.yaml.snakeyaml.error.Mark,java.lang.Throwable) -> <init>
    31:32:void <init>(java.lang.String,org.yaml.snakeyaml.error.Mark,java.lang.String,org.yaml.snakeyaml.error.Mark) -> <init>
org.yaml.snakeyaml.constructor.SafeConstructor -> org.d.a.b.l:
    org.yaml.snakeyaml.constructor.SafeConstructor$ConstructUndefined undefinedConstructor -> undefinedConstructor
    java.util.Map BOOL_VALUES -> f
    java.util.regex.Pattern TIMESTAMP_REGEXP -> g
    java.util.regex.Pattern YMD_REGEXP -> h
    52:69:void <init>() -> <init>
    73:78:void flattenMapping(org.yaml.snakeyaml.nodes.MappingNode) -> c
    81:114:void processDuplicateKeys(org.yaml.snakeyaml.nodes.MappingNode) -> d
    132:180:java.util.List mergeNode(org.yaml.snakeyaml.nodes.MappingNode,boolean,java.util.Map,java.util.List) -> a
    184:186:void constructMapping2ndStep(org.yaml.snakeyaml.nodes.MappingNode,java.util.Map) -> a
    190:192:void constructSet2ndStep(org.yaml.snakeyaml.nodes.MappingNode,java.util.Set) -> a
    259:271:java.lang.Number createNumber(int,java.lang.String,int) -> a
    48:48:java.util.Map access$000() -> c
    48:48:java.lang.Number access$100(org.yaml.snakeyaml.constructor.SafeConstructor,int,java.lang.String,int) -> a
    48:48:java.util.regex.Pattern access$200() -> d
    48:48:java.util.regex.Pattern access$300() -> e
    50:345:void <clinit>() -> <clinit>
org.yaml.snakeyaml.constructor.SafeConstructor$1 -> org.d.a.b.m:
    int[] $SwitchMap$org$yaml$snakeyaml$nodes$NodeId -> a
    139:139:void <clinit>() -> <clinit>
org.yaml.snakeyaml.constructor.SafeConstructor$ConstructUndefined -> org.d.a.b.n:
    546:546:void <init>() -> <init>
    548:550:java.lang.Object construct(org.yaml.snakeyaml.nodes.Node) -> construct
org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlBinary -> org.d.a.b.o:
    org.yaml.snakeyaml.constructor.SafeConstructor this$0 -> a
    306:306:void <init>(org.yaml.snakeyaml.constructor.SafeConstructor) -> <init>
    309:312:java.lang.Object construct(org.yaml.snakeyaml.nodes.Node) -> construct
org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlBool -> org.d.a.b.p:
    org.yaml.snakeyaml.constructor.SafeConstructor this$0 -> a
    211:211:void <init>(org.yaml.snakeyaml.constructor.SafeConstructor) -> <init>
    213:214:java.lang.Object construct(org.yaml.snakeyaml.nodes.Node) -> construct
org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlFloat -> org.d.a.b.q:
    org.yaml.snakeyaml.constructor.SafeConstructor this$0 -> a
    274:274:void <init>(org.yaml.snakeyaml.constructor.SafeConstructor) -> <init>
    276:301:java.lang.Object construct(org.yaml.snakeyaml.nodes.Node) -> construct
org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlInt -> org.d.a.b.r:
    org.yaml.snakeyaml.constructor.SafeConstructor this$0 -> a
    218:218:void <init>(org.yaml.snakeyaml.constructor.SafeConstructor) -> <init>
    220:253:java.lang.Object construct(org.yaml.snakeyaml.nodes.Node) -> construct
org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlMap -> org.d.a.b.s:
    org.yaml.snakeyaml.constructor.SafeConstructor this$0 -> a
    527:527:void <init>(org.yaml.snakeyaml.constructor.SafeConstructor) -> <init>
    529:532:java.lang.Object construct(org.yaml.snakeyaml.nodes.Node) -> construct
    538:543:void construct2ndStep(org.yaml.snakeyaml.nodes.Node,java.lang.Object) -> construct2ndStep
org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlNull -> org.d.a.b.t:
    org.yaml.snakeyaml.constructor.SafeConstructor this$0 -> a
    194:194:void <init>(org.yaml.snakeyaml.constructor.SafeConstructor) -> <init>
    196:197:java.lang.Object construct(org.yaml.snakeyaml.nodes.Node) -> construct
org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlNumber -> org.d.a.b.u:
    java.text.NumberFormat nf -> b
    org.yaml.snakeyaml.constructor.SafeConstructor this$0 -> a
    316:318:void <init>(org.yaml.snakeyaml.constructor.SafeConstructor) -> <init>
    321:336:java.lang.Object construct(org.yaml.snakeyaml.nodes.Node) -> construct
org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlOmap -> org.d.a.b.v:
    org.yaml.snakeyaml.constructor.SafeConstructor this$0 -> a
    413:413:void <init>(org.yaml.snakeyaml.constructor.SafeConstructor) -> <init>
    417:444:java.lang.Object construct(org.yaml.snakeyaml.nodes.Node) -> construct
org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlPairs -> org.d.a.b.w:
    org.yaml.snakeyaml.constructor.SafeConstructor this$0 -> a
    449:449:void <init>(org.yaml.snakeyaml.constructor.SafeConstructor) -> <init>
    453:478:java.lang.Object construct(org.yaml.snakeyaml.nodes.Node) -> construct
org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlSeq -> org.d.a.b.x:
    org.yaml.snakeyaml.constructor.SafeConstructor this$0 -> a
    507:507:void <init>(org.yaml.snakeyaml.constructor.SafeConstructor) -> <init>
    509:513:java.lang.Object construct(org.yaml.snakeyaml.nodes.Node) -> construct
    519:524:void construct2ndStep(org.yaml.snakeyaml.nodes.Node,java.lang.Object) -> construct2ndStep
org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlSet -> org.d.a.b.y:
    org.yaml.snakeyaml.constructor.SafeConstructor this$0 -> a
    482:482:void <init>(org.yaml.snakeyaml.constructor.SafeConstructor) -> <init>
    484:487:java.lang.Object construct(org.yaml.snakeyaml.nodes.Node) -> construct
    493:498:void construct2ndStep(org.yaml.snakeyaml.nodes.Node,java.lang.Object) -> construct2ndStep
org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlStr -> org.d.a.b.z:
    org.yaml.snakeyaml.constructor.SafeConstructor this$0 -> a
    501:501:void <init>(org.yaml.snakeyaml.constructor.SafeConstructor) -> <init>
    503:503:java.lang.Object construct(org.yaml.snakeyaml.nodes.Node) -> construct
org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlTimestamp -> org.d.a.b.aa:
    java.util.Calendar calendar -> a
    347:347:void <init>() -> <init>
    351:351:java.util.Calendar getCalendar() -> a
    355:408:java.lang.Object construct(org.yaml.snakeyaml.nodes.Node) -> construct
org.yaml.snakeyaml.emitter.Emitable -> org.d.a.c.a:
    void emit(org.yaml.snakeyaml.events.Event) -> a
org.yaml.snakeyaml.emitter.Emitter -> org.d.a.c.b:
    java.util.Map ESCAPE_REPLACEMENTS -> a
    char[] SPACE -> b
    java.util.Map DEFAULT_TAG_PREFIXES -> c
    java.io.Writer stream -> d
    org.yaml.snakeyaml.util.ArrayStack states -> e
    org.yaml.snakeyaml.emitter.EmitterState state -> f
    java.util.Queue events -> g
    org.yaml.snakeyaml.events.Event event -> h
    org.yaml.snakeyaml.util.ArrayStack indents -> i
    java.lang.Integer indent -> j
    int flowLevel -> k
    boolean rootContext -> l
    boolean mappingContext -> m
    boolean simpleKeyContext -> n
    int column -> o
    boolean whitespace -> p
    boolean indention -> q
    boolean openEnded -> r
    java.lang.Boolean canonical -> s
    java.lang.Boolean prettyFlow -> t
    boolean allowUnicode -> u
    int bestIndent -> v
    int indicatorIndent -> w
    int bestWidth -> x
    char[] bestLineBreak -> y
    boolean splitLines -> z
    java.util.Map tagPrefixes -> A
    java.lang.String preparedAnchor -> B
    java.lang.String preparedTag -> C
    org.yaml.snakeyaml.emitter.ScalarAnalysis analysis -> D
    java.lang.Character style -> E
    java.util.regex.Pattern HANDLE_FORMAT -> F
    java.util.regex.Pattern ANCHOR_FORMAT -> G
    154:212:void <init>(java.io.Writer,org.yaml.snakeyaml.DumperOptions) -> <init>
    215:221:void emit(org.yaml.snakeyaml.events.Event) -> a
    226:237:boolean needMoreEvents() -> f
    242:258:boolean needEvents(int) -> a
    262:272:void increaseIndent(boolean,boolean) -> a
    384:412:void expectNode(boolean,boolean,boolean) -> a
    415:420:void expectAlias() -> g
    423:427:void expectScalar() -> h
    432:439:void expectFlowSequence() -> i
    486:493:void expectFlowMapping() -> j
    571:574:void expectBlockSequence() -> k
    605:607:void expectBlockMapping() -> l
    660:660:boolean checkEmptySequence() -> m
    664:664:boolean checkEmptyMapping() -> n
    668:677:boolean checkEmptyDocument() -> o
    681:708:boolean checkSimpleKey() -> p
    714:724:void processAnchor(java.lang.String) -> d
    727:760:void processTag() -> q
    763:786:java.lang.Character chooseScalarStyle() -> r
    790:820:void processScalar() -> s
    825:828:java.lang.String prepareVersion(org.yaml.snakeyaml.DumperOptions$Version) -> a
    834:841:java.lang.String prepareTagHandle(java.lang.String) -> e
    845:860:java.lang.String prepareTagPrefix(java.lang.String) -> f
    864:889:java.lang.String prepareTag(java.lang.String) -> g
    895:901:java.lang.String prepareAnchor(java.lang.String) -> a
    906:1069:org.yaml.snakeyaml.emitter.ScalarAnalysis analyzeScalar(java.lang.String) -> h
    1076:1077:void flushStream() -> a
    1081:1081:void writeStreamStart() -> b
    1084:1085:void writeStreamEnd() -> c
    1089:1098:void writeIndicator(java.lang.String,boolean,boolean,boolean) -> a
    1102:1113:void writeIndent() -> d
    1116:1126:void writeWhitespace(int) -> b
    1129:1137:void writeLineBreak(java.lang.String) -> i
    1140:1143:void writeVersionDirective(java.lang.String) -> b
    1148:1153:void writeTagDirective(java.lang.String,java.lang.String) -> a
    1157:1217:void writeSingleQuoted(java.lang.String,boolean) -> c
    1220:1292:void writeDoubleQuoted(java.lang.String,boolean) -> d
    1295:1305:java.lang.String determineBlockHints(java.lang.String) -> j
    1309:1371:void writeFolded(java.lang.String,boolean) -> a
    1374:1416:void writeLiteral(java.lang.String) -> c
    1419:1484:void writePlain(java.lang.String,boolean) -> b
    62:62:org.yaml.snakeyaml.events.Event access$100(org.yaml.snakeyaml.emitter.Emitter) -> a
    62:62:org.yaml.snakeyaml.emitter.EmitterState access$202(org.yaml.snakeyaml.emitter.Emitter,org.yaml.snakeyaml.emitter.EmitterState) -> a
    62:62:boolean access$400(org.yaml.snakeyaml.emitter.Emitter) -> b
    62:62:java.lang.String access$500(org.yaml.snakeyaml.emitter.Emitter,org.yaml.snakeyaml.DumperOptions$Version) -> a
    62:62:java.util.Map access$602(org.yaml.snakeyaml.emitter.Emitter,java.util.Map) -> a
    62:62:java.util.Map access$700() -> e
    62:62:java.util.Map access$600(org.yaml.snakeyaml.emitter.Emitter) -> c
    62:62:java.lang.String access$800(org.yaml.snakeyaml.emitter.Emitter,java.lang.String) -> a
    62:62:java.lang.String access$900(org.yaml.snakeyaml.emitter.Emitter,java.lang.String) -> b
    62:62:java.lang.Boolean access$1000(org.yaml.snakeyaml.emitter.Emitter) -> d
    62:62:boolean access$1100(org.yaml.snakeyaml.emitter.Emitter) -> e
    62:62:org.yaml.snakeyaml.util.ArrayStack access$1500(org.yaml.snakeyaml.emitter.Emitter) -> f
    62:62:void access$1600(org.yaml.snakeyaml.emitter.Emitter,boolean,boolean,boolean) -> a
    62:62:java.lang.Integer access$1802(org.yaml.snakeyaml.emitter.Emitter,java.lang.Integer) -> a
    62:62:org.yaml.snakeyaml.util.ArrayStack access$1900(org.yaml.snakeyaml.emitter.Emitter) -> g
    62:62:int access$2010(org.yaml.snakeyaml.emitter.Emitter) -> h
    62:62:int access$2100(org.yaml.snakeyaml.emitter.Emitter) -> i
    62:62:int access$2200(org.yaml.snakeyaml.emitter.Emitter) -> j
    62:62:boolean access$2300(org.yaml.snakeyaml.emitter.Emitter) -> k
    62:62:java.lang.Boolean access$2400(org.yaml.snakeyaml.emitter.Emitter) -> l
    62:62:boolean access$2700(org.yaml.snakeyaml.emitter.Emitter) -> m
    62:62:int access$3200(org.yaml.snakeyaml.emitter.Emitter) -> n
    62:62:void access$3300(org.yaml.snakeyaml.emitter.Emitter,int) -> a
    63:892:void <clinit>() -> <clinit>
org.yaml.snakeyaml.emitter.Emitter$1 -> org.d.a.c.c:
org.yaml.snakeyaml.emitter.Emitter$ExpectBlockMappingKey -> org.d.a.c.d:
    boolean first -> b
    org.yaml.snakeyaml.emitter.Emitter this$0 -> a
    618:620:void <init>(org.yaml.snakeyaml.emitter.Emitter,boolean) -> <init>
    623:637:void expect() -> a
org.yaml.snakeyaml.emitter.Emitter$ExpectBlockMappingSimpleValue -> org.d.a.c.e:
    org.yaml.snakeyaml.emitter.Emitter this$0 -> a
    640:640:void <init>(org.yaml.snakeyaml.emitter.Emitter) -> <init>
    642:645:void expect() -> a
    640:640:void <init>(org.yaml.snakeyaml.emitter.Emitter,org.yaml.snakeyaml.emitter.Emitter$1) -> <init>
org.yaml.snakeyaml.emitter.Emitter$ExpectBlockMappingValue -> org.d.a.c.f:
    org.yaml.snakeyaml.emitter.Emitter this$0 -> a
    648:648:void <init>(org.yaml.snakeyaml.emitter.Emitter) -> <init>
    650:654:void expect() -> a
    648:648:void <init>(org.yaml.snakeyaml.emitter.Emitter,org.yaml.snakeyaml.emitter.Emitter$1) -> <init>
org.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem -> org.d.a.c.g:
    boolean first -> b
    org.yaml.snakeyaml.emitter.Emitter this$0 -> a
    585:587:void <init>(org.yaml.snakeyaml.emitter.Emitter,boolean) -> <init>
    590:600:void expect() -> a
org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentEnd -> org.d.a.c.h:
    org.yaml.snakeyaml.emitter.Emitter this$0 -> a
    358:358:void <init>(org.yaml.snakeyaml.emitter.Emitter) -> <init>
    360:371:void expect() -> a
    358:358:void <init>(org.yaml.snakeyaml.emitter.Emitter,org.yaml.snakeyaml.emitter.Emitter$1) -> <init>
org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentRoot -> org.d.a.c.i:
    org.yaml.snakeyaml.emitter.Emitter this$0 -> a
    374:374:void <init>(org.yaml.snakeyaml.emitter.Emitter) -> <init>
    376:378:void expect() -> a
    374:374:void <init>(org.yaml.snakeyaml.emitter.Emitter,org.yaml.snakeyaml.emitter.Emitter$1) -> <init>
org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart -> org.d.a.c.j:
    boolean first -> b
    org.yaml.snakeyaml.emitter.Emitter this$0 -> a
    306:308:void <init>(org.yaml.snakeyaml.emitter.Emitter,boolean) -> <init>
    311:355:void expect() -> a
org.yaml.snakeyaml.emitter.Emitter$ExpectFirstBlockMappingKey -> org.d.a.c.k:
    org.yaml.snakeyaml.emitter.Emitter this$0 -> a
    609:609:void <init>(org.yaml.snakeyaml.emitter.Emitter) -> <init>
    611:612:void expect() -> a
    609:609:void <init>(org.yaml.snakeyaml.emitter.Emitter,org.yaml.snakeyaml.emitter.Emitter$1) -> <init>
org.yaml.snakeyaml.emitter.Emitter$ExpectFirstBlockSequenceItem -> org.d.a.c.l:
    org.yaml.snakeyaml.emitter.Emitter this$0 -> a
    576:576:void <init>(org.yaml.snakeyaml.emitter.Emitter) -> <init>
    578:579:void expect() -> a
    576:576:void <init>(org.yaml.snakeyaml.emitter.Emitter,org.yaml.snakeyaml.emitter.Emitter$1) -> <init>
org.yaml.snakeyaml.emitter.Emitter$ExpectFirstDocumentStart -> org.d.a.c.m:
    org.yaml.snakeyaml.emitter.Emitter this$0 -> a
    297:297:void <init>(org.yaml.snakeyaml.emitter.Emitter) -> <init>
    299:300:void expect() -> a
    297:297:void <init>(org.yaml.snakeyaml.emitter.Emitter,org.yaml.snakeyaml.emitter.Emitter$1) -> <init>
org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowMappingKey -> org.d.a.c.n:
    org.yaml.snakeyaml.emitter.Emitter this$0 -> a
    495:495:void <init>(org.yaml.snakeyaml.emitter.Emitter) -> <init>
    497:515:void expect() -> a
    495:495:void <init>(org.yaml.snakeyaml.emitter.Emitter,org.yaml.snakeyaml.emitter.Emitter$1) -> <init>
org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowSequenceItem -> org.d.a.c.o:
    org.yaml.snakeyaml.emitter.Emitter this$0 -> a
    441:441:void <init>(org.yaml.snakeyaml.emitter.Emitter) -> <init>
    443:455:void expect() -> a
    441:441:void <init>(org.yaml.snakeyaml.emitter.Emitter,org.yaml.snakeyaml.emitter.Emitter$1) -> <init>
org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingKey -> org.d.a.c.p:
    org.yaml.snakeyaml.emitter.Emitter this$0 -> a
    518:518:void <init>(org.yaml.snakeyaml.emitter.Emitter) -> <init>
    520:546:void expect() -> a
    518:518:void <init>(org.yaml.snakeyaml.emitter.Emitter,org.yaml.snakeyaml.emitter.Emitter$1) -> <init>
org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingSimpleValue -> org.d.a.c.q:
    org.yaml.snakeyaml.emitter.Emitter this$0 -> a
    549:549:void <init>(org.yaml.snakeyaml.emitter.Emitter) -> <init>
    551:554:void expect() -> a
    549:549:void <init>(org.yaml.snakeyaml.emitter.Emitter,org.yaml.snakeyaml.emitter.Emitter$1) -> <init>
org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingValue -> org.d.a.c.r:
    org.yaml.snakeyaml.emitter.Emitter this$0 -> a
    557:557:void <init>(org.yaml.snakeyaml.emitter.Emitter) -> <init>
    559:565:void expect() -> a
    557:557:void <init>(org.yaml.snakeyaml.emitter.Emitter,org.yaml.snakeyaml.emitter.Emitter$1) -> <init>
org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem -> org.d.a.c.s:
    org.yaml.snakeyaml.emitter.Emitter this$0 -> a
    458:458:void <init>(org.yaml.snakeyaml.emitter.Emitter) -> <init>
    460:480:void expect() -> a
    458:458:void <init>(org.yaml.snakeyaml.emitter.Emitter,org.yaml.snakeyaml.emitter.Emitter$1) -> <init>
org.yaml.snakeyaml.emitter.Emitter$ExpectNothing -> org.d.a.c.t:
    org.yaml.snakeyaml.emitter.Emitter this$0 -> a
    289:289:void <init>(org.yaml.snakeyaml.emitter.Emitter) -> <init>
    291:291:void expect() -> a
    289:289:void <init>(org.yaml.snakeyaml.emitter.Emitter,org.yaml.snakeyaml.emitter.Emitter$1) -> <init>
org.yaml.snakeyaml.emitter.Emitter$ExpectStreamStart -> org.d.a.c.u:
    org.yaml.snakeyaml.emitter.Emitter this$0 -> a
    278:278:void <init>(org.yaml.snakeyaml.emitter.Emitter) -> <init>
    280:286:void expect() -> a
    278:278:void <init>(org.yaml.snakeyaml.emitter.Emitter,org.yaml.snakeyaml.emitter.Emitter$1) -> <init>
org.yaml.snakeyaml.emitter.EmitterException -> org.d.a.c.v:
    24:25:void <init>(java.lang.String) -> <init>
org.yaml.snakeyaml.emitter.EmitterState -> org.d.a.c.w:
    void expect() -> a
org.yaml.snakeyaml.emitter.ScalarAnalysis -> org.d.a.c.x:
    java.lang.String scalar -> a
    boolean empty -> b
    boolean multiline -> c
    boolean allowFlowPlain -> d
    boolean allowBlockPlain -> e
    boolean allowSingleQuoted -> f
    boolean allowBlock -> g
    28:36:void <init>(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean) -> <init>
org.yaml.snakeyaml.error.Mark -> org.d.a.d.a:
    java.lang.String name -> a
    int index -> b
    int line -> c
    int column -> d
    java.lang.String buffer -> e
    int pointer -> f
    35:42:void <init>(java.lang.String,int,int,int,java.lang.String,int) -> <init>
    45:45:boolean isLineBreak(int) -> a
    49:86:java.lang.String get_snippet(int,int) -> a
    90:90:java.lang.String get_snippet() -> a
    95:106:java.lang.String toString() -> toString
    110:110:java.lang.String getName() -> b
    118:118:int getLine() -> c
    126:126:int getColumn() -> d
org.yaml.snakeyaml.error.MarkedYAMLException -> org.d.a.d.b:
    java.lang.String context -> a
    org.yaml.snakeyaml.error.Mark contextMark -> b
    java.lang.String problem -> c
    org.yaml.snakeyaml.error.Mark problemMark -> d
    java.lang.String note -> e
    29:30:void <init>(java.lang.String,org.yaml.snakeyaml.error.Mark,java.lang.String,org.yaml.snakeyaml.error.Mark,java.lang.String) -> <init>
    34:40:void <init>(java.lang.String,org.yaml.snakeyaml.error.Mark,java.lang.String,org.yaml.snakeyaml.error.Mark,java.lang.String,java.lang.Throwable) -> <init>
    43:44:void <init>(java.lang.String,org.yaml.snakeyaml.error.Mark,java.lang.String,org.yaml.snakeyaml.error.Mark) -> <init>
    48:49:void <init>(java.lang.String,org.yaml.snakeyaml.error.Mark,java.lang.String,org.yaml.snakeyaml.error.Mark,java.lang.Throwable) -> <init>
    53:53:java.lang.String getMessage() -> getMessage
    58:83:java.lang.String toString() -> toString
org.yaml.snakeyaml.error.YAMLException -> org.d.a.d.c:
    22:23:void <init>(java.lang.String) -> <init>
    26:27:void <init>(java.lang.Throwable) -> <init>
    30:31:void <init>(java.lang.String,java.lang.Throwable) -> <init>
org.yaml.snakeyaml.events.AliasEvent -> org.d.a.e.a:
    25:26:void <init>(java.lang.String,org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark) -> <init>
    30:30:boolean is(org.yaml.snakeyaml.events.Event$ID) -> a
org.yaml.snakeyaml.events.CollectionEndEvent -> org.d.a.e.b:
    26:27:void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark) -> <init>
org.yaml.snakeyaml.events.CollectionStartEvent -> org.d.a.e.c:
    java.lang.String tag -> a
    boolean implicit -> b
    java.lang.Boolean flowStyle -> c
    33:37:void <init>(java.lang.String,java.lang.String,boolean,org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark,java.lang.Boolean) -> <init>
    46:46:java.lang.String getTag() -> a
    56:56:boolean getImplicit() -> b
    66:66:java.lang.Boolean getFlowStyle() -> c
    71:71:java.lang.String getArguments() -> d
org.yaml.snakeyaml.events.DocumentEndEvent -> org.d.a.e.d:
    boolean explicit -> a
    30:32:void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark,boolean) -> <init>
    35:35:boolean getExplicit() -> a
    40:40:boolean is(org.yaml.snakeyaml.events.Event$ID) -> a
org.yaml.snakeyaml.events.DocumentStartEvent -> org.d.a.e.e:
    boolean explicit -> a
    org.yaml.snakeyaml.DumperOptions$Version version -> b
    java.util.Map tags -> c
    36:44:void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark,boolean,org.yaml.snakeyaml.DumperOptions$Version,java.util.Map) -> <init>
    47:47:boolean getExplicit() -> a
    59:59:org.yaml.snakeyaml.DumperOptions$Version getVersion() -> b
    69:69:java.util.Map getTags() -> c
    74:74:boolean is(org.yaml.snakeyaml.events.Event$ID) -> a
org.yaml.snakeyaml.events.Event -> org.d.a.e.f:
    org.yaml.snakeyaml.error.Mark startMark -> a
    org.yaml.snakeyaml.error.Mark endMark -> b
    32:35:void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark) -> <init>
    38:38:java.lang.String toString() -> toString
    42:42:org.yaml.snakeyaml.error.Mark getStartMark() -> e
    46:46:org.yaml.snakeyaml.error.Mark getEndMark() -> f
    55:55:java.lang.String getArguments() -> d
    boolean is(org.yaml.snakeyaml.events.Event$ID) -> a
    65:68:boolean equals(java.lang.Object) -> equals
    77:77:int hashCode() -> hashCode
org.yaml.snakeyaml.events.Event$ID -> org.d.a.e.g:
    org.yaml.snakeyaml.events.Event$ID Alias -> a
    org.yaml.snakeyaml.events.Event$ID DocumentEnd -> b
    org.yaml.snakeyaml.events.Event$ID DocumentStart -> c
    org.yaml.snakeyaml.events.Event$ID MappingEnd -> d
    org.yaml.snakeyaml.events.Event$ID MappingStart -> e
    org.yaml.snakeyaml.events.Event$ID Scalar -> f
    org.yaml.snakeyaml.events.Event$ID SequenceEnd -> g
    org.yaml.snakeyaml.events.Event$ID SequenceStart -> h
    org.yaml.snakeyaml.events.Event$ID StreamEnd -> i
    org.yaml.snakeyaml.events.Event$ID StreamStart -> j
    org.yaml.snakeyaml.events.Event$ID[] $VALUES -> k
    25:25:org.yaml.snakeyaml.events.Event$ID[] values() -> values
    25:25:org.yaml.snakeyaml.events.Event$ID valueOf(java.lang.String) -> valueOf
    25:25:void <init>(java.lang.String,int) -> <init>
    25:26:void <clinit>() -> <clinit>
org.yaml.snakeyaml.events.ImplicitTuple -> org.d.a.e.h:
    boolean plain -> a
    boolean nonPlain -> b
    29:32:void <init>(boolean,boolean) -> <init>
    39:39:boolean canOmitTagInPlainScalar() -> a
    47:47:boolean canOmitTagInNonPlainScalar() -> b
    56:56:java.lang.String toString() -> toString
org.yaml.snakeyaml.events.MappingEndEvent -> org.d.a.e.i:
    28:29:void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark) -> <init>
    33:33:boolean is(org.yaml.snakeyaml.events.Event$ID) -> a
org.yaml.snakeyaml.events.MappingStartEvent -> org.d.a.e.j:
    37:38:void <init>(java.lang.String,java.lang.String,boolean,org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark,java.lang.Boolean) -> <init>
    42:42:boolean is(org.yaml.snakeyaml.events.Event$ID) -> a
org.yaml.snakeyaml.events.NodeEvent -> org.d.a.e.k:
    java.lang.String anchor -> a
    28:30:void <init>(java.lang.String,org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark) -> <init>
    42:42:java.lang.String getAnchor() -> g
    47:47:java.lang.String getArguments() -> d
org.yaml.snakeyaml.events.ScalarEvent -> org.d.a.e.l:
    java.lang.String tag -> a
    java.lang.Character style -> b
    java.lang.String value -> c
    org.yaml.snakeyaml.events.ImplicitTuple implicit -> d
    36:41:void <init>(java.lang.String,java.lang.String,org.yaml.snakeyaml.events.ImplicitTuple,java.lang.String,org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark,java.lang.Character) -> <init>
    50:50:java.lang.String getTag() -> a
    73:73:java.lang.Character getStyle() -> b
    85:85:java.lang.String getValue() -> c
    89:89:org.yaml.snakeyaml.events.ImplicitTuple getImplicit() -> h
    94:94:java.lang.String getArguments() -> d
    99:99:boolean is(org.yaml.snakeyaml.events.Event$ID) -> a
org.yaml.snakeyaml.events.SequenceEndEvent -> org.d.a.e.m:
    28:29:void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark) -> <init>
    33:33:boolean is(org.yaml.snakeyaml.events.Event$ID) -> a
org.yaml.snakeyaml.events.SequenceStartEvent -> org.d.a.e.n:
    32:33:void <init>(java.lang.String,java.lang.String,boolean,org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark,java.lang.Boolean) -> <init>
    37:37:boolean is(org.yaml.snakeyaml.events.Event$ID) -> a
org.yaml.snakeyaml.events.StreamEndEvent -> org.d.a.e.o:
    33:34:void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark) -> <init>
    38:38:boolean is(org.yaml.snakeyaml.events.Event$ID) -> a
org.yaml.snakeyaml.events.StreamStartEvent -> org.d.a.e.p:
    34:35:void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark) -> <init>
    39:39:boolean is(org.yaml.snakeyaml.events.Event$ID) -> a
org.yaml.snakeyaml.external.biz.base64Coder.Base64Coder -> org.d.a.f.a.a.a:
    java.lang.String systemLineSeparator -> a
    char[] map1 -> b
    byte[] map2 -> c
    129:129:char[] encode(byte[]) -> a
    160:181:char[] encode(byte[],int,int) -> a
    246:246:byte[] decode(char[]) -> a
    266:298:byte[] decode(char[],int,int) -> a
    35:58:void <clinit>() -> <clinit>
org.yaml.snakeyaml.external.com.google.gdata.util.common.base.Escaper -> org.d.a.f.b.a.a.a.a.a.a:
    java.lang.String escape(java.lang.String) -> a
org.yaml.snakeyaml.external.com.google.gdata.util.common.base.PercentEscaper -> org.d.a.f.b.a.a.a.a.a.b:
    char[] URI_ESCAPED_SPACE -> b
    char[] UPPER_HEX_DIGITS -> c
    boolean plusForSpace -> d
    boolean[] safeOctets -> e
    120:138:void <init>(java.lang.String,boolean) -> <init>
    146:164:boolean[] createSafeOctets(java.lang.String) -> b
    174:180:int nextEscapeIndex(java.lang.CharSequence,int,int) -> a
    190:197:java.lang.String escape(java.lang.String) -> a
    208:278:char[] escape(int) -> a
    90:92:void <clinit>() -> <clinit>
org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper -> org.d.a.f.b.a.a.a.a.a.c:
    java.lang.ThreadLocal DEST_TL -> b
    boolean $assertionsDisabled -> a
    56:56:void <init>() -> <init>
    char[] escape(int) -> a
    122:130:int nextEscapeIndex(java.lang.CharSequence,int,int) -> a
    161:163:java.lang.String escape(java.lang.String) -> a
    188:238:java.lang.String escapeSlow(java.lang.String,int) -> a
    456:479:int codePointAt(java.lang.CharSequence,int,int) -> b
    488:492:char[] growBuffer(char[],int,int) -> a
    56:500:void <clinit>() -> <clinit>
org.yaml.snakeyaml.external.com.google.gdata.util.common.base.UnicodeEscaper$2 -> org.d.a.f.b.a.a.a.a.a.d:
    500:500:void <init>() -> <init>
    503:503:char[] initialValue() -> a
    500:500:java.lang.Object initialValue() -> initialValue
org.yaml.snakeyaml.introspector.BeanAccess -> org.d.a.g.a:
    org.yaml.snakeyaml.introspector.BeanAccess DEFAULT -> a
    org.yaml.snakeyaml.introspector.BeanAccess FIELD -> b
    org.yaml.snakeyaml.introspector.BeanAccess PROPERTY -> c
    org.yaml.snakeyaml.introspector.BeanAccess[] $VALUES -> d
    21:21:org.yaml.snakeyaml.introspector.BeanAccess[] values() -> values
    21:21:org.yaml.snakeyaml.introspector.BeanAccess valueOf(java.lang.String) -> valueOf
    21:21:void <init>(java.lang.String,int) -> <init>
    21:29:void <clinit>() -> <clinit>
org.yaml.snakeyaml.introspector.FieldProperty -> org.d.a.g.b:
    java.lang.reflect.Field field -> a
    33:36:void <init>(java.lang.reflect.Field) -> <init>
    40:41:void set(java.lang.Object,java.lang.Object) -> a
    46:48:java.lang.Object get(java.lang.Object) -> a
org.yaml.snakeyaml.introspector.GenericProperty -> org.d.a.g.c:
    java.lang.reflect.Type genType -> a
    boolean actualClassesChecked -> b
    java.lang.Class[] actualClasses -> c
    28:31:void <init>(java.lang.String,java.lang.Class,java.lang.reflect.Type) -> <init>
    37:80:java.lang.Class[] getActualTypeArguments() -> a
org.yaml.snakeyaml.introspector.MissingProperty -> org.d.a.g.d:
    25:26:void <init>(java.lang.String) -> <init>
    30:30:java.lang.Class[] getActualTypeArguments() -> a
    38:38:void set(java.lang.Object,java.lang.Object) -> a
    42:42:java.lang.Object get(java.lang.Object) -> a
org.yaml.snakeyaml.introspector.Property -> org.d.a.g.e:
    java.lang.String name -> a
    java.lang.Class type -> b
    36:39:void <init>(java.lang.String,java.lang.Class) -> <init>
    42:42:java.lang.Class getType() -> b
    java.lang.Class[] getActualTypeArguments() -> a
    48:48:java.lang.String getName() -> c
    53:53:java.lang.String toString() -> toString
    57:57:int compareTo(org.yaml.snakeyaml.introspector.Property) -> a
    61:61:boolean isWritable() -> d
    65:65:boolean isReadable() -> e
    void set(java.lang.Object,java.lang.Object) -> a
    java.lang.Object get(java.lang.Object) -> a
    74:74:int hashCode() -> hashCode
    79:83:boolean equals(java.lang.Object) -> equals
    31:31:int compareTo(java.lang.Object) -> compareTo
org.yaml.snakeyaml.introspector.PropertyUtils -> org.d.a.g.f:
    java.util.Map propertiesCache -> a
    java.util.Map readableProperties -> b
    org.yaml.snakeyaml.introspector.BeanAccess beanAccess -> c
    boolean allowReadOnlyProperties -> d
    boolean skipMissingProperties -> e
    29:35:void <init>() -> <init>
    38:54:java.util.Map getPropertiesMap(java.lang.Class,org.yaml.snakeyaml.introspector.BeanAccess) -> a
    58:58:java.util.Set getProperties(java.lang.Class) -> a
    62:67:java.util.Set getProperties(java.lang.Class,org.yaml.snakeyaml.introspector.BeanAccess) -> b
    71:78:java.util.Set createPropertySet(java.lang.Class,org.yaml.snakeyaml.introspector.BeanAccess) -> c
    82:82:org.yaml.snakeyaml.introspector.Property getProperty(java.lang.Class,java.lang.String) -> a
    86:95:org.yaml.snakeyaml.introspector.Property getProperty(java.lang.Class,java.lang.String,org.yaml.snakeyaml.introspector.BeanAccess) -> a
    107:111:void setAllowReadOnlyProperties(boolean) -> a
    121:125:void setSkipMissingProperties(boolean) -> b
org.yaml.snakeyaml.nodes.AnchorNode -> org.d.a.h.a:
    org.yaml.snakeyaml.nodes.Node realNode -> d
    23:25:void <init>(org.yaml.snakeyaml.nodes.Node) -> <init>
    29:29:org.yaml.snakeyaml.nodes.NodeId getNodeId() -> a
    33:33:org.yaml.snakeyaml.nodes.Node getRealNode() -> b
org.yaml.snakeyaml.nodes.CollectionNode -> org.d.a.h.b:
    java.lang.Boolean flowStyle -> d
    28:30:void <init>(org.yaml.snakeyaml.nodes.Tag,org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark,java.lang.Boolean) -> <init>
    39:39:java.lang.Boolean getFlowStyle() -> b
    43:44:void setFlowStyle(java.lang.Boolean) -> a
    47:48:void setEndMark(org.yaml.snakeyaml.error.Mark) -> a
org.yaml.snakeyaml.nodes.MappingNode -> org.d.a.h.c:
    java.util.List value -> d
    boolean merged -> e
    30:40:void <init>(org.yaml.snakeyaml.nodes.Tag,boolean,java.util.List,org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark,java.lang.Boolean) -> <init>
    43:44:void <init>(org.yaml.snakeyaml.nodes.Tag,java.util.List,java.lang.Boolean) -> <init>
    48:48:org.yaml.snakeyaml.nodes.NodeId getNodeId() -> a
    57:57:java.util.List getValue() -> c
    61:62:void setValue(java.util.List) -> a
    65:68:void setOnlyKeyType(java.lang.Class) -> a
    71:75:void setTypes(java.lang.Class,java.lang.Class) -> a
    80:94:java.lang.String toString() -> toString
    102:103:void setMerged(boolean) -> a
    109:109:boolean isMerged() -> d
org.yaml.snakeyaml.nodes.Node -> org.d.a.h.d:
    org.yaml.snakeyaml.nodes.Tag tag -> d
    org.yaml.snakeyaml.error.Mark startMark -> e
    org.yaml.snakeyaml.error.Mark endMark -> a
    java.lang.Class type -> f
    boolean twoStepsConstruction -> g
    boolean resolved -> b
    java.lang.Boolean useClassConstructor -> c
    45:53:void <init>(org.yaml.snakeyaml.nodes.Tag,org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark) -> <init>
    63:63:org.yaml.snakeyaml.nodes.Tag getTag() -> e
    67:67:org.yaml.snakeyaml.error.Mark getEndMark() -> f
    org.yaml.snakeyaml.nodes.NodeId getNodeId() -> a
    79:79:org.yaml.snakeyaml.error.Mark getStartMark() -> g
    83:87:void setTag(org.yaml.snakeyaml.nodes.Tag) -> a
    94:94:boolean equals(java.lang.Object) -> equals
    98:98:java.lang.Class getType() -> h
    102:105:void setType(java.lang.Class) -> b
    108:109:void setTwoStepsConstruction(boolean) -> b
    129:129:boolean isTwoStepsConstruction() -> i
    134:134:int hashCode() -> hashCode
    138:150:boolean useClassConstructor() -> j
    154:155:void setUseClassConstructor(java.lang.Boolean) -> b
    164:164:boolean isResolved() -> k
org.yaml.snakeyaml.nodes.NodeId -> org.d.a.h.e:
    org.yaml.snakeyaml.nodes.NodeId scalar -> a
    org.yaml.snakeyaml.nodes.NodeId sequence -> b
    org.yaml.snakeyaml.nodes.NodeId mapping -> c
    org.yaml.snakeyaml.nodes.NodeId anchor -> d
    org.yaml.snakeyaml.nodes.NodeId[] $VALUES -> e
    21:21:org.yaml.snakeyaml.nodes.NodeId[] values() -> values
    21:21:org.yaml.snakeyaml.nodes.NodeId valueOf(java.lang.String) -> valueOf
    21:21:void <init>(java.lang.String,int) -> <init>
    21:22:void <clinit>() -> <clinit>
org.yaml.snakeyaml.nodes.NodeTuple -> org.d.a.h.f:
    org.yaml.snakeyaml.nodes.Node keyNode -> a
    org.yaml.snakeyaml.nodes.Node valueNode -> b
    26:32:void <init>(org.yaml.snakeyaml.nodes.Node,org.yaml.snakeyaml.nodes.Node) -> <init>
    40:40:org.yaml.snakeyaml.nodes.Node getKeyNode() -> a
    49:49:org.yaml.snakeyaml.nodes.Node getValueNode() -> b
    54:54:java.lang.String toString() -> toString
org.yaml.snakeyaml.nodes.ScalarNode -> org.d.a.h.g:
    java.lang.Character style -> d
    java.lang.String value -> e
    31:32:void <init>(org.yaml.snakeyaml.nodes.Tag,java.lang.String,org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark,java.lang.Character) -> <init>
    36:43:void <init>(org.yaml.snakeyaml.nodes.Tag,boolean,java.lang.String,org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark,java.lang.Character) -> <init>
    54:54:java.lang.Character getStyle() -> b
    59:59:org.yaml.snakeyaml.nodes.NodeId getNodeId() -> a
    68:68:java.lang.String getValue() -> c
    72:72:java.lang.String toString() -> toString
org.yaml.snakeyaml.nodes.SequenceNode -> org.d.a.h.h:
    java.util.List value -> d
    33:39:void <init>(org.yaml.snakeyaml.nodes.Tag,boolean,java.util.List,org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark,java.lang.Boolean) -> <init>
    42:43:void <init>(org.yaml.snakeyaml.nodes.Tag,java.util.List,java.lang.Boolean) -> <init>
    47:47:org.yaml.snakeyaml.nodes.NodeId getNodeId() -> a
    56:56:java.util.List getValue() -> c
    60:63:void setListType(java.lang.Class) -> a
    66:66:java.lang.String toString() -> toString
org.yaml.snakeyaml.nodes.Tag -> org.d.a.h.i:
    org.yaml.snakeyaml.nodes.Tag YAML -> a
    org.yaml.snakeyaml.nodes.Tag MERGE -> b
    org.yaml.snakeyaml.nodes.Tag SET -> c
    org.yaml.snakeyaml.nodes.Tag PAIRS -> d
    org.yaml.snakeyaml.nodes.Tag OMAP -> e
    org.yaml.snakeyaml.nodes.Tag BINARY -> f
    org.yaml.snakeyaml.nodes.Tag INT -> g
    org.yaml.snakeyaml.nodes.Tag FLOAT -> h
    org.yaml.snakeyaml.nodes.Tag TIMESTAMP -> i
    org.yaml.snakeyaml.nodes.Tag BOOL -> j
    org.yaml.snakeyaml.nodes.Tag NULL -> k
    org.yaml.snakeyaml.nodes.Tag STR -> l
    org.yaml.snakeyaml.nodes.Tag SEQ -> m
    org.yaml.snakeyaml.nodes.Tag MAP -> n
    java.util.Map COMPATIBILITY_MAP -> o
    java.lang.String value -> p
    boolean secondary -> q
    70:82:void <init>(java.lang.String) -> <init>
    70:89:void <init>(java.lang.Class) -> <init>
    99:99:boolean isSecondary() -> a
    103:103:java.lang.String getValue() -> b
    107:107:boolean startsWith(java.lang.String) -> a
    111:114:java.lang.String getClassName() -> c
    123:123:java.lang.String toString() -> toString
    128:131:boolean equals(java.lang.Object) -> equals
    136:136:int hashCode() -> hashCode
    149:153:boolean isCompatible(java.lang.Class) -> a
    165:165:boolean matches(java.lang.Class) -> b
    169:169:int compareTo(org.yaml.snakeyaml.nodes.Tag) -> a
    31:31:int compareTo(java.lang.Object) -> compareTo
    33:67:void <clinit>() -> <clinit>
org.yaml.snakeyaml.parser.Parser -> org.d.a.i.a:
    boolean checkEvent(org.yaml.snakeyaml.events.Event$ID) -> a
    org.yaml.snakeyaml.events.Event peekEvent() -> a
    org.yaml.snakeyaml.events.Event getEvent() -> b
org.yaml.snakeyaml.parser.ParserException -> org.d.a.i.b:
    42:43:void <init>(java.lang.String,org.yaml.snakeyaml.error.Mark,java.lang.String,org.yaml.snakeyaml.error.Mark) -> <init>
org.yaml.snakeyaml.parser.ParserImpl -> org.d.a.i.c:
    java.util.Map DEFAULT_TAGS -> b
    org.yaml.snakeyaml.scanner.Scanner scanner -> a
    org.yaml.snakeyaml.events.Event currentEvent -> c
    org.yaml.snakeyaml.util.ArrayStack states -> d
    org.yaml.snakeyaml.util.ArrayStack marks -> e
    org.yaml.snakeyaml.parser.Production state -> f
    org.yaml.snakeyaml.parser.VersionTagsTuple directives -> g
    131:132:void <init>(org.yaml.snakeyaml.reader.StreamReader) -> <init>
    134:141:void <init>(org.yaml.snakeyaml.scanner.Scanner) -> <init>
    147:148:boolean checkEvent(org.yaml.snakeyaml.events.Event$ID) -> a
    155:160:org.yaml.snakeyaml.events.Event peekEvent() -> a
    167:170:org.yaml.snakeyaml.events.Event getEvent() -> b
    285:333:org.yaml.snakeyaml.parser.VersionTagsTuple processDirectives() -> d
    363:363:org.yaml.snakeyaml.events.Event parseFlowNode() -> e
    367:367:org.yaml.snakeyaml.events.Event parseBlockNodeOrIndentlessSequence() -> f
    372:485:org.yaml.snakeyaml.events.Event parseNode(boolean,boolean) -> a
    792:792:org.yaml.snakeyaml.events.Event processEmptyScalar(org.yaml.snakeyaml.error.Mark) -> a
    116:116:org.yaml.snakeyaml.parser.Production access$102(org.yaml.snakeyaml.parser.ParserImpl,org.yaml.snakeyaml.parser.Production) -> a
    116:116:org.yaml.snakeyaml.parser.VersionTagsTuple access$302(org.yaml.snakeyaml.parser.ParserImpl,org.yaml.snakeyaml.parser.VersionTagsTuple) -> a
    116:116:java.util.Map access$400() -> c
    116:116:org.yaml.snakeyaml.util.ArrayStack access$600(org.yaml.snakeyaml.parser.ParserImpl) -> a
    116:116:org.yaml.snakeyaml.parser.VersionTagsTuple access$900(org.yaml.snakeyaml.parser.ParserImpl) -> b
    116:116:org.yaml.snakeyaml.util.ArrayStack access$1100(org.yaml.snakeyaml.parser.ParserImpl) -> c
    116:116:org.yaml.snakeyaml.events.Event access$1200(org.yaml.snakeyaml.parser.ParserImpl,org.yaml.snakeyaml.error.Mark) -> a
    116:116:org.yaml.snakeyaml.events.Event access$1300(org.yaml.snakeyaml.parser.ParserImpl,boolean,boolean) -> a
    116:116:org.yaml.snakeyaml.events.Event access$2200(org.yaml.snakeyaml.parser.ParserImpl) -> d
    116:116:org.yaml.snakeyaml.events.Event access$2400(org.yaml.snakeyaml.parser.ParserImpl) -> e
    117:121:void <clinit>() -> <clinit>
org.yaml.snakeyaml.parser.ParserImpl$1 -> org.d.a.i.d:
org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingFirstKey -> org.d.a.i.e:
    org.yaml.snakeyaml.parser.ParserImpl this$0 -> a
    547:547:void <init>(org.yaml.snakeyaml.parser.ParserImpl) -> <init>
    549:551:org.yaml.snakeyaml.events.Event produce() -> a
    547:547:void <init>(org.yaml.snakeyaml.parser.ParserImpl,org.yaml.snakeyaml.parser.ParserImpl$1) -> <init>
org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey -> org.d.a.i.f:
    org.yaml.snakeyaml.parser.ParserImpl this$0 -> a
    555:555:void <init>(org.yaml.snakeyaml.parser.ParserImpl) -> <init>
    557:577:org.yaml.snakeyaml.events.Event produce() -> a
    555:555:void <init>(org.yaml.snakeyaml.parser.ParserImpl,org.yaml.snakeyaml.parser.ParserImpl$1) -> <init>
org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValue -> org.d.a.i.g:
    org.yaml.snakeyaml.parser.ParserImpl this$0 -> a
    581:581:void <init>(org.yaml.snakeyaml.parser.ParserImpl) -> <init>
    583:595:org.yaml.snakeyaml.events.Event produce() -> a
    581:581:void <init>(org.yaml.snakeyaml.parser.ParserImpl,org.yaml.snakeyaml.parser.ParserImpl$1) -> <init>
org.yaml.snakeyaml.parser.ParserImpl$ParseBlockNode -> org.d.a.i.h:
    org.yaml.snakeyaml.parser.ParserImpl this$0 -> a
    356:356:void <init>(org.yaml.snakeyaml.parser.ParserImpl) -> <init>
    358:358:org.yaml.snakeyaml.events.Event produce() -> a
    356:356:void <init>(org.yaml.snakeyaml.parser.ParserImpl,org.yaml.snakeyaml.parser.ParserImpl$1) -> <init>
org.yaml.snakeyaml.parser.ParserImpl$ParseBlockSequenceEntry -> org.d.a.i.i:
    org.yaml.snakeyaml.parser.ParserImpl this$0 -> a
    499:499:void <init>(org.yaml.snakeyaml.parser.ParserImpl) -> <init>
    501:521:org.yaml.snakeyaml.events.Event produce() -> a
    499:499:void <init>(org.yaml.snakeyaml.parser.ParserImpl,org.yaml.snakeyaml.parser.ParserImpl$1) -> <init>
org.yaml.snakeyaml.parser.ParserImpl$ParseBlockSequenceFirstEntry -> org.d.a.i.j:
    org.yaml.snakeyaml.parser.ParserImpl this$0 -> a
    491:491:void <init>(org.yaml.snakeyaml.parser.ParserImpl) -> <init>
    493:495:org.yaml.snakeyaml.events.Event produce() -> a
    491:491:void <init>(org.yaml.snakeyaml.parser.ParserImpl,org.yaml.snakeyaml.parser.ParserImpl$1) -> <init>
org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentContent -> org.d.a.i.k:
    org.yaml.snakeyaml.parser.ParserImpl this$0 -> a
    268:268:void <init>(org.yaml.snakeyaml.parser.ParserImpl) -> <init>
    271:278:org.yaml.snakeyaml.events.Event produce() -> a
    268:268:void <init>(org.yaml.snakeyaml.parser.ParserImpl,org.yaml.snakeyaml.parser.ParserImpl$1) -> <init>
org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentEnd -> org.d.a.i.l:
    org.yaml.snakeyaml.parser.ParserImpl this$0 -> a
    249:249:void <init>(org.yaml.snakeyaml.parser.ParserImpl) -> <init>
    252:264:org.yaml.snakeyaml.events.Event produce() -> a
    249:249:void <init>(org.yaml.snakeyaml.parser.ParserImpl,org.yaml.snakeyaml.parser.ParserImpl$1) -> <init>
org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart -> org.d.a.i.m:
    org.yaml.snakeyaml.parser.ParserImpl this$0 -> a
    211:211:void <init>(org.yaml.snakeyaml.parser.ParserImpl) -> <init>
    214:245:org.yaml.snakeyaml.events.Event produce() -> a
    211:211:void <init>(org.yaml.snakeyaml.parser.ParserImpl,org.yaml.snakeyaml.parser.ParserImpl$1) -> <init>
org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingEmptyValue -> org.d.a.i.n:
    org.yaml.snakeyaml.parser.ParserImpl this$0 -> a
    776:776:void <init>(org.yaml.snakeyaml.parser.ParserImpl) -> <init>
    778:779:org.yaml.snakeyaml.events.Event produce() -> a
    776:776:void <init>(org.yaml.snakeyaml.parser.ParserImpl,org.yaml.snakeyaml.parser.ParserImpl$1) -> <init>
org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingFirstKey -> org.d.a.i.o:
    org.yaml.snakeyaml.parser.ParserImpl this$0 -> a
    707:707:void <init>(org.yaml.snakeyaml.parser.ParserImpl) -> <init>
    709:711:org.yaml.snakeyaml.events.Event produce() -> a
    707:707:void <init>(org.yaml.snakeyaml.parser.ParserImpl,org.yaml.snakeyaml.parser.ParserImpl$1) -> <init>
org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey -> org.d.a.i.p:
    boolean first -> b
    org.yaml.snakeyaml.parser.ParserImpl this$0 -> a
    716:720:void <init>(org.yaml.snakeyaml.parser.ParserImpl,boolean) -> <init>
    723:753:org.yaml.snakeyaml.events.Event produce() -> a
org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingValue -> org.d.a.i.q:
    org.yaml.snakeyaml.parser.ParserImpl this$0 -> a
    757:757:void <init>(org.yaml.snakeyaml.parser.ParserImpl) -> <init>
    759:771:org.yaml.snakeyaml.events.Event produce() -> a
    757:757:void <init>(org.yaml.snakeyaml.parser.ParserImpl,org.yaml.snakeyaml.parser.ParserImpl$1) -> <init>
org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntry -> org.d.a.i.r:
    boolean first -> b
    org.yaml.snakeyaml.parser.ParserImpl this$0 -> a
    621:625:void <init>(org.yaml.snakeyaml.parser.ParserImpl,boolean) -> <init>
    628:654:org.yaml.snakeyaml.events.Event produce() -> a
org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntryMappingEnd -> org.d.a.i.s:
    org.yaml.snakeyaml.parser.ParserImpl this$0 -> a
    690:690:void <init>(org.yaml.snakeyaml.parser.ParserImpl) -> <init>
    692:694:org.yaml.snakeyaml.events.Event produce() -> a
    690:690:void <init>(org.yaml.snakeyaml.parser.ParserImpl,org.yaml.snakeyaml.parser.ParserImpl$1) -> <init>
org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntryMappingKey -> org.d.a.i.t:
    org.yaml.snakeyaml.parser.ParserImpl this$0 -> a
    658:658:void <init>(org.yaml.snakeyaml.parser.ParserImpl) -> <init>
    660:666:org.yaml.snakeyaml.events.Event produce() -> a
    658:658:void <init>(org.yaml.snakeyaml.parser.ParserImpl,org.yaml.snakeyaml.parser.ParserImpl$1) -> <init>
org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceEntryMappingValue -> org.d.a.i.u:
    org.yaml.snakeyaml.parser.ParserImpl this$0 -> a
    671:671:void <init>(org.yaml.snakeyaml.parser.ParserImpl) -> <init>
    673:685:org.yaml.snakeyaml.events.Event produce() -> a
    671:671:void <init>(org.yaml.snakeyaml.parser.ParserImpl,org.yaml.snakeyaml.parser.ParserImpl$1) -> <init>
org.yaml.snakeyaml.parser.ParserImpl$ParseFlowSequenceFirstEntry -> org.d.a.i.v:
    org.yaml.snakeyaml.parser.ParserImpl this$0 -> a
    612:612:void <init>(org.yaml.snakeyaml.parser.ParserImpl) -> <init>
    614:616:org.yaml.snakeyaml.events.Event produce() -> a
    612:612:void <init>(org.yaml.snakeyaml.parser.ParserImpl,org.yaml.snakeyaml.parser.ParserImpl$1) -> <init>
org.yaml.snakeyaml.parser.ParserImpl$ParseImplicitDocumentStart -> org.d.a.i.w:
    org.yaml.snakeyaml.parser.ParserImpl this$0 -> a
    191:191:void <init>(org.yaml.snakeyaml.parser.ParserImpl) -> <init>
    194:206:org.yaml.snakeyaml.events.Event produce() -> a
    191:191:void <init>(org.yaml.snakeyaml.parser.ParserImpl,org.yaml.snakeyaml.parser.ParserImpl$1) -> <init>
org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntry -> org.d.a.i.x:
    org.yaml.snakeyaml.parser.ParserImpl this$0 -> a
    527:527:void <init>(org.yaml.snakeyaml.parser.ParserImpl) -> <init>
    529:543:org.yaml.snakeyaml.events.Event produce() -> a
    527:527:void <init>(org.yaml.snakeyaml.parser.ParserImpl,org.yaml.snakeyaml.parser.ParserImpl$1) -> <init>
org.yaml.snakeyaml.parser.ParserImpl$ParseStreamStart -> org.d.a.i.y:
    org.yaml.snakeyaml.parser.ParserImpl this$0 -> a
    180:180:void <init>(org.yaml.snakeyaml.parser.ParserImpl) -> <init>
    183:187:org.yaml.snakeyaml.events.Event produce() -> a
    180:180:void <init>(org.yaml.snakeyaml.parser.ParserImpl,org.yaml.snakeyaml.parser.ParserImpl$1) -> <init>
org.yaml.snakeyaml.parser.Production -> org.d.a.i.z:
    org.yaml.snakeyaml.events.Event produce() -> a
org.yaml.snakeyaml.parser.VersionTagsTuple -> org.d.a.i.aa:
    org.yaml.snakeyaml.DumperOptions$Version version -> a
    java.util.Map tags -> b
    29:32:void <init>(org.yaml.snakeyaml.DumperOptions$Version,java.util.Map) -> <init>
    35:35:org.yaml.snakeyaml.DumperOptions$Version getVersion() -> a
    39:39:java.util.Map getTags() -> b
    44:44:java.lang.String toString() -> toString
org.yaml.snakeyaml.reader.ReaderException -> org.d.a.j.a:
    java.lang.String name -> a
    int codePoint -> b
    int position -> c
    27:31:void <init>(java.lang.String,int,int,java.lang.String) -> <init>
    47:49:java.lang.String toString() -> toString
org.yaml.snakeyaml.reader.StreamReader -> org.d.a.j.b:
    java.lang.String name -> a
    java.io.Reader stream -> b
    int pointer -> c
    boolean eof -> d
    java.lang.String buffer -> e
    int index -> f
    int line -> g
    int column -> h
    char[] data -> i
    32:59:void <init>(java.io.Reader) -> <init>
    62:73:void checkPrintable(java.lang.String) -> a
    76:87:boolean isPrintable(java.lang.String) -> b
    91:91:boolean isPrintable(int) -> a
    98:98:org.yaml.snakeyaml.error.Mark getMark() -> a
    102:103:void forward() -> b
    113:135:void forward(int) -> b
    138:145:int peek() -> c
    155:172:int peek(int) -> c
    182:200:java.lang.String prefix(int) -> d
    209:214:java.lang.String prefixForward(int) -> e
    218:257:void update() -> g
    260:260:int getColumn() -> d
    268:268:int getIndex() -> e
    272:272:int getLine() -> f
org.yaml.snakeyaml.reader.UnicodeReader -> org.d.a.j.c:
    java.nio.charset.Charset UTF8 -> c
    java.nio.charset.Charset UTF16BE -> d
    java.nio.charset.Charset UTF16LE -> e
    java.io.PushbackInputStream internalIn -> a
    java.io.InputStreamReader internalIn2 -> b
    59:69:void <init>(java.io.InputStream) -> <init>
    86:116:void init() -> a
    119:121:void close() -> close
    124:125:int read(char[],int,int) -> read
    54:56:void <clinit>() -> <clinit>
org.yaml.snakeyaml.representer.BaseRepresenter -> org.d.a.k.a:
    java.util.Map representers -> a
    org.yaml.snakeyaml.representer.Represent nullRepresenter -> b
    java.util.Map multiRepresenters -> c
    java.lang.Character defaultScalarStyle -> d
    org.yaml.snakeyaml.DumperOptions$FlowStyle defaultFlowStyle -> e
    java.util.Map representedObjects -> f
    java.lang.Object objectToRepresent -> g
    org.yaml.snakeyaml.introspector.PropertyUtils propertyUtils -> h
    boolean explicitPropertyUtils -> i
    39:61:void <init>() -> <init>
    64:67:org.yaml.snakeyaml.nodes.Node represent(java.lang.Object) -> represent
    71:108:org.yaml.snakeyaml.nodes.Node representData(java.lang.Object) -> a
    112:116:org.yaml.snakeyaml.nodes.Node representScalar(org.yaml.snakeyaml.nodes.Tag,java.lang.String,java.lang.Character) -> a
    120:120:org.yaml.snakeyaml.nodes.Node representScalar(org.yaml.snakeyaml.nodes.Tag,java.lang.String) -> a
    124:146:org.yaml.snakeyaml.nodes.Node representSequence(org.yaml.snakeyaml.nodes.Tag,java.lang.Iterable,java.lang.Boolean) -> a
    150:172:org.yaml.snakeyaml.nodes.Node representMapping(org.yaml.snakeyaml.nodes.Tag,java.util.Map,java.lang.Boolean) -> a
    176:177:void setDefaultScalarStyle(org.yaml.snakeyaml.DumperOptions$ScalarStyle) -> setDefaultScalarStyle
    180:181:void setDefaultFlowStyle(org.yaml.snakeyaml.DumperOptions$FlowStyle) -> setDefaultFlowStyle
    184:184:org.yaml.snakeyaml.DumperOptions$FlowStyle getDefaultFlowStyle() -> getDefaultFlowStyle
    188:190:void setPropertyUtils(org.yaml.snakeyaml.introspector.PropertyUtils) -> setPropertyUtils
    193:196:org.yaml.snakeyaml.introspector.PropertyUtils getPropertyUtils() -> getPropertyUtils
    200:200:boolean isExplicitPropertyUtils() -> isExplicitPropertyUtils
org.yaml.snakeyaml.representer.BaseRepresenter$1 -> org.d.a.k.b:
    org.yaml.snakeyaml.representer.BaseRepresenter this$0 -> a
    51:51:void <init>(org.yaml.snakeyaml.representer.BaseRepresenter) -> <init>
    55:55:org.yaml.snakeyaml.nodes.Node put(java.lang.Object,org.yaml.snakeyaml.nodes.Node) -> a
    51:51:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
org.yaml.snakeyaml.representer.Represent -> org.d.a.k.c:
    org.yaml.snakeyaml.nodes.Node representData(java.lang.Object) -> representData
org.yaml.snakeyaml.representer.Representer -> org.d.a.k.d:
    41:43:void <init>() -> <init>
    66:97:org.yaml.snakeyaml.nodes.MappingNode representJavaBean(java.util.Set,java.lang.Object) -> a
    116:144:org.yaml.snakeyaml.nodes.NodeTuple representJavaBeanProperty(java.lang.Object,org.yaml.snakeyaml.introspector.Property,java.lang.Object,org.yaml.snakeyaml.nodes.Tag) -> a
    161:217:void checkGlobalTag(org.yaml.snakeyaml.introspector.Property,org.yaml.snakeyaml.nodes.Node,java.lang.Object) -> a
    220:228:void resetTag(java.lang.Class,org.yaml.snakeyaml.nodes.Node) -> a
    240:240:java.util.Set getProperties(java.lang.Class) -> a
    39:39:void setTimeZone(java.util.TimeZone) -> setTimeZone
    39:39:java.util.TimeZone getTimeZone() -> getTimeZone
    39:39:org.yaml.snakeyaml.nodes.Tag addClassTag(java.lang.Class,org.yaml.snakeyaml.nodes.Tag) -> addClassTag
org.yaml.snakeyaml.representer.Representer$RepresentJavaBean -> org.d.a.k.e:
    org.yaml.snakeyaml.representer.Representer this$0 -> a
    45:45:void <init>(org.yaml.snakeyaml.representer.Representer) -> <init>
    47:47:org.yaml.snakeyaml.nodes.Node representData(java.lang.Object) -> representData
org.yaml.snakeyaml.representer.SafeRepresenter -> org.d.a.k.f:
    java.util.Map classTags -> h
    java.util.TimeZone timeZone -> i
    java.util.regex.Pattern MULTILINE_PATTERN -> MULTILINE_PATTERN
    46:75:void <init>() -> <init>
    78:81:org.yaml.snakeyaml.nodes.Tag getTag(java.lang.Class,org.yaml.snakeyaml.nodes.Tag) -> a
    96:99:org.yaml.snakeyaml.nodes.Tag addClassTag(java.lang.Class,org.yaml.snakeyaml.nodes.Tag) -> addClassTag
    422:422:java.util.TimeZone getTimeZone() -> getTimeZone
    426:427:void setTimeZone(java.util.TimeZone) -> setTimeZone
    108:108:void <clinit>() -> <clinit>
org.yaml.snakeyaml.representer.SafeRepresenter$IteratorWrapper -> org.d.a.k.g:
    java.util.Iterator iter -> a
    199:201:void <init>(java.util.Iterator) -> <init>
    204:204:java.util.Iterator iterator() -> iterator
org.yaml.snakeyaml.representer.SafeRepresenter$RepresentArray -> org.d.a.k.h:
    org.yaml.snakeyaml.representer.SafeRepresenter this$0 -> a
    208:208:void <init>(org.yaml.snakeyaml.representer.SafeRepresenter) -> <init>
    210:212:org.yaml.snakeyaml.nodes.Node representData(java.lang.Object) -> representData
org.yaml.snakeyaml.representer.SafeRepresenter$RepresentBoolean -> org.d.a.k.i:
    org.yaml.snakeyaml.representer.SafeRepresenter this$0 -> a
    143:143:void <init>(org.yaml.snakeyaml.representer.SafeRepresenter) -> <init>
    146:151:org.yaml.snakeyaml.nodes.Node representData(java.lang.Object) -> representData
org.yaml.snakeyaml.representer.SafeRepresenter$RepresentByteArray -> org.d.a.k.j:
    org.yaml.snakeyaml.representer.SafeRepresenter this$0 -> a
    414:414:void <init>(org.yaml.snakeyaml.representer.SafeRepresenter) -> <init>
    416:417:org.yaml.snakeyaml.nodes.Node representData(java.lang.Object) -> representData
org.yaml.snakeyaml.representer.SafeRepresenter$RepresentDate -> org.d.a.k.k:
    org.yaml.snakeyaml.representer.SafeRepresenter this$0 -> a
    331:331:void <init>(org.yaml.snakeyaml.representer.SafeRepresenter) -> <init>
    335:403:org.yaml.snakeyaml.nodes.Node representData(java.lang.Object) -> representData
org.yaml.snakeyaml.representer.SafeRepresenter$RepresentEnum -> org.d.a.k.l:
    org.yaml.snakeyaml.representer.SafeRepresenter this$0 -> a
    407:407:void <init>(org.yaml.snakeyaml.representer.SafeRepresenter) -> <init>
    409:410:org.yaml.snakeyaml.nodes.Node representData(java.lang.Object) -> representData
org.yaml.snakeyaml.representer.SafeRepresenter$RepresentIterator -> org.d.a.k.m:
    org.yaml.snakeyaml.representer.SafeRepresenter this$0 -> a
    187:187:void <init>(org.yaml.snakeyaml.representer.SafeRepresenter) -> <init>
    190:191:org.yaml.snakeyaml.nodes.Node representData(java.lang.Object) -> representData
org.yaml.snakeyaml.representer.SafeRepresenter$RepresentList -> org.d.a.k.n:
    org.yaml.snakeyaml.representer.SafeRepresenter this$0 -> a
    180:180:void <init>(org.yaml.snakeyaml.representer.SafeRepresenter) -> <init>
    183:183:org.yaml.snakeyaml.nodes.Node representData(java.lang.Object) -> representData
org.yaml.snakeyaml.representer.SafeRepresenter$RepresentMap -> org.d.a.k.o:
    org.yaml.snakeyaml.representer.SafeRepresenter this$0 -> a
    311:311:void <init>(org.yaml.snakeyaml.representer.SafeRepresenter) -> <init>
    314:314:org.yaml.snakeyaml.nodes.Node representData(java.lang.Object) -> representData
org.yaml.snakeyaml.representer.SafeRepresenter$RepresentNull -> org.d.a.k.p:
    org.yaml.snakeyaml.representer.SafeRepresenter this$0 -> a
    102:102:void <init>(org.yaml.snakeyaml.representer.SafeRepresenter) -> <init>
    104:104:org.yaml.snakeyaml.nodes.Node representData(java.lang.Object) -> representData
org.yaml.snakeyaml.representer.SafeRepresenter$RepresentNumber -> org.d.a.k.q:
    org.yaml.snakeyaml.representer.SafeRepresenter this$0 -> a
    155:155:void <init>(org.yaml.snakeyaml.representer.SafeRepresenter) -> <init>
    159:176:org.yaml.snakeyaml.nodes.Node representData(java.lang.Object) -> representData
org.yaml.snakeyaml.representer.SafeRepresenter$RepresentPrimitiveArray -> org.d.a.k.r:
    org.yaml.snakeyaml.representer.SafeRepresenter this$0 -> a
    221:221:void <init>(org.yaml.snakeyaml.representer.SafeRepresenter) -> <init>
    223:243:org.yaml.snakeyaml.nodes.Node representData(java.lang.Object) -> representData
    247:251:java.util.List asByteList(java.lang.Object) -> a
    255:259:java.util.List asShortList(java.lang.Object) -> b
    263:267:java.util.List asIntList(java.lang.Object) -> c
    271:275:java.util.List asLongList(java.lang.Object) -> d
    279:283:java.util.List asFloatList(java.lang.Object) -> e
    287:291:java.util.List asDoubleList(java.lang.Object) -> f
    295:299:java.util.List asCharList(java.lang.Object) -> g
    303:307:java.util.List asBooleanList(java.lang.Object) -> h
org.yaml.snakeyaml.representer.SafeRepresenter$RepresentSet -> org.d.a.k.s:
    org.yaml.snakeyaml.representer.SafeRepresenter this$0 -> a
    319:319:void <init>(org.yaml.snakeyaml.representer.SafeRepresenter) -> <init>
    322:327:org.yaml.snakeyaml.nodes.Node representData(java.lang.Object) -> representData
org.yaml.snakeyaml.representer.SafeRepresenter$RepresentString -> org.d.a.k.t:
    org.yaml.snakeyaml.representer.SafeRepresenter this$0 -> b
    110:110:void <init>(org.yaml.snakeyaml.representer.SafeRepresenter) -> <init>
    112:139:org.yaml.snakeyaml.nodes.Node representData(java.lang.Object) -> representData
org.yaml.snakeyaml.representer.SafeRepresenter$RepresentUuid -> org.d.a.k.u:
    org.yaml.snakeyaml.representer.SafeRepresenter this$0 -> a
    429:429:void <init>(org.yaml.snakeyaml.representer.SafeRepresenter) -> <init>
    431:431:org.yaml.snakeyaml.nodes.Node representData(java.lang.Object) -> representData
org.yaml.snakeyaml.resolver.Resolver -> org.d.a.l.a:
    java.util.regex.Pattern BOOL -> a
    java.util.regex.Pattern FLOAT -> b
    java.util.regex.Pattern INT -> c
    java.util.regex.Pattern MERGE -> d
    java.util.regex.Pattern NULL -> e
    java.util.regex.Pattern EMPTY -> f
    java.util.regex.Pattern TIMESTAMP -> g
    java.util.regex.Pattern VALUE -> h
    java.util.regex.Pattern YAML -> i
    java.util.Map yamlImplicitResolvers -> j
    53:70:void addImplicitResolvers() -> a
    50:74:void <init>() -> <init>
    77:100:void addImplicitResolver(org.yaml.snakeyaml.nodes.Tag,java.util.regex.Pattern,java.lang.String) -> a
    103:135:org.yaml.snakeyaml.nodes.Tag resolve(org.yaml.snakeyaml.nodes.NodeId,java.lang.String,boolean) -> a
    31:48:void <clinit>() -> <clinit>
org.yaml.snakeyaml.resolver.Resolver$1 -> org.d.a.l.b:
    int[] $SwitchMap$org$yaml$snakeyaml$nodes$NodeId -> a
    129:129:void <clinit>() -> <clinit>
org.yaml.snakeyaml.resolver.ResolverTuple -> org.d.a.l.c:
    org.yaml.snakeyaml.nodes.Tag tag -> a
    java.util.regex.Pattern regexp -> b
    26:29:void <init>(org.yaml.snakeyaml.nodes.Tag,java.util.regex.Pattern) -> <init>
    32:32:org.yaml.snakeyaml.nodes.Tag getTag() -> a
    36:36:java.util.regex.Pattern getRegexp() -> b
    41:41:java.lang.String toString() -> toString
org.yaml.snakeyaml.scanner.Constant -> org.d.a.m.a:
    org.yaml.snakeyaml.scanner.Constant LINEBR -> a
    org.yaml.snakeyaml.scanner.Constant FULL_LINEBR -> b
    org.yaml.snakeyaml.scanner.Constant NULL_OR_LINEBR -> c
    org.yaml.snakeyaml.scanner.Constant NULL_BL_LINEBR -> d
    org.yaml.snakeyaml.scanner.Constant NULL_BL_T_LINEBR -> e
    org.yaml.snakeyaml.scanner.Constant NULL_BL_T -> f
    org.yaml.snakeyaml.scanner.Constant URI_CHARS -> g
    org.yaml.snakeyaml.scanner.Constant ALPHA -> h
    java.lang.String content -> k
    boolean[] contains -> i
    boolean noASCII -> j
    42:59:void <init>(java.lang.String) -> <init>
    62:62:boolean has(int) -> a
    66:66:boolean hasNo(int) -> b
    70:70:boolean has(int,java.lang.String) -> a
    74:74:boolean hasNo(int,java.lang.String) -> b
    31:39:void <clinit>() -> <clinit>
org.yaml.snakeyaml.scanner.Scanner -> org.d.a.m.b:
    boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[]) -> a
    org.yaml.snakeyaml.tokens.Token peekToken() -> a
    org.yaml.snakeyaml.tokens.Token getToken() -> b
org.yaml.snakeyaml.scanner.ScannerException -> org.d.a.m.c:
    47:48:void <init>(java.lang.String,org.yaml.snakeyaml.error.Mark,java.lang.String,org.yaml.snakeyaml.error.Mark,java.lang.String) -> <init>
    64:65:void <init>(java.lang.String,org.yaml.snakeyaml.error.Mark,java.lang.String,org.yaml.snakeyaml.error.Mark) -> <init>
org.yaml.snakeyaml.scanner.ScannerImpl -> org.d.a.m.d:
    java.util.regex.Pattern NOT_HEXA -> c
    java.util.Map ESCAPE_REPLACEMENTS -> a
    java.util.Map ESCAPE_CODES -> b
    org.yaml.snakeyaml.reader.StreamReader reader -> d
    boolean done -> e
    int flowLevel -> f
    java.util.List tokens -> g
    int tokensTaken -> h
    int indent -> i
    org.yaml.snakeyaml.util.ArrayStack indents -> j
    boolean allowSimpleKey -> k
    java.util.Map possibleSimpleKeys -> l
    159:219:void <init>(org.yaml.snakeyaml.reader.StreamReader) -> <init>
    225:241:boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[]) -> a
    248:251:org.yaml.snakeyaml.tokens.Token peekToken() -> a
    258:262:org.yaml.snakeyaml.tokens.Token getToken() -> b
    271:281:boolean needMoreTokens() -> c
    289:421:void fetchMoreTokens() -> d
    435:438:int nextPossibleSimpleKey() -> e
    452:472:void stalePossibleSimpleKeys() -> f
    487:506:void savePossibleSimpleKey() -> g
    512:517:void removePossibleSimpleKey() -> h
    544:554:void unwindIndent(int) -> a
    560:565:boolean addIndent(int) -> b
    576:581:void fetchStreamStart() -> i
    585:601:void fetchStreamEnd() -> j
    612:621:void fetchDirective() -> k
    627:628:void fetchDocumentStart() -> l
    634:635:void fetchDocumentEnd() -> m
    643:661:void fetchDocumentIndicator(boolean) -> a
    664:665:void fetchFlowSequenceStart() -> n
    668:669:void fetchFlowMappingStart() -> o
    685:704:void fetchFlowCollectionStart(boolean) -> b
    707:708:void fetchFlowSequenceEnd() -> p
    711:712:void fetchFlowMappingEnd() -> q
    726:745:void fetchFlowCollectionEnd(boolean) -> c
    755:766:void fetchFlowEntry() -> r
    775:803:void fetchBlockEntry() -> s
    812:836:void fetchKey() -> t
    845:898:void fetchValue() -> u
    912:920:void fetchAlias() -> v
    933:941:void fetchAnchor() -> w
    950:958:void fetchTag() -> x
    968:969:void fetchLiteral() -> y
    978:979:void fetchFolded() -> z
    990:998:void fetchBlockScalar(char) -> a
    1004:1005:void fetchSingle() -> A
    1011:1012:void fetchDouble() -> B
    1023:1031:void fetchFlowScalar(char) -> b
    1038:1048:void fetchPlain() -> C
    1060:1060:boolean checkDirective() -> D
    1069:1074:boolean checkDocumentStart() -> E
    1083:1088:boolean checkDocumentEnd() -> F
    1096:1096:boolean checkBlockEntry() -> G
    1104:1108:boolean checkKey() -> H
    1117:1121:boolean checkValue() -> I
    1145:1150:boolean checkPlain() -> J
    1179:1218:void scanToNextToken() -> K
    1223:1245:org.yaml.snakeyaml.tokens.Token scanDirective() -> L
    1256:1280:java.lang.String scanDirectiveName(org.yaml.snakeyaml.error.Mark) -> a
    1285:1308:java.util.List scanYamlDirectiveValue(org.yaml.snakeyaml.error.Mark) -> b
    1320:1331:java.lang.Integer scanYamlDirectiveNumber(org.yaml.snakeyaml.error.Mark) -> c
    1348:1359:java.util.List scanTagDirectiveValue(org.yaml.snakeyaml.error.Mark) -> d
    1371:1378:java.lang.String scanTagDirectiveHandle(org.yaml.snakeyaml.error.Mark) -> e
    1388:1396:java.lang.String scanTagDirectivePrefix(org.yaml.snakeyaml.error.Mark) -> f
    1401:1417:java.lang.String scanDirectiveIgnoredLine(org.yaml.snakeyaml.error.Mark) -> g
    1433:1464:org.yaml.snakeyaml.tokens.Token scanAnchor(boolean) -> d
    1502:1565:org.yaml.snakeyaml.tokens.Token scanTag() -> M
    1573:1650:org.yaml.snakeyaml.tokens.Token scanBlockScalar(char) -> c
    1670:1717:org.yaml.snakeyaml.scanner.ScannerImpl$Chomping scanBlockScalarIndicators(org.yaml.snakeyaml.error.Mark) -> h
    1728:1748:java.lang.String scanBlockScalarIgnoredLine(org.yaml.snakeyaml.error.Mark) -> i
    1760:1783:java.lang.Object[] scanBlockScalarIndentation() -> N
    1788:1813:java.lang.Object[] scanBlockScalarBreaks(int) -> c
    1836:1852:org.yaml.snakeyaml.tokens.Token scanFlowScalar(char) -> d
    1860:1916:java.lang.String scanFlowScalarNonSpaces(boolean,org.yaml.snakeyaml.error.Mark) -> a
    1921:1948:java.lang.String scanFlowScalarSpaces(org.yaml.snakeyaml.error.Mark) -> j
    1953:1975:java.lang.String scanFlowScalarBreaks(org.yaml.snakeyaml.error.Mark) -> k
    1990:2034:org.yaml.snakeyaml.tokens.Token scanPlain() -> O
    2042:2080:java.lang.String scanPlainSpaces() -> P
    2106:2138:java.lang.String scanTagHandle(java.lang.String,org.yaml.snakeyaml.error.Mark) -> a
    2159:2187:java.lang.String scanTagUri(java.lang.String,org.yaml.snakeyaml.error.Mark) -> b
    2204:2237:java.lang.String scanUriEscapes(java.lang.String,org.yaml.snakeyaml.error.Mark) -> c
    2259:2271:java.lang.String scanLineBreak() -> Q
    87:156:void <clinit>() -> <clinit>
org.yaml.snakeyaml.scanner.ScannerImpl$Chomping -> org.d.a.m.e:
    java.lang.Boolean value -> a
    int increment -> b
    2281:2284:void <init>(java.lang.Boolean,int) -> <init>
    2287:2287:boolean chompTailIsNotFalse() -> a
    2291:2291:boolean chompTailIsTrue() -> b
    2295:2295:int getIncrement() -> c
org.yaml.snakeyaml.scanner.SimpleKey -> org.d.a.m.f:
    int tokenNumber -> a
    boolean required -> b
    int index -> c
    int line -> d
    int column -> e
    org.yaml.snakeyaml.error.Mark mark -> f
    36:43:void <init>(int,boolean,int,int,int,org.yaml.snakeyaml.error.Mark) -> <init>
    46:46:int getTokenNumber() -> a
    50:50:int getColumn() -> b
    54:54:org.yaml.snakeyaml.error.Mark getMark() -> c
    58:58:int getIndex() -> d
    62:62:int getLine() -> e
    66:66:boolean isRequired() -> f
    71:71:java.lang.String toString() -> toString
org.yaml.snakeyaml.serializer.AnchorGenerator -> org.d.a.n.a:
    java.lang.String nextAnchor(org.yaml.snakeyaml.nodes.Node) -> a
org.yaml.snakeyaml.serializer.NumberAnchorGenerator -> org.d.a.n.b:
    int lastAnchorId -> a
    24:28:void <init>(int) -> <init>
    31:37:java.lang.String nextAnchor(org.yaml.snakeyaml.nodes.Node) -> a
org.yaml.snakeyaml.serializer.Serializer -> org.d.a.n.c:
    org.yaml.snakeyaml.emitter.Emitable emitter -> a
    org.yaml.snakeyaml.resolver.Resolver resolver -> b
    boolean explicitStart -> c
    boolean explicitEnd -> d
    org.yaml.snakeyaml.DumperOptions$Version useVersion -> e
    java.util.Map useTags -> f
    java.util.Set serializedNodes -> g
    java.util.Map anchors -> h
    org.yaml.snakeyaml.serializer.AnchorGenerator anchorGenerator -> i
    java.lang.Boolean closed -> j
    org.yaml.snakeyaml.nodes.Tag explicitRoot -> k
    64:78:void <init>(org.yaml.snakeyaml.emitter.Emitable,org.yaml.snakeyaml.resolver.Resolver,org.yaml.snakeyaml.DumperOptions,org.yaml.snakeyaml.nodes.Tag) -> <init>
    81:89:void open() -> a
    92:98:void close() -> b
    101:116:void serialize(org.yaml.snakeyaml.nodes.Node) -> a
    119:150:void anchorNode(org.yaml.snakeyaml.nodes.Node) -> b
    153:200:void serializeNode(org.yaml.snakeyaml.nodes.Node,org.yaml.snakeyaml.nodes.Node) -> a
org.yaml.snakeyaml.serializer.Serializer$1 -> org.d.a.n.d:
    int[] $SwitchMap$org$yaml$snakeyaml$nodes$NodeId -> a
    130:130:void <clinit>() -> <clinit>
org.yaml.snakeyaml.serializer.SerializerException -> org.d.a.n.e:
    24:25:void <init>(java.lang.String) -> <init>
org.yaml.snakeyaml.tokens.AliasToken -> org.d.a.o.a:
    java.lang.String value -> a
    24:26:void <init>(java.lang.String,org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark) -> <init>
    29:29:java.lang.String getValue() -> a
    34:34:java.lang.String getArguments() -> b
    39:39:org.yaml.snakeyaml.tokens.Token$ID getTokenId() -> c
org.yaml.snakeyaml.tokens.AnchorToken -> org.d.a.o.b:
    java.lang.String value -> a
    24:26:void <init>(java.lang.String,org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark) -> <init>
    29:29:java.lang.String getValue() -> a
    34:34:java.lang.String getArguments() -> b
    39:39:org.yaml.snakeyaml.tokens.Token$ID getTokenId() -> c
org.yaml.snakeyaml.tokens.BlockEndToken -> org.d.a.o.c:
    23:24:void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark) -> <init>
    28:28:org.yaml.snakeyaml.tokens.Token$ID getTokenId() -> c
org.yaml.snakeyaml.tokens.BlockEntryToken -> org.d.a.o.d:
    23:24:void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark) -> <init>
    28:28:org.yaml.snakeyaml.tokens.Token$ID getTokenId() -> c
org.yaml.snakeyaml.tokens.BlockMappingStartToken -> org.d.a.o.e:
    23:24:void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark) -> <init>
    28:28:org.yaml.snakeyaml.tokens.Token$ID getTokenId() -> c
org.yaml.snakeyaml.tokens.BlockSequenceStartToken -> org.d.a.o.f:
    23:24:void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark) -> <init>
    28:28:org.yaml.snakeyaml.tokens.Token$ID getTokenId() -> c
org.yaml.snakeyaml.tokens.DirectiveToken -> org.d.a.o.g:
    java.lang.String name -> a
    java.util.List value -> b
    28:35:void <init>(java.lang.String,java.util.List,org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark) -> <init>
    38:38:java.lang.String getName() -> a
    42:42:java.util.List getValue() -> d
    47:50:java.lang.String getArguments() -> b
    56:56:org.yaml.snakeyaml.tokens.Token$ID getTokenId() -> c
org.yaml.snakeyaml.tokens.DocumentEndToken -> org.d.a.o.h:
    23:24:void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark) -> <init>
    28:28:org.yaml.snakeyaml.tokens.Token$ID getTokenId() -> c
org.yaml.snakeyaml.tokens.DocumentStartToken -> org.d.a.o.i:
    23:24:void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark) -> <init>
    28:28:org.yaml.snakeyaml.tokens.Token$ID getTokenId() -> c
org.yaml.snakeyaml.tokens.FlowEntryToken -> org.d.a.o.j:
    23:24:void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark) -> <init>
    28:28:org.yaml.snakeyaml.tokens.Token$ID getTokenId() -> c
org.yaml.snakeyaml.tokens.FlowMappingEndToken -> org.d.a.o.k:
    23:24:void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark) -> <init>
    28:28:org.yaml.snakeyaml.tokens.Token$ID getTokenId() -> c
org.yaml.snakeyaml.tokens.FlowMappingStartToken -> org.d.a.o.l:
    23:24:void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark) -> <init>
    28:28:org.yaml.snakeyaml.tokens.Token$ID getTokenId() -> c
org.yaml.snakeyaml.tokens.FlowSequenceEndToken -> org.d.a.o.m:
    23:24:void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark) -> <init>
    28:28:org.yaml.snakeyaml.tokens.Token$ID getTokenId() -> c
org.yaml.snakeyaml.tokens.FlowSequenceStartToken -> org.d.a.o.n:
    23:24:void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark) -> <init>
    28:28:org.yaml.snakeyaml.tokens.Token$ID getTokenId() -> c
org.yaml.snakeyaml.tokens.KeyToken -> org.d.a.o.o:
    23:24:void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark) -> <init>
    28:28:org.yaml.snakeyaml.tokens.Token$ID getTokenId() -> c
org.yaml.snakeyaml.tokens.ScalarToken -> org.d.a.o.p:
    java.lang.String value -> a
    boolean plain -> b
    char style -> c
    26:27:void <init>(java.lang.String,org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark,boolean) -> <init>
    30:34:void <init>(java.lang.String,boolean,org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark,char) -> <init>
    37:37:boolean getPlain() -> a
    41:41:java.lang.String getValue() -> d
    45:45:char getStyle() -> e
    50:50:java.lang.String getArguments() -> b
    55:55:org.yaml.snakeyaml.tokens.Token$ID getTokenId() -> c
org.yaml.snakeyaml.tokens.StreamEndToken -> org.d.a.o.q:
    23:24:void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark) -> <init>
    28:28:org.yaml.snakeyaml.tokens.Token$ID getTokenId() -> c
org.yaml.snakeyaml.tokens.StreamStartToken -> org.d.a.o.r:
    23:24:void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark) -> <init>
    28:28:org.yaml.snakeyaml.tokens.Token$ID getTokenId() -> c
org.yaml.snakeyaml.tokens.TagToken -> org.d.a.o.s:
    org.yaml.snakeyaml.tokens.TagTuple value -> a
    24:26:void <init>(org.yaml.snakeyaml.tokens.TagTuple,org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark) -> <init>
    29:29:org.yaml.snakeyaml.tokens.TagTuple getValue() -> a
    34:34:java.lang.String getArguments() -> b
    39:39:org.yaml.snakeyaml.tokens.Token$ID getTokenId() -> c
org.yaml.snakeyaml.tokens.TagTuple -> org.d.a.o.t:
    java.lang.String handle -> a
    java.lang.String suffix -> b
    22:28:void <init>(java.lang.String,java.lang.String) -> <init>
    31:31:java.lang.String getHandle() -> a
    35:35:java.lang.String getSuffix() -> b
org.yaml.snakeyaml.tokens.Token -> org.d.a.o.u:
    org.yaml.snakeyaml.error.Mark startMark -> a
    org.yaml.snakeyaml.error.Mark endMark -> b
    29:35:void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark) -> <init>
    38:38:java.lang.String toString() -> toString
    42:42:org.yaml.snakeyaml.error.Mark getStartMark() -> f
    46:46:org.yaml.snakeyaml.error.Mark getEndMark() -> g
    54:54:java.lang.String getArguments() -> b
    org.yaml.snakeyaml.tokens.Token$ID getTokenId() -> c
    70:73:boolean equals(java.lang.Object) -> equals
    82:82:int hashCode() -> hashCode
org.yaml.snakeyaml.tokens.Token$ID -> org.d.a.o.v:
    org.yaml.snakeyaml.tokens.Token$ID Alias -> a
    org.yaml.snakeyaml.tokens.Token$ID Anchor -> b
    org.yaml.snakeyaml.tokens.Token$ID BlockEnd -> c
    org.yaml.snakeyaml.tokens.Token$ID BlockEntry -> d
    org.yaml.snakeyaml.tokens.Token$ID BlockMappingStart -> e
    org.yaml.snakeyaml.tokens.Token$ID BlockSequenceStart -> f
    org.yaml.snakeyaml.tokens.Token$ID Directive -> g
    org.yaml.snakeyaml.tokens.Token$ID DocumentEnd -> h
    org.yaml.snakeyaml.tokens.Token$ID DocumentStart -> i
    org.yaml.snakeyaml.tokens.Token$ID FlowEntry -> j
    org.yaml.snakeyaml.tokens.Token$ID FlowMappingEnd -> k
    org.yaml.snakeyaml.tokens.Token$ID FlowMappingStart -> l
    org.yaml.snakeyaml.tokens.Token$ID FlowSequenceEnd -> m
    org.yaml.snakeyaml.tokens.Token$ID FlowSequenceStart -> n
    org.yaml.snakeyaml.tokens.Token$ID Key -> o
    org.yaml.snakeyaml.tokens.Token$ID Scalar -> p
    org.yaml.snakeyaml.tokens.Token$ID StreamEnd -> q
    org.yaml.snakeyaml.tokens.Token$ID StreamStart -> r
    org.yaml.snakeyaml.tokens.Token$ID Tag -> s
    org.yaml.snakeyaml.tokens.Token$ID Value -> t
    org.yaml.snakeyaml.tokens.Token$ID Whitespace -> u
    org.yaml.snakeyaml.tokens.Token$ID Comment -> v
    org.yaml.snakeyaml.tokens.Token$ID Error -> w
    org.yaml.snakeyaml.tokens.Token$ID[] $VALUES -> x
    22:22:org.yaml.snakeyaml.tokens.Token$ID[] values() -> values
    22:22:org.yaml.snakeyaml.tokens.Token$ID valueOf(java.lang.String) -> valueOf
    22:22:void <init>(java.lang.String,int) -> <init>
    22:23:void <clinit>() -> <clinit>
org.yaml.snakeyaml.tokens.ValueToken -> org.d.a.o.w:
    23:24:void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark) -> <init>
    28:28:org.yaml.snakeyaml.tokens.Token$ID getTokenId() -> c
org.yaml.snakeyaml.util.ArrayStack -> org.d.a.p.a:
    java.util.ArrayList stack -> a
    23:25:void <init>(int) -> <init>
    28:29:void push(java.lang.Object) -> a
    32:32:java.lang.Object pop() -> a
    36:36:boolean isEmpty() -> b
org.yaml.snakeyaml.util.UriEncoder -> org.d.a.p.b:
    java.nio.charset.CharsetDecoder UTF8Decoder -> a
    org.yaml.snakeyaml.external.com.google.gdata.util.common.base.Escaper escaper -> b
    46:46:java.lang.String encode(java.lang.String) -> a
    56:57:java.lang.String decode(java.nio.ByteBuffer) -> a
    62:64:java.lang.String decode(java.lang.String) -> b
    32:38:void <clinit>() -> <clinit>
sun1.misc.BASE64Encoder -> b.a.a:
    char[] pem_array -> b
    47:47:void <init>() -> <init>
    51:51:int bytesPerAtom() -> a
    60:60:int bytesPerLine() -> b
    86:111:void encodeAtom(java.io.OutputStream,byte[],int,int) -> a
    64:64:void <clinit>() -> <clinit>
sun1.misc.CharacterEncoder -> b.a.b:
    java.io.PrintStream pStream -> a
    76:76:void <init>() -> <init>
    int bytesPerAtom() -> a
    int bytesPerLine() -> b
    92:93:void encodeBufferPrefix(java.io.OutputStream) -> a
    99:99:void encodeBufferSuffix(java.io.OutputStream) -> b
    106:106:void encodeLinePrefix(java.io.OutputStream,int) -> a
    113:114:void encodeLineSuffix(java.io.OutputStream) -> c
    void encodeAtom(java.io.OutputStream,byte[],int,int) -> a
    126:132:int readFully(java.io.InputStream,byte[]) -> a
    145:170:void encode(java.io.InputStream,java.io.OutputStream) -> a
    187:198:java.lang.String encode(byte[]) -> a
    280:303:void encodeBuffer(java.io.InputStream,java.io.OutputStream) -> b
    320:328:java.lang.String encodeBuffer(byte[]) -> b
sun1.misc.HexDumpEncoder -> b.a.c:
    int offset -> b
    int thisLineLength -> c
    int currentByte -> d
    byte[] thisLine -> e
    46:51:void <init>() -> <init>
    56:68:void hexDigit(java.io.PrintStream,byte) -> a
    71:71:int bytesPerAtom() -> a
    75:75:int bytesPerLine() -> b
    79:81:void encodeBufferPrefix(java.io.OutputStream) -> a
    84:89:void encodeLinePrefix(java.io.OutputStream,int) -> a
    92:98:void encodeAtom(java.io.OutputStream,byte[],int,int) -> a
    101:118:void encodeLineSuffix(java.io.OutputStream) -> c
sun1.misc.IOUtils -> b.a.d:
    52:78:byte[] readFully(java.io.InputStream,int,boolean) -> a
sun1.security.action.GetBooleanAction -> b.b.a.a:
    java.lang.String theProp -> a
    59:61:void <init>(java.lang.String) -> <init>
    70:70:java.lang.Boolean run() -> a
    49:49:java.lang.Object run() -> run
sun1.security.action.GetPropertyAction -> b.b.a.b:
    java.lang.String theProp -> a
    java.lang.String defaultVal -> b
    60:62:void <init>(java.lang.String) -> <init>
    84:85:java.lang.String run() -> a
    49:49:java.lang.Object run() -> run
sun1.security.pkcs.ContentInfo -> b.b.b.a:
    int[] pkcs7 -> n
    int[] data -> o
    int[] sdata -> p
    int[] edata -> q
    int[] sedata -> r
    int[] ddata -> s
    int[] crdata -> t
    int[] nsdata -> u
    int[] tstInfo -> v
    int[] OLD_SDATA -> w
    int[] OLD_DATA -> x
    sun1.security.util.ObjectIdentifier PKCS7_OID -> a
    sun1.security.util.ObjectIdentifier DATA_OID -> b
    sun1.security.util.ObjectIdentifier SIGNED_DATA_OID -> c
    sun1.security.util.ObjectIdentifier ENVELOPED_DATA_OID -> d
    sun1.security.util.ObjectIdentifier SIGNED_AND_ENVELOPED_DATA_OID -> e
    sun1.security.util.ObjectIdentifier DIGESTED_DATA_OID -> f
    sun1.security.util.ObjectIdentifier ENCRYPTED_DATA_OID -> g
    sun1.security.util.ObjectIdentifier OLD_SIGNED_DATA_OID -> h
    sun1.security.util.ObjectIdentifier OLD_DATA_OID -> i
    sun1.security.util.ObjectIdentifier NETSCAPE_CERT_SEQUENCE_OID -> j
    sun1.security.util.ObjectIdentifier TIMESTAMP_TOKEN_INFO_OID -> k
    sun1.security.util.ObjectIdentifier contentType -> l
    sun1.security.util.DerValue content -> m
    89:92:void <init>(sun1.security.util.ObjectIdentifier,sun1.security.util.DerValue) -> <init>
    97:101:void <init>(byte[]) -> <init>
    109:110:void <init>(sun1.security.util.DerInputStream) -> <init>
    124:155:void <init>(sun1.security.util.DerInputStream,boolean) -> <init>
    158:158:sun1.security.util.DerValue getContent() -> a
    162:162:sun1.security.util.ObjectIdentifier getContentType() -> b
    166:174:byte[] getData() -> c
    181:197:void encode(sun1.security.util.DerOutputStream) -> a
    212:216:java.lang.String toString() -> toString
    41:84:void <clinit>() -> <clinit>
sun1.security.pkcs.EncryptedPrivateKeyInfo -> b.b.b.b:
    sun1.security.x509.AlgorithmId algid -> a
    byte[] encryptedData -> b
    byte[] encoded -> c
    64:90:void <init>(byte[]) -> <init>
    96:99:void <init>(sun1.security.x509.AlgorithmId,byte[]) -> <init>
    105:105:sun1.security.x509.AlgorithmId getAlgorithm() -> a
    112:112:byte[] getEncryptedData() -> b
    121:136:byte[] getEncoded() -> c
    140:156:boolean equals(java.lang.Object) -> equals
    166:170:int hashCode() -> hashCode
sun1.security.pkcs.PKCS7 -> b.b.b.c:
    java.math.BigInteger version -> a
    sun1.security.x509.AlgorithmId[] digestAlgorithmIds -> b
    sun1.security.pkcs.ContentInfo contentInfo -> c
    java.security.cert.X509Certificate[] certificates -> d
    java.security.cert.X509CRL[] crls -> e
    sun1.security.pkcs.SignerInfo[] signerInfos -> f
    boolean oldStyle -> g
    63:218:void <init>(sun1.security.x509.AlgorithmId[],sun1.security.pkcs.ContentInfo,java.security.cert.X509Certificate[],sun1.security.pkcs.SignerInfo[]) -> <init>
    464:467:void encodeSignedData(java.io.OutputStream) -> a
    478:526:void encodeSignedData(sun1.security.util.DerOutputStream) -> a
    700:725:java.lang.String toString() -> toString
sun1.security.pkcs.PKCS8Key -> b.b.b.d:
    sun1.security.x509.AlgorithmId algid -> a
    byte[] key -> b
    byte[] encodedKey -> c
    java.math.BigInteger version -> d
    75:75:void <init>() -> <init>
    108:130:java.security.PrivateKey parseKey(sun1.security.util.DerValue) -> a
    148:149:void parseKeyBits() -> a
    164:231:java.security.PrivateKey buildPKCS8Key(sun1.security.x509.AlgorithmId,byte[]) -> a
    238:238:java.lang.String getAlgorithm() -> getAlgorithm
    251:252:void encode(sun1.security.util.DerOutputStream) -> a
    258:263:byte[] getEncoded() -> getEncoded
    270:270:java.lang.String getFormat() -> getFormat
    279:292:byte[] encode() -> b
    376:381:void encode(sun1.security.util.DerOutputStream,sun1.security.x509.AlgorithmId,byte[]) -> a
    394:414:boolean equals(java.lang.Object) -> equals
    422:428:int hashCode() -> hashCode
    68:68:void <clinit>() -> <clinit>
sun1.security.pkcs.PKCS9Attribute -> b.b.b.e:
    sun1.security.util.Debug debug -> p
    sun1.security.util.ObjectIdentifier[] PKCS9_OIDS -> a
    sun1.security.util.ObjectIdentifier EMAIL_ADDRESS_OID -> b
    sun1.security.util.ObjectIdentifier UNSTRUCTURED_NAME_OID -> c
    sun1.security.util.ObjectIdentifier CONTENT_TYPE_OID -> d
    sun1.security.util.ObjectIdentifier MESSAGE_DIGEST_OID -> e
    sun1.security.util.ObjectIdentifier SIGNING_TIME_OID -> f
    sun1.security.util.ObjectIdentifier COUNTERSIGNATURE_OID -> g
    sun1.security.util.ObjectIdentifier CHALLENGE_PASSWORD_OID -> h
    sun1.security.util.ObjectIdentifier UNSTRUCTURED_ADDRESS_OID -> i
    sun1.security.util.ObjectIdentifier EXTENDED_CERTIFICATE_ATTRIBUTES_OID -> j
    sun1.security.util.ObjectIdentifier ISSUER_SERIALNUMBER_OID -> k
    sun1.security.util.ObjectIdentifier EXTENSION_REQUEST_OID -> l
    sun1.security.util.ObjectIdentifier SMIME_CAPABILITY_OID -> m
    sun1.security.util.ObjectIdentifier SIGNING_CERTIFICATE_OID -> n
    sun1.security.util.ObjectIdentifier SIGNATURE_TIMESTAMP_TOKEN_OID -> o
    java.util.Hashtable NAME_OID_TABLE -> q
    java.util.Hashtable OID_NAME_TABLE -> r
    java.lang.Byte[][] PKCS9_VALUE_TAGS -> s
    java.lang.Class[] VALUE_CLASSES -> t
    boolean[] SINGLE_VALUED -> u
    int index -> v
    java.lang.Object value -> w
    600:724:void derEncode(java.io.OutputStream) -> a
    754:754:sun1.security.util.ObjectIdentifier getOID() -> a
    788:823:java.lang.String toString() -> toString
    182:365:void <clinit>() -> <clinit>
sun1.security.pkcs.PKCS9Attributes -> b.b.b.f:
    java.util.Hashtable attributes -> a
    byte[] derEncoding -> b
    239:241:void encode(byte,java.io.OutputStream) -> a
    265:265:sun1.security.pkcs.PKCS9Attribute getAttribute(sun1.security.util.ObjectIdentifier) -> a
    326:349:java.lang.String toString() -> toString
sun1.security.pkcs.ParsingException -> b.b.b.g:
sun1.security.pkcs.SignerInfo -> b.b.b.h:
    java.util.Set DIGEST_PRIMITIVE_SET -> i
    java.util.Set SIG_PRIMITIVE_SET -> j
    sun1.security.util.DisabledAlgorithmConstraints JAR_DISABLED_CHECK -> k
    java.math.BigInteger version -> a
    sun1.security.x509.X500Name issuerName -> b
    java.math.BigInteger certificateSerialNumber -> c
    sun1.security.x509.AlgorithmId digestAlgorithmId -> d
    sun1.security.x509.AlgorithmId digestEncryptionAlgorithmId -> e
    byte[] encryptedDigest -> f
    boolean hasTimestamp -> l
    sun1.security.util.Debug debug -> m
    sun1.security.pkcs.PKCS9Attributes authenticatedAttributes -> g
    sun1.security.pkcs.PKCS9Attributes unauthenticatedAttributes -> h
    89:106:void <init>(sun1.security.x509.X500Name,java.math.BigInteger,sun1.security.x509.AlgorithmId,sun1.security.x509.AlgorithmId,byte[]) -> <init>
    220:245:void derEncode(java.io.OutputStream) -> a
    606:628:java.lang.String toString() -> toString
    72:90:void <clinit>() -> <clinit>
sun1.security.pkcs12.MacData -> b.b.c.a:
    java.lang.String digestAlgorithmName -> a
    java.security.AlgorithmParameters digestAlgorithmParams -> b
    byte[] digest -> c
    byte[] macSalt -> d
    int iterations -> e
    byte[] encoded -> f
    53:83:void <init>(sun1.security.util.DerInputStream) -> <init>
    53:113:void <init>(java.lang.String,byte[],byte[],int) -> <init>
    146:146:java.lang.String getDigestAlgName() -> a
    150:150:byte[] getSalt() -> b
    154:154:int getIterations() -> c
    158:158:byte[] getDigest() -> d
    169:195:byte[] getEncoded() -> e
sun1.security.pkcs12.PKCS12KeyStore -> b.b.c.b:
    sun1.security.util.Debug debug -> a
    int[] keyBag -> b
    int[] certBag -> c
    int[] pkcs9Name -> d
    int[] pkcs9KeyId -> e
    int[] pkcs9certType -> f
    int[] pbeWithSHAAnd40BitRC2CBC -> g
    int[] pbeWithSHAAnd3KeyTripleDESCBC -> h
    sun1.security.util.ObjectIdentifier PKCS8ShroudedKeyBag_OID -> i
    sun1.security.util.ObjectIdentifier CertBag_OID -> j
    sun1.security.util.ObjectIdentifier PKCS9FriendlyName_OID -> k
    sun1.security.util.ObjectIdentifier PKCS9LocalKeyId_OID -> l
    sun1.security.util.ObjectIdentifier PKCS9CertType_OID -> m
    sun1.security.util.ObjectIdentifier pbeWithSHAAnd40BitRC2CBC_OID -> n
    sun1.security.util.ObjectIdentifier pbeWithSHAAnd3KeyTripleDESCBC_OID -> o
    int counter -> p
    int privateKeyCount -> q
    java.security.SecureRandom random -> r
    java.util.Hashtable entries -> s
    java.util.ArrayList keyList -> t
    java.util.LinkedHashMap certsMap -> u
    java.util.ArrayList certEntries -> v
    118:204:void <init>() -> <init>
    224:286:java.security.Key engineGetKey(java.lang.String,char[]) -> engineGetKey
    301:309:java.security.cert.Certificate[] engineGetCertificateChain(java.lang.String) -> engineGetCertificateChain
    329:337:java.security.cert.Certificate engineGetCertificate(java.lang.String) -> engineGetCertificate
    350:354:java.util.Date engineGetCreationDate(java.lang.String) -> engineGetCreationDate
    385:422:void engineSetKeyEntry(java.lang.String,java.security.Key,char[],java.security.cert.Certificate[]) -> engineSetKeyEntry
    454:484:void engineSetKeyEntry(java.lang.String,byte[],java.security.cert.Certificate[]) -> engineSetKeyEntry
    493:498:byte[] getSalt() -> a
    507:519:java.security.AlgorithmParameters getAlgorithmParameters(java.lang.String) -> a
    528:547:java.security.AlgorithmParameters parseAlgParameters(sun1.security.util.DerInputStream) -> a
    555:565:javax.crypto.SecretKey getPBEKey(char[]) -> a
    580:608:byte[] encryptPrivateKey(byte[],char[]) -> a
    628:632:void engineSetCertificateEntry(java.lang.String,java.security.cert.Certificate) -> engineSetCertificateEntry
    645:646:void engineDeleteEntry(java.lang.String) -> engineDeleteEntry
    654:654:java.util.Enumeration engineAliases() -> engineAliases
    665:665:boolean engineContainsAlias(java.lang.String) -> engineContainsAlias
    674:674:int engineSize() -> engineSize
    685:689:boolean engineIsKeyEntry(java.lang.String) -> engineIsKeyEntry
    702:702:boolean engineIsCertificateEntry(java.lang.String) -> engineIsCertificateEntry
    722:734:java.lang.String engineGetCertificateAlias(java.security.cert.Certificate) -> engineGetCertificateAlias
    754:806:void engineStore(java.io.OutputStream,char[]) -> engineStore
    836:861:byte[] calculateMac(char[],byte[]) -> a
    870:883:boolean validateChain(java.security.cert.Certificate[]) -> a
    923:966:byte[] getBagAttributes(java.lang.String,byte[]) -> a
    979:1061:byte[] createEncryptedData(char[]) -> b
    1073:1110:byte[] createSafeContent() -> b
    1126:1163:byte[] encryptContent(byte[],char[]) -> b
    1187:1360:void engineLoad(java.io.InputStream,char[]) -> engineLoad
    1368:1384:java.security.cert.X509Certificate findMatchedCertificate(sun1.security.pkcs12.PKCS12KeyStore$KeyEntry) -> a
    1390:1535:void loadSafeContents(sun1.security.util.DerInputStream,char[]) -> a
    1538:1539:java.lang.String getUnfriendlyName() -> c
    122:171:void <clinit>() -> <clinit>
sun1.security.pkcs12.PKCS12KeyStore$1 -> b.b.c.c:
sun1.security.pkcs12.PKCS12KeyStore$CertEntry -> b.b.c.d:
    java.security.cert.X509Certificate cert -> a
    byte[] keyId -> b
    java.lang.String alias -> c
    187:191:void <init>(java.security.cert.X509Certificate,byte[],java.lang.String) -> <init>
sun1.security.pkcs12.PKCS12KeyStore$KeyEntry -> b.b.c.e:
    java.util.Date date -> a
    byte[] protectedPrivKey -> b
    java.security.cert.Certificate[] chain -> c
    byte[] keyId -> d
    java.lang.String alias -> e
    174:174:void <init>() -> <init>
    174:174:void <init>(sun1.security.pkcs12.PKCS12KeyStore$1) -> <init>
sun1.security.provider.JavaKeyStore -> b.b.d.a:
    java.util.Hashtable entries -> a
    91:93:void <init>() -> <init>
    java.lang.String convertAlias(java.lang.String) -> a
    118:138:java.security.Key engineGetKey(java.lang.String,char[]) -> engineGetKey
    153:162:java.security.cert.Certificate[] engineGetCertificateChain(java.lang.String) -> engineGetCertificateChain
    182:195:java.security.cert.Certificate engineGetCertificate(java.lang.String) -> engineGetCertificate
    208:217:java.util.Date engineGetCreationDate(java.lang.String) -> engineGetCreationDate
    247:276:void engineSetKeyEntry(java.lang.String,java.security.Key,char[],java.security.cert.Certificate[]) -> engineSetKeyEntry
    305:328:void engineSetKeyEntry(java.lang.String,byte[],java.security.cert.Certificate[]) -> engineSetKeyEntry
    347:360:void engineSetCertificateEntry(java.lang.String,java.security.cert.Certificate) -> engineSetCertificateEntry
    372:375:void engineDeleteEntry(java.lang.String) -> engineDeleteEntry
    383:383:java.util.Enumeration engineAliases() -> engineAliases
    394:394:boolean engineContainsAlias(java.lang.String) -> engineContainsAlias
    403:403:int engineSize() -> engineSize
    414:418:boolean engineIsKeyEntry(java.lang.String) -> engineIsKeyEntry
    430:434:boolean engineIsCertificateEntry(java.lang.String) -> engineIsCertificateEntry
    457:471:java.lang.String engineGetCertificateAlias(java.security.cert.Certificate) -> engineGetCertificateAlias
    490:603:void engineStore(java.io.OutputStream,char[]) -> engineStore
    625:795:void engineLoad(java.io.InputStream,char[]) -> engineLoad
    806:816:java.security.MessageDigest getPreKeyedHash(char[]) -> a
sun1.security.provider.JavaKeyStore$1 -> b.b.d.b:
sun1.security.provider.JavaKeyStore$JKS -> b.b.d.c:
    55:55:void <init>() -> <init>
    57:57:java.lang.String convertAlias(java.lang.String) -> a
    55:55:void engineLoad(java.io.InputStream,char[]) -> engineLoad
    55:55:void engineStore(java.io.OutputStream,char[]) -> engineStore
    55:55:java.lang.String engineGetCertificateAlias(java.security.cert.Certificate) -> engineGetCertificateAlias
    55:55:boolean engineIsCertificateEntry(java.lang.String) -> engineIsCertificateEntry
    55:55:boolean engineIsKeyEntry(java.lang.String) -> engineIsKeyEntry
    55:55:int engineSize() -> engineSize
    55:55:boolean engineContainsAlias(java.lang.String) -> engineContainsAlias
    55:55:java.util.Enumeration engineAliases() -> engineAliases
    55:55:void engineDeleteEntry(java.lang.String) -> engineDeleteEntry
    55:55:void engineSetCertificateEntry(java.lang.String,java.security.cert.Certificate) -> engineSetCertificateEntry
    55:55:void engineSetKeyEntry(java.lang.String,byte[],java.security.cert.Certificate[]) -> engineSetKeyEntry
    55:55:void engineSetKeyEntry(java.lang.String,java.security.Key,char[],java.security.cert.Certificate[]) -> engineSetKeyEntry
    55:55:java.util.Date engineGetCreationDate(java.lang.String) -> engineGetCreationDate
    55:55:java.security.cert.Certificate engineGetCertificate(java.lang.String) -> engineGetCertificate
    55:55:java.security.cert.Certificate[] engineGetCertificateChain(java.lang.String) -> engineGetCertificateChain
    55:55:java.security.Key engineGetKey(java.lang.String,char[]) -> engineGetKey
sun1.security.provider.JavaKeyStore$KeyEntry -> b.b.d.d:
    java.util.Date date -> a
    byte[] protectedPrivKey -> b
    java.security.cert.Certificate[] chain -> c
    73:73:void <init>() -> <init>
    73:73:void <init>(sun1.security.provider.JavaKeyStore$1) -> <init>
sun1.security.provider.JavaKeyStore$TrustedCertEntry -> b.b.d.e:
    java.util.Date date -> a
    java.security.cert.Certificate cert -> b
    80:80:void <init>() -> <init>
    80:80:void <init>(sun1.security.provider.JavaKeyStore$1) -> <init>
sun1.security.provider.JavaProvider -> b.b.d.f:
    9:13:void <init>() -> <init>
sun1.security.provider.KeyProtector -> b.b.d.g:
    byte[] passwdBytes -> a
    java.security.MessageDigest md -> b
    131:144:void <init>(char[]) -> <init>
    151:155:void finalize() -> finalize
    167:244:byte[] protect(java.security.Key) -> a
    262:338:java.security.Key recover(sun1.security.pkcs.EncryptedPrivateKeyInfo) -> a
sun1.security.util.AbstractAlgorithmConstraints -> b.b.e.a:
    sun1.security.util.AlgorithmDecomposer decomposer -> a
    41:43:void <init>(sun1.security.util.AlgorithmDecomposer) -> <init>
    47:70:java.lang.String[] getAlgorithms(java.lang.String) -> a
sun1.security.util.AbstractAlgorithmConstraints$1 -> b.b.e.b:
    java.lang.String val$propertyName -> a
    48:48:void <init>(java.lang.String) -> <init>
    50:50:java.lang.String run() -> a
    48:48:java.lang.Object run() -> run
sun1.security.util.AlgorithmDecomposer -> b.b.e.c:
    java.util.regex.Pattern transPattern -> a
    java.util.regex.Pattern pattern -> b
    35:35:void <init>() -> <init>
    170:170:java.lang.String hashName(java.lang.String) -> a
    37:39:void <clinit>() -> <clinit>
sun1.security.util.BitArray -> b.b.e.d:
    byte[] repn -> a
    int length -> b
    byte[][] NYBBLE -> c
    46:46:int subscript(int) -> b
    50:50:int position(int) -> c
    56:64:void <init>(int) -> <init>
    74:100:void <init>(int,byte[]) -> <init>
    106:113:void <init>(boolean[]) -> <init>
    119:122:void <init>(sun1.security.util.BitArray) -> <init>
    128:132:boolean get(int) -> a
    140:151:void set(int,boolean) -> a
    157:157:int length() -> a
    170:170:byte[] toByteArray() -> b
    174:184:boolean equals(java.lang.Object) -> equals
    191:196:boolean[] toBooleanArray() -> c
    205:210:int hashCode() -> hashCode
    215:215:java.lang.Object clone() -> clone
    244:262:java.lang.String toString() -> toString
    267:272:sun1.security.util.BitArray truncate() -> d
    219:219:void <clinit>() -> <clinit>
sun1.security.util.ByteArrayLexOrder -> b.b.e.e:
    36:36:void <init>() -> <init>
    55:63:int compare(byte[],byte[]) -> a
    36:36:int compare(java.lang.Object,java.lang.Object) -> compare
sun1.security.util.ByteArrayTagOrder -> b.b.e.f:
    38:38:void <init>() -> <init>
    57:57:int compare(byte[],byte[]) -> a
    38:38:int compare(java.lang.Object,java.lang.Object) -> compare
sun1.security.util.CryptoPrimitive -> b.b.e.g:
    sun1.security.util.CryptoPrimitive MESSAGE_DIGEST -> a
    sun1.security.util.CryptoPrimitive SECURE_RANDOM -> b
    sun1.security.util.CryptoPrimitive BLOCK_CIPHER -> c
    sun1.security.util.CryptoPrimitive STREAM_CIPHER -> d
    sun1.security.util.CryptoPrimitive MAC -> e
    sun1.security.util.CryptoPrimitive KEY_WRAP -> f
    sun1.security.util.CryptoPrimitive PUBLIC_KEY_ENCRYPTION -> g
    sun1.security.util.CryptoPrimitive SIGNATURE -> h
    sun1.security.util.CryptoPrimitive KEY_ENCAPSULATION -> i
    sun1.security.util.CryptoPrimitive KEY_AGREEMENT -> j
    sun1.security.util.CryptoPrimitive[] $VALUES -> k
    33:33:sun1.security.util.CryptoPrimitive[] values() -> values
    33:33:sun1.security.util.CryptoPrimitive valueOf(java.lang.String) -> valueOf
    33:33:void <init>(java.lang.String,int) -> <init>
    33:82:void <clinit>() -> <clinit>
sun1.security.util.Debug -> b.b.e.h:
    java.lang.String prefix -> a
    java.lang.String args -> b
    char[] hexDigits -> c
    38:38:void <init>() -> <init>
    70:104:void Help() -> a
    114:114:sun1.security.util.Debug getInstance(java.lang.String) -> a
    123:128:sun1.security.util.Debug getInstance(java.lang.String,java.lang.String) -> a
    138:144:boolean isOn(java.lang.String) -> b
    155:156:void println(java.lang.String) -> c
    183:209:java.lang.String toHexString(java.math.BigInteger) -> a
    216:272:java.lang.String marshal(java.lang.String) -> d
    45:275:void <clinit>() -> <clinit>
sun1.security.util.DerEncoder -> b.b.e.i:
    void derEncode(java.io.OutputStream) -> a
sun1.security.util.DerIndefLenConverter -> b.b.e.j:
    byte[] data -> a
    byte[] newData -> b
    int newDataPos -> c
    int dataPos -> d
    int dataSize -> e
    int index -> f
    int unresolved -> g
    java.util.ArrayList ndefsList -> h
    int numOfTotalLenBytes -> i
    60:60:boolean isEOC(int) -> c
    67:67:boolean isLongForm(int) -> a
    53:73:void <init>() -> <init>
    85:85:boolean isIndefinite(int) -> b
    93:126:void parseTag() -> a
    133:141:void writeTag() -> b
    148:174:int parseLength() -> c
    184:208:void writeLengthAndValue() -> d
    211:236:void writeLength(int) -> d
    240:273:byte[] getLengthBytes(int) -> e
    299:300:void parseValue(int) -> f
    306:308:void writeValue(int) -> g
    321:347:byte[] convert(byte[]) -> a
sun1.security.util.DerInputBuffer -> b.b.e.k:
    boolean allowBER -> a
    46:56:void <init>(byte[],boolean) -> <init>
    46:61:void <init>(byte[],int,int,boolean) -> <init>
    65:69:sun1.security.util.DerInputBuffer dup() -> a
    74:80:byte[] toByteArray() -> b
    95:98:boolean equals(java.lang.Object) -> equals
    102:113:boolean equals(sun1.security.util.DerInputBuffer) -> a
    122:129:int hashCode() -> hashCode
    133:136:void truncate(int) -> a
    147:167:java.math.BigInteger getBigInteger(int,boolean) -> a
    182:189:int getInteger(int) -> b
    197:216:byte[] getBitString(int) -> c
    223:223:byte[] getBitString() -> c
    231:250:sun1.security.util.BitArray getUnalignedBitString() -> d
    259:265:java.util.Date getUTCTime(int) -> d
    274:280:java.util.Date getGeneralizedTime(int) -> e
    311:444:java.util.Date getTime(int,boolean) -> b
sun1.security.util.DerInputStream -> b.b.e.l:
    sun1.security.util.DerInputBuffer buffer -> a
    byte tag -> b
    79:81:void <init>(byte[]) -> <init>
    98:100:void <init>(byte[],int,int,boolean) -> <init>
    121:139:void init(byte[],int,int,boolean) -> a
    141:144:void <init>(sun1.security.util.DerInputBuffer) -> <init>
    158:164:sun1.security.util.DerInputStream subStream(int,boolean) -> a
    172:172:byte[] toByteArray() -> a
    191:194:int getInteger() -> b
    203:206:java.math.BigInteger getBigInteger() -> c
    251:275:sun1.security.util.BitArray getUnalignedBitString() -> d
    282:290:byte[] getOctetString() -> e
    297:300:void getBytes(byte[]) -> a
    314:314:sun1.security.util.ObjectIdentifier getOID() -> f
    328:331:sun1.security.util.DerValue[] getSequence(int) -> a
    345:348:sun1.security.util.DerValue[] getSet(int) -> b
    364:370:sun1.security.util.DerValue[] getSet(int,boolean) -> b
    381:440:sun1.security.util.DerValue[] readVector(int) -> c
    451:451:sun1.security.util.DerValue getDerValue() -> g
    530:532:java.util.Date getUTCTime() -> h
    539:541:java.util.Date getGeneralizedTime() -> i
    549:549:int getByte() -> j
    558:558:int getLength() -> k
    569:569:int getLength(java.io.InputStream) -> a
    581:618:int getLength(int,java.io.InputStream) -> a
    625:625:void mark(int) -> d
    633:633:void reset() -> l
    641:641:int available() -> m
sun1.security.util.DerOutputStream -> b.b.e.m:
    sun1.security.util.ByteArrayLexOrder lexOrder -> a
    sun1.security.util.ByteArrayTagOrder tagOrder -> b
    67:67:void <init>() -> <init>
    79:82:void write(byte,byte[]) -> a
    94:97:void write(byte,sun1.security.util.DerOutputStream) -> a
    118:120:void writeImplicit(byte,sun1.security.util.DerOutputStream) -> b
    126:127:void putDerValue(sun1.security.util.DerValue) -> a
    141:148:void putBoolean(boolean) -> a
    155:157:void putEnumerated(int) -> a
    165:169:void putInteger(java.math.BigInteger) -> a
    184:186:void putInteger(int) -> b
    190:230:void putIntegerContents(int) -> d
    239:243:void putBitString(byte[]) -> a
    252:258:void putUnalignedBitString(sun1.security.util.BitArray) -> a
    267:268:void putTruncatedUnalignedBitString(sun1.security.util.BitArray) -> b
    276:277:void putOctetString(byte[]) -> b
    284:286:void putNull() -> a
    293:294:void putOID(sun1.security.util.ObjectIdentifier) -> a
    339:340:void putOrderedSetOf(byte,sun1.security.util.DerEncoder[]) -> a
    376:396:void putOrderedSet(byte,sun1.security.util.DerEncoder[],java.util.Comparator) -> a
    409:410:void putPrintableString(java.lang.String) -> a
    427:428:void putIA5String(java.lang.String) -> b
    434:435:void putBMPString(java.lang.String) -> c
    455:459:void writeString(java.lang.String,byte,java.lang.String) -> a
    468:469:void putUTCTime(java.util.Date) -> a
    478:479:void putGeneralizedTime(java.util.Date) -> b
    494:515:void putTime(java.util.Date,byte) -> a
    524:549:void putLength(int) -> c
    575:576:void derEncode(java.io.OutputStream) -> a
    360:366:void <clinit>() -> <clinit>
sun1.security.util.DerValue -> b.b.e.n:
    byte tag -> a
    sun1.security.util.DerInputBuffer buffer -> b
    sun1.security.util.DerInputStream data -> c
    int length -> d
    178:178:boolean isContextSpecific() -> a
    184:187:boolean isContextSpecific(byte) -> a
    193:193:boolean isConstructed() -> b
    199:202:boolean isConstructed(byte) -> b
    208:218:void <init>(java.lang.String) -> <init>
    225:227:void <init>(byte,java.lang.String) -> <init>
    231:237:void <init>(byte,byte[],boolean) -> <init>
    246:247:void <init>(byte,byte[]) -> <init>
    252:290:void <init>(sun1.security.util.DerInputBuffer) -> <init>
    294:296:void <init>(byte[],boolean) -> <init>
    306:307:void <init>(byte[]) -> <init>
    331:333:void <init>(java.io.InputStream,boolean) -> <init>
    345:346:void <init>(java.io.InputStream) -> <init>
    350:380:sun1.security.util.DerInputStream init(byte,java.lang.String) -> a
    389:417:sun1.security.util.DerInputStream init(boolean,java.io.InputStream,boolean) -> a
    425:439:void encode(sun1.security.util.DerOutputStream) -> a
    442:442:sun1.security.util.DerInputStream getData() -> c
    455:465:boolean getBoolean() -> d
    474:476:sun1.security.util.ObjectIdentifier getOID() -> e
    480:487:byte[] append(byte[],byte[]) -> a
    498:513:byte[] getOctetString() -> f
    522:525:int getInteger() -> g
    534:536:java.math.BigInteger getBigInteger() -> h
    558:562:int getEnumerated() -> i
    571:575:byte[] getBitString() -> j
    584:588:sun1.security.util.BitArray getUnalignedBitString() -> k
    597:614:java.lang.String getAsString() -> l
    642:647:sun1.security.util.BitArray getUnalignedBitString(boolean) -> a
    655:660:byte[] getDataBytes() -> m
    670:674:java.lang.String getPrintableString() -> n
    683:687:java.lang.String getT61String() -> o
    696:700:java.lang.String getIA5String() -> p
    710:716:java.lang.String getBMPString() -> q
    726:730:java.lang.String getUTF8String() -> r
    740:744:java.lang.String getGeneralString() -> s
    779:782:boolean equals(java.lang.Object) -> equals
    793:807:boolean equals(sun1.security.util.DerValue) -> a
    814:820:boolean doEquals(sun1.security.util.DerValue,sun1.security.util.DerValue) -> a
    831:844:java.lang.String toString() -> toString
    855:859:byte[] toByteArray() -> t
    869:871:sun1.security.util.DerInputStream toDerInputStream() -> u
    878:878:int length() -> v
    899:918:boolean isPrintableStringChar(char) -> a
    933:937:byte createTag(byte,boolean,byte) -> a
    947:948:void resetTag(byte) -> c
    956:956:int hashCode() -> hashCode
sun1.security.util.DisabledAlgorithmConstraints -> b.b.e.o:
    sun1.security.util.Debug debug -> b
    java.lang.String[] disabledAlgorithms -> c
    sun1.security.util.DisabledAlgorithmConstraints$Constraints algorithmConstraints -> d
    73:74:void <init>(java.lang.String) -> <init>
    87:90:void <init>(java.lang.String,sun1.security.util.AlgorithmDecomposer) -> <init>
    46:46:sun1.security.util.Debug access$000() -> a
    48:48:void <clinit>() -> <clinit>
sun1.security.util.DisabledAlgorithmConstraints$1 -> b.b.e.p:
    int[] $SwitchMap$sun1$security$util$DisabledAlgorithmConstraints$KeySizeConstraint$Operator -> a
    532:532:void <clinit>() -> <clinit>
sun1.security.util.DisabledAlgorithmConstraints$Constraint -> b.b.e.q:
    java.lang.String algorithm -> a
    sun1.security.util.DisabledAlgorithmConstraints$Constraint nextConstraint -> b
    424:427:void <init>() -> <init>
    424:424:void <init>(sun1.security.util.DisabledAlgorithmConstraints$1) -> <init>
sun1.security.util.DisabledAlgorithmConstraints$Constraints -> b.b.e.r:
    java.util.Map constraintsMap -> a
    java.util.regex.Pattern keySizePattern -> b
    253:354:void <init>(java.lang.String[]) -> <init>
    254:254:void <clinit>() -> <clinit>
sun1.security.util.DisabledAlgorithmConstraints$KeySizeConstraint -> b.b.e.s:
    int minSize -> c
    int maxSize -> d
    int prohibitedSize -> e
    527:564:void <init>(java.lang.String,sun1.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator,int) -> <init>
sun1.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator -> b.b.e.t:
    sun1.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator EQ -> a
    sun1.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator NE -> b
    sun1.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator LT -> c
    sun1.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator LE -> d
    sun1.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator GT -> e
    sun1.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator GE -> f
    sun1.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator[] $VALUES -> g
    565:565:sun1.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator[] values() -> values
    565:565:sun1.security.util.DisabledAlgorithmConstraints$KeySizeConstraint$Operator valueOf(java.lang.String) -> valueOf
    565:565:void <init>(java.lang.String,int) -> <init>
    565:572:void <clinit>() -> <clinit>
sun1.security.util.DisabledAlgorithmConstraints$jdkCAConstraint -> b.b.e.u:
    485:487:void <init>(java.lang.String) -> <init>
sun1.security.util.ObjectIdentifier -> b.b.e.v:
    int[] components -> a
    int componentLen -> b
    java.lang.String stringForm -> c
    65:96:void <init>(java.lang.String) -> <init>
    111:132:void checkValidOid(int[],int) -> a
    138:142:void <init>(int[]) -> <init>
    157:183:void <init>(sun1.security.util.DerInputStream) -> <init>
    190:192:void <init>(sun1.security.util.DerInputBuffer) -> <init>
    198:201:void <init>(int[],boolean) -> <init>
    208:208:sun1.security.util.ObjectIdentifier newInternal(int[]) -> a
    224:284:void initFromEncoding(sun1.security.util.DerInputStream,int) -> a
    292:311:void encode(sun1.security.util.DerOutputStream) -> a
    323:335:int getComponent(sun1.security.util.DerInputStream) -> a
    349:360:void putComponent(sun1.security.util.DerOutputStream,int) -> a
    398:413:boolean equals(java.lang.Object) -> equals
    417:421:int hashCode() -> hashCode
    431:443:java.lang.String toString() -> toString
sun1.security.x509.AVA -> b.b.f.a:
    sun1.security.util.Debug debug -> c
    boolean PRESERVE_OLD_DC_ENCODING -> d
    sun1.security.util.ObjectIdentifier oid -> a
    sun1.security.util.DerValue value -> b
    114:120:void <init>(sun1.security.util.ObjectIdentifier,sun1.security.util.DerValue) -> <init>
    145:146:void <init>(java.io.Reader,java.util.Map) -> <init>
    174:226:void <init>(java.io.Reader,int,java.util.Map) -> <init>
    265:301:sun1.security.util.DerValue parseHexString(java.io.Reader,int) -> a
    312:382:sun1.security.util.DerValue parseQuotedString(java.io.Reader,java.lang.StringBuilder) -> a
    389:514:sun1.security.util.DerValue parseString(java.io.Reader,int,int,java.lang.StringBuilder) -> a
    521:534:java.lang.Byte getEmbeddedHexPair(int,java.io.Reader) -> a
    539:544:java.lang.String getEmbeddedHexString(java.util.List) -> a
    548:557:boolean isTerminator(int,int) -> a
    562:566:int readChar(java.io.Reader,java.lang.String) -> a
    571:601:boolean trailingSpace(java.io.Reader) -> a
    605:618:void <init>(sun1.security.util.DerValue) -> <init>
    625:633:boolean equals(java.lang.Object) -> equals
    642:642:int hashCode() -> hashCode
    662:669:void derEncode(java.io.OutputStream) -> a
    672:672:java.lang.String toKeyword(int,java.util.Map) -> a
    680:681:java.lang.String toString() -> toString
    726:862:java.lang.String toRFC2253String(java.util.Map) -> a
    873:1003:java.lang.String toRFC2253CanonicalString() -> a
    1010:1028:boolean isDerString(sun1.security.util.DerValue,boolean) -> a
    1034:1034:boolean hasRFC2253Keyword() -> b
    1043:1153:java.lang.String toKeywordValueString(java.lang.String) -> a
    63:68:void <clinit>() -> <clinit>
sun1.security.x509.AVAComparator -> b.b.f.b:
    java.util.Comparator INSTANCE -> a
    472:474:void <init>() -> <init>
    477:477:java.util.Comparator getInstance() -> a
    485:495:int compare(sun1.security.x509.AVA,sun1.security.x509.AVA) -> a
    468:468:int compare(java.lang.Object,java.lang.Object) -> compare
    470:470:void <clinit>() -> <clinit>
sun1.security.x509.AVAKeyword -> b.b.f.c:
    java.util.Map oidMap -> a
    java.util.Map keywordMap -> b
    java.lang.String keyword -> c
    sun1.security.util.ObjectIdentifier oid -> d
    boolean rfc1779Compliant -> e
    boolean rfc2253Compliant -> f
    1173:1182:void <init>(java.lang.String,sun1.security.util.ObjectIdentifier,boolean,boolean) -> <init>
    1185:1194:boolean isCompliant(int) -> a
    1225:1270:sun1.security.util.ObjectIdentifier getOID(java.lang.String,int,java.util.Map) -> a
    1293:1324:java.lang.String getKeyword(sun1.security.util.ObjectIdentifier,int,java.util.Map) -> a
    1332:1336:boolean hasKeyword(sun1.security.util.ObjectIdentifier,int) -> a
    1340:1369:void <clinit>() -> <clinit>
sun1.security.x509.AccessDescription -> b.b.f.d:
    int myhash -> e
    sun1.security.util.ObjectIdentifier accessMethod -> f
    sun1.security.x509.GeneralName accessLocation -> g
    sun1.security.util.ObjectIdentifier Ad_OCSP_Id -> a
    sun1.security.util.ObjectIdentifier Ad_CAISSUERS_Id -> b
    sun1.security.util.ObjectIdentifier Ad_TIMESTAMPING_Id -> c
    sun1.security.util.ObjectIdentifier Ad_CAREPOSITORY_Id -> d
    38:65:void <init>(sun1.security.util.DerValue) -> <init>
    68:68:sun1.security.util.ObjectIdentifier getAccessMethod() -> a
    72:72:sun1.security.x509.GeneralName getAccessLocation() -> b
    76:80:void encode(sun1.security.util.DerOutputStream) -> a
    83:86:int hashCode() -> hashCode
    90:99:boolean equals(java.lang.Object) -> equals
    103:116:java.lang.String toString() -> toString
    44:54:void <clinit>() -> <clinit>
sun1.security.x509.AlgorithmId -> b.b.f.e:
    sun1.security.util.ObjectIdentifier algid -> P
    java.security.AlgorithmParameters algParams -> Q
    boolean constructedFromDer -> R
    sun1.security.util.DerValue params -> a
    boolean initOidTable -> S
    java.util.Map oidTable -> T
    java.util.Map nameTable -> U
    sun1.security.util.ObjectIdentifier MD2_oid -> b
    sun1.security.util.ObjectIdentifier MD5_oid -> c
    sun1.security.util.ObjectIdentifier SHA_oid -> d
    sun1.security.util.ObjectIdentifier SHA224_oid -> e
    sun1.security.util.ObjectIdentifier SHA256_oid -> f
    sun1.security.util.ObjectIdentifier SHA384_oid -> g
    sun1.security.util.ObjectIdentifier SHA512_oid -> h
    int[] DH_data -> V
    int[] DH_PKIX_data -> W
    int[] DSA_OIW_data -> X
    int[] DSA_PKIX_data -> Y
    int[] RSA_data -> Z
    int[] RSAEncryption_data -> aa
    sun1.security.util.ObjectIdentifier DH_oid -> i
    sun1.security.util.ObjectIdentifier DH_PKIX_oid -> j
    sun1.security.util.ObjectIdentifier DSA_oid -> k
    sun1.security.util.ObjectIdentifier DSA_OIW_oid -> l
    sun1.security.util.ObjectIdentifier EC_oid -> m
    sun1.security.util.ObjectIdentifier ECDH_oid -> n
    sun1.security.util.ObjectIdentifier RSA_oid -> o
    sun1.security.util.ObjectIdentifier RSAEncryption_oid -> p
    int[] md2WithRSAEncryption_data -> ab
    int[] md5WithRSAEncryption_data -> ac
    int[] sha1WithRSAEncryption_data -> ad
    int[] sha1WithRSAEncryption_OIW_data -> ae
    int[] sha224WithRSAEncryption_data -> af
    int[] sha256WithRSAEncryption_data -> ag
    int[] sha384WithRSAEncryption_data -> ah
    int[] sha512WithRSAEncryption_data -> ai
    int[] shaWithDSA_OIW_data -> aj
    int[] sha1WithDSA_OIW_data -> ak
    int[] dsaWithSHA1_PKIX_data -> al
    sun1.security.util.ObjectIdentifier md2WithRSAEncryption_oid -> q
    sun1.security.util.ObjectIdentifier md5WithRSAEncryption_oid -> r
    sun1.security.util.ObjectIdentifier sha1WithRSAEncryption_oid -> s
    sun1.security.util.ObjectIdentifier sha1WithRSAEncryption_OIW_oid -> t
    sun1.security.util.ObjectIdentifier sha224WithRSAEncryption_oid -> u
    sun1.security.util.ObjectIdentifier sha256WithRSAEncryption_oid -> v
    sun1.security.util.ObjectIdentifier sha384WithRSAEncryption_oid -> w
    sun1.security.util.ObjectIdentifier sha512WithRSAEncryption_oid -> x
    sun1.security.util.ObjectIdentifier shaWithDSA_OIW_oid -> y
    sun1.security.util.ObjectIdentifier sha1WithDSA_OIW_oid -> z
    sun1.security.util.ObjectIdentifier sha1WithDSA_oid -> A
    sun1.security.util.ObjectIdentifier sha224WithDSA_oid -> B
    sun1.security.util.ObjectIdentifier sha256WithDSA_oid -> C
    sun1.security.util.ObjectIdentifier sha1WithECDSA_oid -> D
    sun1.security.util.ObjectIdentifier sha224WithECDSA_oid -> E
    sun1.security.util.ObjectIdentifier sha256WithECDSA_oid -> F
    sun1.security.util.ObjectIdentifier sha384WithECDSA_oid -> G
    sun1.security.util.ObjectIdentifier sha512WithECDSA_oid -> H
    sun1.security.util.ObjectIdentifier specifiedWithECDSA_oid -> I
    sun1.security.util.ObjectIdentifier pbeWithMD5AndDES_oid -> J
    sun1.security.util.ObjectIdentifier pbeWithMD5AndRC2_oid -> K
    sun1.security.util.ObjectIdentifier pbeWithSHA1AndDES_oid -> L
    sun1.security.util.ObjectIdentifier pbeWithSHA1AndRC2_oid -> M
    sun1.security.util.ObjectIdentifier pbeWithSHA1AndDESede_oid -> N
    sun1.security.util.ObjectIdentifier pbeWithSHA1AndRC2_40_oid -> O
    70:86:void <init>() -> <init>
    70:95:void <init>(sun1.security.util.ObjectIdentifier) -> <init>
    70:107:void <init>(sun1.security.util.ObjectIdentifier,java.security.AlgorithmParameters) -> <init>
    70:116:void <init>(sun1.security.util.ObjectIdentifier,sun1.security.util.DerValue) -> <init>
    119:130:void decodeParams() -> a
    136:137:void encode(sun1.security.util.DerOutputStream) -> a
    149:194:void derEncode(java.io.OutputStream) -> a
    201:203:byte[] encode() -> b
    214:214:sun1.security.util.ObjectIdentifier getOID() -> c
    226:243:java.lang.String getName() -> d
    247:247:java.security.AlgorithmParameters getParameters() -> e
    257:257:byte[] getEncodedParams() -> f
    265:267:boolean equals(sun1.security.x509.AlgorithmId) -> a
    278:286:boolean equals(java.lang.Object) -> equals
    295:295:boolean equals(sun1.security.util.ObjectIdentifier) -> a
    304:307:int hashCode() -> hashCode
    315:320:java.lang.String paramsToString() -> g
    328:328:java.lang.String toString() -> toString
    345:372:sun1.security.x509.AlgorithmId parse(sun1.security.util.DerValue) -> a
    400:410:sun1.security.x509.AlgorithmId get(java.lang.String) -> a
    451:591:sun1.security.util.ObjectIdentifier algOID(java.lang.String) -> b
    595:595:sun1.security.util.ObjectIdentifier oid(int[]) -> a
    598:920:void <clinit>() -> <clinit>
sun1.security.x509.AuthorityInfoAccessExtension -> b.b.f.f:
    java.util.List accessDescriptions -> d
    94:99:void <init>(java.util.List) -> <init>
    109:129:void <init>(java.lang.Boolean,java.lang.Object) -> <init>
    142:142:java.lang.String getName() -> a
    152:160:void encode(java.io.OutputStream) -> a
    219:230:void encodeThis() -> b
    236:236:java.lang.String toString() -> toString
sun1.security.x509.AuthorityKeyIdentifierExtension -> b.b.f.g:
    sun1.security.x509.KeyIdentifier id -> d
    sun1.security.x509.GeneralNames names -> e
    sun1.security.x509.SerialNumber serialNum -> f
    84:114:void encodeThis() -> b
    78:136:void <init>(sun1.security.x509.KeyIdentifier,sun1.security.x509.GeneralNames,sun1.security.x509.SerialNumber) -> <init>
    78:193:void <init>(java.lang.Boolean,java.lang.Object) -> <init>
    199:209:java.lang.String toString() -> toString
    219:227:void encode(java.io.OutputStream) -> a
    308:308:java.lang.String getName() -> a
sun1.security.x509.BasicConstraintsExtension -> b.b.f.h:
    boolean ca -> d
    int pathLen -> e
    73:88:void encodeThis() -> b
    98:99:void <init>(boolean,int) -> <init>
    68:115:void <init>(java.lang.Boolean,boolean,int) -> <init>
    68:171:void <init>(java.lang.Boolean,java.lang.Object) -> <init>
    177:185:java.lang.String toString() -> toString
    194:207:void encode(java.io.OutputStream) -> a
    234:239:java.lang.Object get(java.lang.String) -> a
    275:275:java.lang.String getName() -> a
sun1.security.x509.CRLDistributionPointsExtension -> b.b.f.i:
    java.util.List distributionPoints -> d
    java.lang.String extensionName -> e
    116:117:void <init>(java.util.List) -> <init>
    130:132:void <init>(boolean,java.util.List) -> <init>
    139:146:void <init>(sun1.security.util.ObjectIdentifier,boolean,java.util.List,java.lang.String) -> <init>
    157:158:void <init>(java.lang.Boolean,java.lang.Object) -> <init>
    165:187:void <init>(sun1.security.util.ObjectIdentifier,java.lang.Boolean,java.lang.Object,java.lang.String) -> <init>
    193:193:java.lang.String getName() -> a
    203:204:void encode(java.io.OutputStream) -> a
    213:221:void encode(java.io.OutputStream,sun1.security.util.ObjectIdentifier,boolean) -> a
    281:292:void encodeThis() -> b
    298:298:java.lang.String toString() -> toString
sun1.security.x509.CRLNumberExtension -> b.b.f.j:
    java.math.BigInteger crlNumber -> d
    java.lang.String extensionName -> e
    java.lang.String extensionLabel -> f
    65:72:void encodeThis() -> b
    81:83:void <init>(int) -> <init>
    92:93:void <init>(java.math.BigInteger) -> <init>
    59:108:void <init>(sun1.security.util.ObjectIdentifier,boolean,java.math.BigInteger,java.lang.String,java.lang.String) -> <init>
    120:121:void <init>(java.lang.Boolean,java.lang.Object) -> <init>
    59:137:void <init>(sun1.security.util.ObjectIdentifier,java.lang.Boolean,java.lang.Object,java.lang.String,java.lang.String) -> <init>
    184:187:java.lang.String toString() -> toString
    197:199:void encode(java.io.OutputStream) -> a
    208:217:void encode(java.io.OutputStream,sun1.security.util.ObjectIdentifier,boolean) -> a
    233:233:java.lang.String getName() -> a
sun1.security.x509.CRLReasonCodeExtension -> b.b.f.k:
    int reasonCode -> d
    86:93:void encodeThis() -> b
    102:103:void <init>(int) -> <init>
    83:117:void <init>(boolean,int) -> <init>
    83:134:void <init>(java.lang.Boolean,java.lang.Object) -> <init>
    181:196:java.lang.String toString() -> toString
    206:215:void encode(java.io.OutputStream) -> a
    232:232:java.lang.String getName() -> a
sun1.security.x509.CertAttrSet -> b.b.f.l:
    void encode(java.io.OutputStream) -> a
    java.lang.String getName() -> a
sun1.security.x509.CertificateAlgorithmId -> b.b.f.m:
    sun1.security.x509.AlgorithmId algId -> a
    67:69:void <init>(sun1.security.x509.AlgorithmId) -> <init>
    77:80:void <init>(sun1.security.util.DerInputStream) -> <init>
    97:99:java.lang.String toString() -> toString
    109:113:void encode(java.io.OutputStream) -> a
    119:128:void set(java.lang.String,java.lang.Object) -> a
    134:137:sun1.security.x509.AlgorithmId get(java.lang.String) -> a
    168:168:java.lang.String getName() -> a
sun1.security.x509.CertificateExtensions -> b.b.f.n:
    sun1.security.util.Debug debug -> a
    java.util.Map map -> b
    boolean unsupportedCritExt -> c
    java.util.Map unparseableExtensions -> d
    java.lang.Class[] PARAMS -> e
    60:69:void <init>() -> <init>
    60:79:void <init>(sun1.security.util.DerInputStream) -> <init>
    84:90:void init(sun1.security.util.DerInputStream) -> a
    97:144:void parseExtension(sun1.security.x509.Extension) -> a
    156:157:void encode(java.io.OutputStream) -> a
    169:194:void encode(java.io.OutputStream,boolean) -> a
    203:208:void set(java.lang.String,java.lang.Object) -> a
    216:220:sun1.security.x509.Extension get(java.lang.String) -> a
    226:226:sun1.security.x509.Extension getExtension(java.lang.String) -> b
    255:255:java.util.Collection getAllExtensions() -> b
    259:262:java.util.Map getUnparseableExtensions() -> c
    270:270:java.lang.String getName() -> a
    278:278:boolean hasUnsupportedCriticalExtension() -> d
    293:320:boolean equals(java.lang.Object) -> equals
    329:329:int hashCode() -> hashCode
    341:341:java.lang.String toString() -> toString
    58:92:void <clinit>() -> <clinit>
sun1.security.x509.CertificateIssuerExtension -> b.b.f.o:
    sun1.security.x509.GeneralNames names -> d
    78:85:void encodeThis() -> b
    94:99:void <init>(sun1.security.x509.GeneralNames) -> <init>
    111:118:void <init>(java.lang.Boolean,java.lang.Object) -> <init>
    172:173:java.lang.String toString() -> toString
    183:191:void encode(java.io.OutputStream) -> a
    207:207:java.lang.String getName() -> a
sun1.security.x509.CertificateIssuerName -> b.b.f.p:
    sun1.security.x509.X500Name dnName -> a
    javax.security.auth.x500.X500Principal dnPrincipal -> b
    71:73:void <init>(sun1.security.x509.X500Name) -> <init>
    81:83:void <init>(sun1.security.util.DerInputStream) -> <init>
    100:101:java.lang.String toString() -> toString
    111:115:void encode(java.io.OutputStream) -> a
    121:131:void set(java.lang.String,java.lang.Object) -> a
    137:145:java.lang.Object get(java.lang.String) -> a
    178:178:java.lang.String getName() -> a
sun1.security.x509.CertificateIssuerUniqueIdentity -> b.b.f.q:
    sun1.security.x509.UniqueIdentity id -> a
    96:98:void <init>(sun1.security.util.DerValue) -> <init>
    104:105:java.lang.String toString() -> toString
    115:119:void encode(java.io.OutputStream) -> a
    125:134:void set(java.lang.String,java.lang.Object) -> a
    140:143:sun1.security.x509.UniqueIdentity get(java.lang.String) -> a
    175:175:java.lang.String getName() -> a
sun1.security.x509.CertificatePoliciesExtension -> b.b.f.r:
    java.util.List certPolicies -> d
    89:102:void encodeThis() -> b
    112:113:void <init>(java.util.List) -> <init>
    123:128:void <init>(java.lang.Boolean,java.util.List) -> <init>
    139:154:void <init>(java.lang.Boolean,java.lang.Object) -> <init>
    160:169:java.lang.String toString() -> toString
    179:187:void encode(java.io.OutputStream) -> a
    250:250:java.lang.String getName() -> a
sun1.security.x509.CertificatePolicyId -> b.b.f.s:
    sun1.security.util.ObjectIdentifier id -> a
    55:57:void <init>(sun1.security.util.DerValue) -> <init>
    63:63:sun1.security.util.ObjectIdentifier getIdentifier() -> a
    70:74:java.lang.String toString() -> toString
    84:85:void encode(sun1.security.util.DerOutputStream) -> a
    95:99:boolean equals(java.lang.Object) -> equals
    108:108:int hashCode() -> hashCode
sun1.security.x509.CertificatePolicyMap -> b.b.f.t:
    sun1.security.x509.CertificatePolicyId issuerDomain -> a
    sun1.security.x509.CertificatePolicyId subjectDomain -> b
    59:65:void <init>(sun1.security.util.DerValue) -> <init>
    85:90:java.lang.String toString() -> toString
    100:105:void encode(sun1.security.util.DerOutputStream) -> a
sun1.security.x509.CertificateSerialNumber -> b.b.f.u:
    sun1.security.x509.SerialNumber serial -> a
    71:73:void <init>(int) -> <init>
    101:103:void <init>(sun1.security.util.DerValue) -> <init>
    109:110:java.lang.String toString() -> toString
    120:124:void encode(java.io.OutputStream) -> a
    130:139:void set(java.lang.String,java.lang.Object) -> a
    145:148:sun1.security.x509.SerialNumber get(java.lang.String) -> a
    180:180:java.lang.String getName() -> a
sun1.security.x509.CertificateSubjectName -> b.b.f.v:
    sun1.security.x509.X500Name dnName -> a
    javax.security.auth.x500.X500Principal dnPrincipal -> b
    71:73:void <init>(sun1.security.x509.X500Name) -> <init>
    81:83:void <init>(sun1.security.util.DerInputStream) -> <init>
    100:101:java.lang.String toString() -> toString
    111:115:void encode(java.io.OutputStream) -> a
    121:131:void set(java.lang.String,java.lang.Object) -> a
    137:145:java.lang.Object get(java.lang.String) -> a
    178:178:java.lang.String getName() -> a
sun1.security.x509.CertificateSubjectUniqueIdentity -> b.b.f.w:
    sun1.security.x509.UniqueIdentity id -> a
    95:97:void <init>(sun1.security.util.DerValue) -> <init>
    103:104:java.lang.String toString() -> toString
    114:118:void encode(java.io.OutputStream) -> a
    124:133:void set(java.lang.String,java.lang.Object) -> a
    139:142:sun1.security.x509.UniqueIdentity get(java.lang.String) -> a
    174:174:java.lang.String getName() -> a
sun1.security.x509.CertificateValidity -> b.b.f.x:
    java.util.Date notBefore -> a
    java.util.Date notAfter -> b
    62:62:java.util.Date getNotBefore() -> b
    67:67:java.util.Date getNotAfter() -> c
    72:100:void construct(sun1.security.util.DerValue) -> a
    105:105:void <init>() -> <init>
    115:118:void <init>(java.util.Date,java.util.Date) -> <init>
    126:129:void <init>(sun1.security.util.DerInputStream) -> <init>
    135:138:java.lang.String toString() -> toString
    151:171:void encode(java.io.OutputStream) -> a
    177:188:void set(java.lang.String,java.lang.Object) -> a
    194:199:java.util.Date get(java.lang.String) -> a
    234:234:java.lang.String getName() -> a
    268:276:void valid(java.util.Date) -> a
sun1.security.x509.CertificateVersion -> b.b.f.y:
    int version -> a
    72:72:int getVersion() -> b
    77:84:void construct(sun1.security.util.DerValue) -> a
    68:92:void <init>() -> <init>
    68:109:void <init>(int) -> <init>
    68:147:void <init>(sun1.security.util.DerValue) -> <init>
    153:153:java.lang.String toString() -> toString
    164:175:void encode(java.io.OutputStream) -> a
    181:190:void set(java.lang.String,java.lang.Object) -> a
    196:199:java.lang.Integer get(java.lang.String) -> a
    231:231:java.lang.String getName() -> a
    238:238:int compare(int) -> a
sun1.security.x509.CertificateX509Key -> b.b.f.z:
    java.security.PublicKey key -> a
    63:65:void <init>(java.security.PublicKey) -> <init>
    73:76:void <init>(sun1.security.util.DerInputStream) -> <init>
    93:94:java.lang.String toString() -> toString
    104:108:void encode(java.io.OutputStream) -> a
    114:120:void set(java.lang.String,java.lang.Object) -> a
    126:129:java.security.PublicKey get(java.lang.String) -> a
    161:161:java.lang.String getName() -> a
sun1.security.x509.DNSName -> b.b.f.aa:
    java.lang.String name -> a
    64:66:void <init>(sun1.security.util.DerValue) -> <init>
    74:103:void <init>(java.lang.String) -> <init>
    109:109:int getType() -> a
    116:116:java.lang.String getName() -> b
    126:127:void encode(sun1.security.util.DerOutputStream) -> a
    133:133:java.lang.String toString() -> toString
    143:153:boolean equals(java.lang.Object) -> equals
    162:162:int hashCode() -> hashCode
    197:223:int constrains(sun1.security.x509.GeneralNameInterface) -> a
sun1.security.x509.DeltaCRLIndicatorExtension -> b.b.f.ab:
    78:80:void <init>(int) -> <init>
    89:90:void <init>(java.math.BigInteger) -> <init>
    102:104:void <init>(java.lang.Boolean,java.lang.Object) -> <init>
    113:115:void encode(java.io.OutputStream) -> a
sun1.security.x509.DistributionPoint -> b.b.f.ac:
    java.lang.String[] REASON_STRINGS -> a
    sun1.security.x509.GeneralNames fullName -> b
    sun1.security.x509.RDN relativeName -> c
    boolean[] reasonFlags -> d
    sun1.security.x509.GeneralNames crlIssuer -> e
    int hashCode -> f
    190:244:void <init>(sun1.security.util.DerValue) -> <init>
    281:319:void encode(sun1.security.util.DerOutputStream) -> a
    325:325:boolean equals(java.lang.Object,java.lang.Object) -> a
    335:347:boolean equals(java.lang.Object) -> equals
    351:372:int hashCode() -> hashCode
    379:382:java.lang.String reasonToString(int) -> a
    389:408:java.lang.String toString() -> toString
    109:109:void <clinit>() -> <clinit>
sun1.security.x509.DistributionPointName -> b.b.f.ad:
    sun1.security.x509.GeneralNames fullName -> a
    sun1.security.x509.RDN relativeName -> b
    int hashCode -> c
    89:148:void <init>(sun1.security.util.DerValue) -> <init>
    172:187:void encode(sun1.security.util.DerOutputStream) -> a
    196:205:boolean equals(java.lang.Object) -> equals
    214:225:int hashCode() -> hashCode
    232:240:java.lang.String toString() -> toString
    247:247:boolean equals(java.lang.Object,java.lang.Object) -> a
sun1.security.x509.EDIPartyName -> b.b.f.ae:
    java.lang.String assigner -> a
    java.lang.String party -> b
    int myhash -> c
    51:109:void <init>(sun1.security.util.DerValue) -> <init>
    115:115:int getType() -> a
    125:144:void encode(sun1.security.util.DerOutputStream) -> a
    172:190:boolean equals(java.lang.Object) -> equals
    199:205:int hashCode() -> hashCode
    212:212:java.lang.String toString() -> toString
    235:242:int constrains(sun1.security.x509.GeneralNameInterface) -> a
sun1.security.x509.ExtendedKeyUsageExtension -> b.b.f.af:
    java.util.Map map -> d
    int[] anyExtendedKeyUsageOidData -> e
    int[] serverAuthOidData -> f
    int[] clientAuthOidData -> g
    int[] codeSigningOidData -> h
    int[] emailProtectionOidData -> i
    int[] ipsecEndSystemOidData -> j
    int[] ipsecTunnelOidData -> k
    int[] ipsecUserOidData -> l
    int[] timeStampingOidData -> m
    int[] OCSPSigningOidData -> n
    java.util.Vector keyUsages -> o
    133:146:void encodeThis() -> f
    156:157:void <init>(java.util.Vector) -> <init>
    167:172:void <init>(java.lang.Boolean,java.util.Vector) -> <init>
    183:198:void <init>(java.lang.Boolean,java.lang.Object) -> <init>
    204:220:java.lang.String toString() -> toString
    231:239:void encode(java.io.OutputStream) -> a
    302:302:java.lang.String getName() -> a
    306:310:java.util.List getExtendedKeyUsage() -> b
    99:124:void <clinit>() -> <clinit>
sun1.security.x509.Extension -> b.b.f.ag:
    sun1.security.util.ObjectIdentifier extensionId -> a
    boolean critical -> b
    byte[] extensionValue -> c
    62:69:void <init>() -> <init>
    62:93:void <init>(sun1.security.util.DerValue) -> <init>
    62:111:void <init>(sun1.security.util.ObjectIdentifier,boolean,byte[]) -> <init>
    62:123:void <init>(sun1.security.x509.Extension) -> <init>
    133:146:void encode(sun1.security.util.DerOutputStream) -> a
    152:152:boolean isCritical() -> c
    159:159:sun1.security.util.ObjectIdentifier getExtensionId() -> d
    170:170:byte[] getExtensionValue() -> e
    177:183:java.lang.String toString() -> toString
    195:204:int hashCode() -> hashCode
    220:229:boolean equals(java.lang.Object) -> equals
sun1.security.x509.FreshestCRLExtension -> b.b.f.ah:
    74:75:void <init>(java.util.List) -> <init>
    86:88:void <init>(java.lang.Boolean,java.lang.Object) -> <init>
    97:98:void encode(java.io.OutputStream) -> a
sun1.security.x509.GeneralName -> b.b.f.ai:
    sun1.security.x509.GeneralNameInterface name -> a
    76:77:void <init>(sun1.security.util.DerValue) -> <init>
    55:168:void <init>(sun1.security.util.DerValue,boolean) -> <init>
    182:182:sun1.security.x509.GeneralNameInterface getName() -> a
    189:189:java.lang.String toString() -> toString
    199:208:boolean equals(java.lang.Object) -> equals
    218:218:int hashCode() -> hashCode
    228:248:void encode(sun1.security.util.DerOutputStream) -> a
sun1.security.x509.GeneralNameInterface -> b.b.f.aj:
    int getType() -> a
    void encode(sun1.security.util.DerOutputStream) -> a
    int constrains(sun1.security.x509.GeneralNameInterface) -> a
sun1.security.x509.GeneralNames -> b.b.f.ak:
    java.util.List names -> a
    56:71:void <init>(sun1.security.util.DerValue) -> <init>
    76:78:void <init>() -> <init>
    81:85:sun1.security.x509.GeneralNames add(sun1.security.x509.GeneralName) -> a
    93:93:boolean isEmpty() -> a
    105:105:java.util.List names() -> b
    115:124:void encode(sun1.security.util.DerOutputStream) -> a
    132:139:boolean equals(java.lang.Object) -> equals
    143:143:int hashCode() -> hashCode
    147:147:java.lang.String toString() -> toString
sun1.security.x509.GeneralSubtree -> b.b.f.al:
    sun1.security.x509.GeneralName name -> a
    int minimum -> b
    int maximum -> c
    int myhash -> d
    51:96:void <init>(sun1.security.util.DerValue) -> <init>
    130:138:java.lang.String toString() -> toString
    148:163:boolean equals(java.lang.Object) -> equals
    172:184:int hashCode() -> hashCode
    193:210:void encode(sun1.security.util.DerOutputStream) -> a
sun1.security.x509.GeneralSubtrees -> b.b.f.am:
    java.util.List trees -> a
    61:63:void <init>() -> <init>
    65:67:void <init>(sun1.security.x509.GeneralSubtrees) -> <init>
    75:84:void <init>(sun1.security.util.DerValue) -> <init>
    87:87:sun1.security.x509.GeneralSubtree get(int) -> a
    95:99:void add(sun1.security.x509.GeneralSubtree) -> a
    109:109:int size() -> a
    121:121:java.lang.Object clone() -> clone
    128:129:java.lang.String toString() -> toString
    138:144:void encode(sun1.security.util.DerOutputStream) -> a
    154:161:boolean equals(java.lang.Object) -> equals
    165:165:int hashCode() -> hashCode
sun1.security.x509.IPAddressName -> b.b.f.an:
    byte[] address -> a
    boolean isIPv4 -> b
    java.lang.String name -> c
    82:83:void <init>(sun1.security.util.DerValue) -> <init>
    91:105:void <init>(byte[]) -> <init>
    126:148:void <init>(java.lang.String) -> <init>
    159:176:void parseIPv4(java.lang.String) -> a
    189:217:void parseIPv6(java.lang.String) -> b
    223:223:int getType() -> a
    233:234:void encode(sun1.security.util.DerOutputStream) -> a
    241:245:java.lang.String toString() -> toString
    257:300:java.lang.String getName() -> b
    316:347:boolean equals(java.lang.Object) -> equals
    357:362:int hashCode() -> hashCode
    397:476:int constrains(sun1.security.x509.GeneralNameInterface) -> a
sun1.security.x509.InhibitAnyPolicyExtension -> b.b.f.ao:
    sun1.security.util.Debug debug -> e
    sun1.security.util.ObjectIdentifier AnyPolicy_Id -> d
    int skipCerts -> f
    98:101:void encodeThis() -> b
    94:119:void <init>(int) -> <init>
    94:157:void <init>(java.lang.Boolean,java.lang.Object) -> <init>
    163:164:java.lang.String toString() -> toString
    173:182:void encode(java.io.OutputStream) -> a
    261:261:java.lang.String getName() -> a
    67:85:void <clinit>() -> <clinit>
sun1.security.x509.IssuerAlternativeNameExtension -> b.b.f.ap:
    sun1.security.x509.GeneralNames names -> d
    69:76:void encodeThis() -> b
    65:90:void <init>(sun1.security.x509.GeneralNames) -> <init>
    65:99:void <init>() -> <init>
    65:121:void <init>(java.lang.Boolean,java.lang.Object) -> <init>
    128:137:java.lang.String toString() -> toString
    147:155:void encode(java.io.OutputStream) -> a
    178:181:sun1.security.x509.GeneralNames get(java.lang.String) -> a
    214:214:java.lang.String getName() -> a
sun1.security.x509.IssuingDistributionPointExtension -> b.b.f.aq:
    sun1.security.x509.DistributionPointName distributionPoint -> d
    sun1.security.x509.ReasonFlags revocationReasons -> e
    boolean hasOnlyUserCerts -> f
    boolean hasOnlyCACerts -> g
    boolean hasOnlyAttributeCerts -> h
    boolean isIndirectCRL -> i
    93:158:void <init>(sun1.security.x509.DistributionPointName,sun1.security.x509.ReasonFlags,boolean,boolean,boolean,boolean) -> <init>
    93:221:void <init>(java.lang.Boolean,java.lang.Object) -> <init>
    227:227:java.lang.String getName() -> a
    238:246:void encode(java.io.OutputStream) -> a
    379:438:void encodeThis() -> b
    445:474:java.lang.String toString() -> toString
sun1.security.x509.KeyIdentifier -> b.b.f.ar:
    byte[] octetString -> a
    50:52:void <init>(byte[]) -> <init>
    59:61:void <init>(sun1.security.util.DerValue) -> <init>
    84:101:void <init>(java.security.PublicKey) -> <init>
    107:107:byte[] getIdentifier() -> a
    114:119:java.lang.String toString() -> toString
    129:130:void encode(sun1.security.util.DerOutputStream) -> a
    137:140:int hashCode() -> hashCode
    147:152:boolean equals(java.lang.Object) -> equals
sun1.security.x509.KeyUsageExtension -> b.b.f.as:
    boolean[] bitString -> d
    75:78:void encodeThis() -> f
    86:86:boolean isSet(int) -> a
    109:115:void <init>(byte[]) -> <init>
    123:128:void <init>(boolean[]) -> <init>
    136:141:void <init>(sun1.security.util.BitArray) -> <init>
    154:174:void <init>(java.lang.Boolean,java.lang.Object) -> <init>
    179:183:void <init>() -> <init>
    279:312:java.lang.String toString() -> toString
    322:331:void encode(java.io.OutputStream) -> a
    354:354:boolean[] getBits() -> b
    361:361:java.lang.String getName() -> a
sun1.security.x509.NameConstraintsExtension -> b.b.f.at:
    sun1.security.x509.GeneralSubtrees permitted -> d
    sun1.security.x509.GeneralSubtrees excluded -> e
    boolean minMaxValid -> f
    116:138:void encodeThis() -> b
    81:157:void <init>(sun1.security.x509.GeneralSubtrees,sun1.security.x509.GeneralSubtrees) -> <init>
    81:211:void <init>(java.lang.Boolean,java.lang.Object) -> <init>
    217:221:java.lang.String toString() -> toString
    232:240:void encode(java.io.OutputStream) -> a
    310:310:java.lang.String getName() -> a
    517:528:java.lang.Object clone() -> clone
sun1.security.x509.NetscapeCertTypeExtension -> b.b.f.au:
    int[] CertType_data -> e
    sun1.security.util.ObjectIdentifier NetscapeCertType_Id -> d
    boolean[] bitString -> f
    sun1.security.x509.NetscapeCertTypeExtension$MapEntry[] mMapData -> g
    java.util.Vector mAttributeNames -> h
    128:131:void encodeThis() -> b
    139:139:boolean isSet(int) -> a
    162:168:void <init>(byte[]) -> <init>
    176:181:void <init>(boolean[]) -> <init>
    192:198:void <init>(java.lang.Boolean,java.lang.Object) -> <init>
    203:207:void <init>() -> <init>
    240:267:java.lang.String toString() -> toString
    277:286:void encode(java.io.OutputStream) -> a
    300:300:java.lang.String getName() -> a
    72:115:void <clinit>() -> <clinit>
sun1.security.x509.NetscapeCertTypeExtension$MapEntry -> b.b.f.av:
    java.lang.String mName -> a
    int mPosition -> b
    93:96:void <init>(java.lang.String,int) -> <init>
sun1.security.x509.OIDMap -> b.b.f.aw:
    int[] NetscapeCertType_data -> a
    java.util.Map oidMap -> b
    java.util.Map nameMap -> c
    170:173:void addInternal(java.lang.String,sun1.security.util.ObjectIdentifier,java.lang.Class) -> a
    225:226:java.lang.String getName(sun1.security.util.ObjectIdentifier) -> a
    238:239:java.lang.Class getClass(sun1.security.util.ObjectIdentifier) -> b
    103:161:void <clinit>() -> <clinit>
sun1.security.x509.OIDMap$OIDInfo -> b.b.f.ax:
    sun1.security.util.ObjectIdentifier oid -> a
    java.lang.String name -> b
    java.lang.String className -> c
    java.lang.Class clazz -> d
    187:192:void <init>(java.lang.String,sun1.security.util.ObjectIdentifier,java.lang.Class) -> <init>
    201:211:java.lang.Class getClazz() -> a
sun1.security.x509.OIDName -> b.b.f.ay:
    sun1.security.util.ObjectIdentifier oid -> a
    51:53:void <init>(sun1.security.util.DerValue) -> <init>
    82:82:int getType() -> a
    92:93:void encode(sun1.security.util.DerOutputStream) -> a
    99:99:java.lang.String toString() -> toString
    106:106:sun1.security.util.ObjectIdentifier getOID() -> b
    115:123:boolean equals(java.lang.Object) -> equals
    132:132:int hashCode() -> hashCode
    152:161:int constrains(sun1.security.x509.GeneralNameInterface) -> a
sun1.security.x509.OtherName -> b.b.f.az:
    java.lang.String name -> a
    sun1.security.util.ObjectIdentifier oid -> b
    byte[] nameValue -> c
    sun1.security.x509.GeneralNameInterface gni -> d
    int myhash -> e
    53:100:void <init>(sun1.security.util.DerValue) -> <init>
    123:135:sun1.security.x509.GeneralNameInterface getGNI(sun1.security.util.ObjectIdentifier,byte[]) -> a
    143:143:int getType() -> a
    153:164:void encode(sun1.security.util.DerOutputStream) -> a
    172:200:boolean equals(java.lang.Object) -> equals
    209:215:int hashCode() -> hashCode
    222:222:java.lang.String toString() -> toString
    246:254:int constrains(sun1.security.x509.GeneralNameInterface) -> a
sun1.security.x509.PKIXExtensions -> b.b.f.ba:
    int[] AuthorityKey_data -> z
    int[] SubjectKey_data -> A
    int[] KeyUsage_data -> B
    int[] PrivateKeyUsage_data -> C
    int[] CertificatePolicies_data -> D
    int[] PolicyMappings_data -> E
    int[] SubjectAlternativeName_data -> F
    int[] IssuerAlternativeName_data -> G
    int[] SubjectDirectoryAttributes_data -> H
    int[] BasicConstraints_data -> I
    int[] NameConstraints_data -> J
    int[] PolicyConstraints_data -> K
    int[] CRLDistributionPoints_data -> L
    int[] CRLNumber_data -> M
    int[] IssuingDistributionPoint_data -> N
    int[] DeltaCRLIndicator_data -> O
    int[] ReasonCode_data -> P
    int[] HoldInstructionCode_data -> Q
    int[] InvalidityDate_data -> R
    int[] ExtendedKeyUsage_data -> S
    int[] InhibitAnyPolicy_data -> T
    int[] CertificateIssuer_data -> U
    int[] AuthInfoAccess_data -> V
    int[] SubjectInfoAccess_data -> W
    int[] FreshestCRL_data -> X
    sun1.security.util.ObjectIdentifier AuthorityKey_Id -> a
    sun1.security.util.ObjectIdentifier SubjectKey_Id -> b
    sun1.security.util.ObjectIdentifier KeyUsage_Id -> c
    sun1.security.util.ObjectIdentifier PrivateKeyUsage_Id -> d
    sun1.security.util.ObjectIdentifier CertificatePolicies_Id -> e
    sun1.security.util.ObjectIdentifier PolicyMappings_Id -> f
    sun1.security.util.ObjectIdentifier SubjectAlternativeName_Id -> g
    sun1.security.util.ObjectIdentifier IssuerAlternativeName_Id -> h
    sun1.security.util.ObjectIdentifier SubjectDirectoryAttributes_Id -> i
    sun1.security.util.ObjectIdentifier BasicConstraints_Id -> j
    sun1.security.util.ObjectIdentifier NameConstraints_Id -> k
    sun1.security.util.ObjectIdentifier PolicyConstraints_Id -> l
    sun1.security.util.ObjectIdentifier CRLDistributionPoints_Id -> m
    sun1.security.util.ObjectIdentifier CRLNumber_Id -> n
    sun1.security.util.ObjectIdentifier IssuingDistributionPoint_Id -> o
    sun1.security.util.ObjectIdentifier DeltaCRLIndicator_Id -> p
    sun1.security.util.ObjectIdentifier ReasonCode_Id -> q
    sun1.security.util.ObjectIdentifier HoldInstructionCode_Id -> r
    sun1.security.util.ObjectIdentifier InvalidityDate_Id -> s
    sun1.security.util.ObjectIdentifier ExtendedKeyUsage_Id -> t
    sun1.security.util.ObjectIdentifier InhibitAnyPolicy_Id -> u
    sun1.security.util.ObjectIdentifier CertificateIssuer_Id -> v
    sun1.security.util.ObjectIdentifier AuthInfoAccess_Id -> w
    sun1.security.util.ObjectIdentifier SubjectInfoAccess_Id -> x
    sun1.security.util.ObjectIdentifier FreshestCRL_Id -> y
    52:260:void <clinit>() -> <clinit>
sun1.security.x509.PolicyConstraintsExtension -> b.b.f.bb:
    int require -> d
    int inhibit -> e
    81:102:void encodeThis() -> b
    114:115:void <init>(int,int) -> <init>
    76:133:void <init>(java.lang.Boolean,int,int) -> <init>
    76:174:void <init>(java.lang.Boolean,java.lang.Object) -> <init>
    181:192:java.lang.String toString() -> toString
    202:210:void encode(java.io.OutputStream) -> a
    276:276:java.lang.String getName() -> a
sun1.security.x509.PolicyInformation -> b.b.f.bc:
    sun1.security.x509.CertificatePolicyId policyIdentifier -> a
    java.util.Set policyQualifiers -> b
    102:120:void <init>(sun1.security.util.DerValue) -> <init>
    129:136:boolean equals(java.lang.Object) -> equals
    145:147:int hashCode() -> hashCode
    157:157:sun1.security.x509.CertificatePolicyId getPolicyIdentifier() -> a
    169:169:java.util.Set getPolicyQualifiers() -> b
    261:263:java.lang.String toString() -> toString
    273:283:void encode(sun1.security.util.DerOutputStream) -> a
sun1.security.x509.PolicyMappingsExtension -> b.b.f.bd:
    java.util.List maps -> d
    71:84:void encodeThis() -> b
    92:97:void <init>(java.util.List) -> <init>
    102:106:void <init>() -> <init>
    117:133:void <init>(java.lang.Boolean,java.lang.Object) -> <init>
    139:143:java.lang.String toString() -> toString
    153:161:void encode(java.io.OutputStream) -> a
    221:221:java.lang.String getName() -> a
sun1.security.x509.PrivateKeyUsageExtension -> b.b.f.be:
    java.util.Date notBefore -> d
    java.util.Date notAfter -> e
    84:105:void encodeThis() -> b
    79:123:void <init>(java.util.Date,java.util.Date) -> <init>
    79:172:void <init>(java.lang.Boolean,java.lang.Object) -> <init>
    178:181:java.lang.String toString() -> toString
    233:241:void encode(java.io.OutputStream) -> a
    310:310:java.lang.String getName() -> a
sun1.security.x509.RDN -> b.b.f.bf:
    sun1.security.x509.AVA[] assertion -> a
    java.lang.String canonicalString -> b
    106:154:void <init>(java.lang.String,java.util.Map) -> <init>
    239:250:void <init>(sun1.security.util.DerValue) -> <init>
    258:258:void <init>(int) -> <init>
    296:308:boolean equals(java.lang.Object) -> equals
    318:318:int hashCode() -> hashCode
    343:344:void encode(sun1.security.util.DerOutputStream) -> a
    352:363:java.lang.String toString() -> toString
    409:409:java.lang.String toRFC2253String(java.util.Map) -> a
    419:429:java.lang.String toRFC2253String(boolean) -> a
    445:463:java.lang.String toRFC2253StringInternal(boolean,java.util.Map) -> a
sun1.security.x509.RFC822Name -> b.b.f.bg:
    java.lang.String name -> a
    53:56:void <init>(sun1.security.util.DerValue) -> <init>
    82:97:void parseName(java.lang.String) -> a
    103:103:int getType() -> a
    110:110:java.lang.String getName() -> b
    120:121:void encode(sun1.security.util.DerOutputStream) -> a
    127:127:java.lang.String toString() -> toString
    137:147:boolean equals(java.lang.Object) -> equals
    156:156:int hashCode() -> hashCode
    185:228:int constrains(sun1.security.x509.GeneralNameInterface) -> a
sun1.security.x509.ReasonFlags -> b.b.f.bh:
    java.lang.String[] NAMES -> a
    boolean[] bitString -> b
    102:102:boolean isSet(int) -> a
    163:165:void <init>(sun1.security.util.DerValue) -> <init>
    203:234:java.lang.String toString() -> toString
    244:245:void encode(sun1.security.util.DerOutputStream) -> a
    72:72:void <clinit>() -> <clinit>
sun1.security.x509.SerialNumber -> b.b.f.bi:
    java.math.BigInteger serialNum -> a
    44:48:void construct(sun1.security.util.DerValue) -> a
    64:66:void <init>(int) -> <init>
    85:87:void <init>(sun1.security.util.DerValue) -> <init>
    104:104:java.lang.String toString() -> toString
    114:115:void encode(sun1.security.util.DerOutputStream) -> a
    121:121:java.math.BigInteger getNumber() -> a
sun1.security.x509.SubjectAlternativeNameExtension -> b.b.f.bj:
    sun1.security.x509.GeneralNames names -> d
    74:81:void encodeThis() -> b
    92:93:void <init>(sun1.security.x509.GeneralNames) -> <init>
    70:109:void <init>(java.lang.Boolean,sun1.security.x509.GeneralNames) -> <init>
    70:119:void <init>() -> <init>
    70:142:void <init>(java.lang.Boolean,java.lang.Object) -> <init>
    149:158:java.lang.String toString() -> toString
    168:176:void encode(java.io.OutputStream) -> a
    199:202:sun1.security.x509.GeneralNames get(java.lang.String) -> a
    235:235:java.lang.String getName() -> a
sun1.security.x509.SubjectKeyIdentifierExtension -> b.b.f.bk:
    sun1.security.x509.KeyIdentifier id -> d
    74:81:void encodeThis() -> b
    70:95:void <init>(byte[]) -> <init>
    70:103:void <init>(sun1.security.x509.KeyIdentifier) -> <init>
    70:119:void <init>(java.lang.Boolean,java.lang.Object) -> <init>
    125:126:java.lang.String toString() -> toString
    136:144:void encode(java.io.OutputStream) -> a
    203:203:java.lang.String getName() -> a
sun1.security.x509.URIName -> b.b.f.bl:
    java.net.URI uri -> a
    java.lang.String host -> b
    sun1.security.x509.DNSName hostDNS -> c
    sun1.security.x509.IPAddressName hostIP -> d
    96:97:void <init>(sun1.security.util.DerValue) -> <init>
    105:147:void <init>(java.lang.String) -> <init>
    159:181:sun1.security.x509.URIName nameConstraint(sun1.security.util.DerValue) -> a
    186:190:void <init>(java.net.URI,java.lang.String,sun1.security.x509.DNSName) -> <init>
    196:196:int getType() -> a
    206:207:void encode(sun1.security.util.DerOutputStream) -> a
    213:213:java.lang.String toString() -> toString
    222:232:boolean equals(java.lang.Object) -> equals
    239:239:java.net.URI getURI() -> b
    246:246:java.lang.String getName() -> c
    264:264:java.lang.String getHost() -> d
    275:278:java.lang.Object getHostObject() -> e
    288:288:int hashCode() -> hashCode
    323:375:int constrains(sun1.security.x509.GeneralNameInterface) -> a
sun1.security.x509.UniqueIdentity -> b.b.f.bm:
    sun1.security.util.BitArray id -> a
    79:81:void <init>(sun1.security.util.DerValue) -> <init>
    87:87:java.lang.String toString() -> toString
    98:106:void encode(sun1.security.util.DerOutputStream,byte) -> a
    112:114:boolean[] getId() -> a
sun1.security.x509.UnparseableExtension -> b.b.f.bn:
    java.lang.String name -> d
    java.lang.Throwable why -> e
    351:365:void <init>(sun1.security.x509.Extension,java.lang.Throwable) -> <init>
    368:370:java.lang.String toString() -> toString
sun1.security.x509.X500Name -> b.b.f.bo:
    java.lang.String dn -> r
    java.lang.String rfc2253Dn -> s
    java.lang.String canonicalDn -> t
    sun1.security.x509.RDN[] names -> u
    javax.security.auth.x500.X500Principal x500Principal -> v
    java.util.Map internedOIDs -> w
    int[] commonName_data -> x
    int[] SURNAME_DATA -> y
    int[] SERIALNUMBER_DATA -> z
    int[] countryName_data -> A
    int[] localityName_data -> B
    int[] stateName_data -> C
    int[] streetAddress_data -> D
    int[] orgName_data -> E
    int[] orgUnitName_data -> F
    int[] title_data -> G
    int[] GIVENNAME_DATA -> H
    int[] INITIALS_DATA -> I
    int[] GENERATIONQUALIFIER_DATA -> J
    int[] DNQUALIFIER_DATA -> K
    int[] ipAddress_data -> L
    int[] DOMAIN_COMPONENT_DATA -> M
    int[] userid_data -> N
    sun1.security.util.ObjectIdentifier commonName_oid -> a
    sun1.security.util.ObjectIdentifier countryName_oid -> b
    sun1.security.util.ObjectIdentifier localityName_oid -> c
    sun1.security.util.ObjectIdentifier orgName_oid -> d
    sun1.security.util.ObjectIdentifier orgUnitName_oid -> e
    sun1.security.util.ObjectIdentifier stateName_oid -> f
    sun1.security.util.ObjectIdentifier streetAddress_oid -> g
    sun1.security.util.ObjectIdentifier title_oid -> h
    sun1.security.util.ObjectIdentifier DNQUALIFIER_OID -> i
    sun1.security.util.ObjectIdentifier SURNAME_OID -> j
    sun1.security.util.ObjectIdentifier GIVENNAME_OID -> k
    sun1.security.util.ObjectIdentifier INITIALS_OID -> l
    sun1.security.util.ObjectIdentifier GENERATIONQUALIFIER_OID -> m
    sun1.security.util.ObjectIdentifier ipAddress_oid -> n
    sun1.security.util.ObjectIdentifier DOMAIN_COMPONENT_OID -> o
    sun1.security.util.ObjectIdentifier userid_oid -> p
    sun1.security.util.ObjectIdentifier SERIALNUMBER_OID -> q
    150:151:void <init>(java.lang.String) -> <init>
    162:164:void <init>(java.lang.String,java.util.Map) -> <init>
    241:265:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    304:306:void <init>(sun1.security.util.DerInputStream) -> <init>
    367:373:boolean isEmpty() -> b
    381:381:int hashCode() -> hashCode
    390:416:boolean equals(java.lang.Object) -> equals
    439:439:int getType() -> a
    609:612:java.lang.String toString() -> toString
    650:650:java.lang.String getRFC2253Name() -> c
    661:669:java.lang.String getRFC2253Name(java.util.Map) -> a
    677:697:java.lang.String generateRFC2253DN(java.util.Map) -> b
    702:731:java.lang.String getRFC2253CanonicalName() -> d
    738:738:java.lang.String getName() -> getName
    780:804:void parseDER(sun1.security.util.DerInputStream) -> a
    823:828:void encode(sun1.security.util.DerOutputStream) -> a
    872:941:void parseDN(java.lang.String,java.util.Map) -> a
    1000:1009:int countQuotes(java.lang.String,int,int) -> a
    1015:1049:boolean escaped(int,int,java.lang.String) -> a
    1061:1076:void generateDN() -> f
    1111:1116:sun1.security.util.ObjectIdentifier intern(sun1.security.util.ObjectIdentifier) -> a
    1256:1276:int constrains(sun1.security.x509.GeneralNameInterface) -> a
    1287:1307:boolean isWithinSubtree(sun1.security.x509.X500Name) -> a
    1375:1375:javax.security.auth.x500.X500Principal asX500Principal() -> e
    1119:1234:void <clinit>() -> <clinit>
sun1.security.x509.X509AttributeName -> b.b.f.bp:
    java.lang.String prefix -> a
    java.lang.String suffix -> b
    39:56:void <init>(java.lang.String) -> <init>
    62:62:java.lang.String getPrefix() -> a
    69:69:java.lang.String getSuffix() -> b
sun1.security.x509.X509CertImpl -> b.b.f.bq:
    boolean readOnly -> d
    byte[] signedCert -> e
    sun1.security.x509.X509CertInfo info -> a
    sun1.security.x509.AlgorithmId algId -> b
    byte[] signature -> c
    java.util.Collection subjectAlternativeNames -> f
    java.util.Collection issuerAlternativeNames -> g
    java.util.List extKeyUsage -> h
    java.security.PublicKey verifiedPublicKey -> i
    java.lang.String verifiedProvider -> j
    boolean verificationResult -> k
    java.util.concurrent.ConcurrentHashMap fingerprints -> l
    128:1876:void <init>() -> <init>
    128:1876:void <init>(byte[]) -> <init>
    128:1876:void <init>(sun1.security.x509.X509CertInfo) -> <init>
    358:361:void derEncode(java.io.OutputStream) -> a
    372:372:byte[] getEncoded() -> getEncoded
    381:385:byte[] getEncodedInternal() -> a
    407:408:void verify(java.security.PublicKey) -> verify
    429:466:void verify(java.security.PublicKey,java.lang.String) -> verify
    487:488:void sign(java.security.PrivateKey,java.lang.String) -> a
    511:548:void sign(java.security.PrivateKey,java.lang.String,java.lang.String) -> a
    560:562:void checkValidity() -> checkValidity
    580:589:void checkValidity(java.util.Date) -> checkValidity
    603:641:java.lang.Object get(java.lang.String) -> a
    758:771:java.lang.String toString() -> toString
    782:789:java.security.PublicKey getPublicKey() -> getPublicKey
    799:806:int getVersion() -> getVersion
    816:818:java.math.BigInteger getSerialNumber() -> getSerialNumber
    828:836:sun1.security.x509.SerialNumber getSerialNumberObject() -> b
    847:855:java.security.Principal getSubjectDN() -> getSubjectDN
    865:874:javax.security.auth.x500.X500Principal getSubjectX500Principal() -> getSubjectX500Principal
    884:892:java.security.Principal getIssuerDN() -> getIssuerDN
    902:911:javax.security.auth.x500.X500Principal getIssuerX500Principal() -> getIssuerX500Principal
    921:928:java.util.Date getNotBefore() -> getNotBefore
    938:945:java.util.Date getNotAfter() -> getNotAfter
    958:961:byte[] getTBSCertificate() -> getTBSCertificate
    970:972:byte[] getSignature() -> getSignature
    983:985:java.lang.String getSigAlgName() -> getSigAlgName
    995:998:java.lang.String getSigAlgOID() -> getSigAlgOID
    1009:1014:byte[] getSigAlgParams() -> getSigAlgParams
    1024:1035:boolean[] getIssuerUniqueID() -> getIssuerUniqueID
    1045:1056:boolean[] getSubjectUniqueID() -> getSubjectUniqueID
    1097:1098:sun1.security.x509.ExtendedKeyUsageExtension getExtendedKeyUsageExtension() -> c
    1107:1108:sun1.security.x509.IssuerAlternativeNameExtension getIssuerAlternativeNameExtension() -> d
    1156:1157:sun1.security.x509.SubjectAlternativeNameExtension getSubjectAlternativeNameExtension() -> e
    1185:1194:boolean hasUnsupportedCriticalExtension() -> hasUnsupportedCriticalExtension
    1207:1224:java.util.Set getCriticalExtensionOIDs() -> getCriticalExtensionOIDs
    1237:1255:java.util.Set getNonCriticalExtensionOIDs() -> getNonCriticalExtensionOIDs
    1267:1294:sun1.security.x509.Extension getExtension(sun1.security.util.ObjectIdentifier) -> a
    1327:1369:byte[] getExtensionValue(java.lang.String) -> getExtensionValue
    1380:1396:boolean[] getKeyUsage() -> getKeyUsage
    1408:1417:java.util.List getExtendedKeyUsage() -> getExtendedKeyUsage
    1454:1469:int getBasicConstraints() -> getBasicConstraints
    1483:1531:java.util.Collection makeAltNames(sun1.security.x509.GeneralNames) -> a
    1539:1561:java.util.Collection cloneAltNames(java.util.Collection) -> a
    1574:1591:java.util.Collection getSubjectAlternativeNames() -> getSubjectAlternativeNames
    1640:1657:java.util.Collection getIssuerAlternativeNames() -> getIssuerAlternativeNames
    1717:1760:void parse(sun1.security.util.DerValue) -> a
sun1.security.x509.X509CertInfo -> b.b.f.br:
    sun1.security.x509.CertificateVersion version -> a
    sun1.security.x509.CertificateSerialNumber serialNum -> b
    sun1.security.x509.CertificateAlgorithmId algId -> c
    sun1.security.x509.CertificateIssuerName issuer -> d
    sun1.security.x509.CertificateValidity interval -> e
    sun1.security.x509.CertificateSubjectName subject -> f
    sun1.security.x509.CertificateX509Key pubKey -> g
    sun1.security.x509.CertificateIssuerUniqueIdentity issuerUniqueId -> h
    sun1.security.x509.CertificateSubjectUniqueIdentity subjectUniqueId -> i
    sun1.security.x509.CertificateExtensions extensions -> j
    byte[] rawCertInfo -> k
    java.util.Map map -> l
    83:132:void <init>() -> <init>
    83:170:void <init>(sun1.security.util.DerValue) -> <init>
    181:187:void encode(java.io.OutputStream) -> a
    213:213:java.lang.String getName() -> a
    223:232:byte[] getEncodedInfo() -> b
    245:248:boolean equals(java.lang.Object) -> equals
    260:272:boolean equals(sun1.security.x509.X509CertInfo) -> a
    280:285:int hashCode() -> hashCode
    293:352:java.lang.String toString() -> toString
    365:459:void set(java.lang.String,java.lang.Object) -> a
    566:647:java.lang.Object get(java.lang.String) -> a
    658:740:void parse(sun1.security.util.DerValue) -> a
    750:782:void verifyCert(sun1.security.x509.CertificateSubjectName,sun1.security.x509.CertificateExtensions) -> a
    789:830:void emit(sun1.security.util.DerOutputStream) -> a
    836:840:int attributeMap(java.lang.String) -> b
    850:854:void setVersion(java.lang.Object) -> a
    863:867:void setSerialNumber(java.lang.Object) -> b
    876:881:void setAlgorithmId(java.lang.Object) -> c
    890:898:void setIssuer(java.lang.Object) -> d
    907:912:void setValidity(java.lang.Object) -> e
    921:929:void setSubject(java.lang.Object) -> f
    938:943:void setKey(java.lang.Object) -> g
    952:960:void setIssuerUniqueId(java.lang.Object) -> h
    969:977:void setSubjectUniqueId(java.lang.Object) -> i
    986:994:void setExtensions(java.lang.Object) -> j
    114:126:void <clinit>() -> <clinit>
sun1.security.x509.X509Key -> b.b.f.bs:
    sun1.security.x509.AlgorithmId algid -> a
    byte[] key -> b
    int unusedBits -> d
    sun1.security.util.BitArray bitStringKey -> e
    byte[] encodedKey -> c
    74:95:void <init>() -> <init>
    74:107:void <init>(sun1.security.x509.AlgorithmId,sun1.security.util.BitArray) -> <init>
    113:123:void setKey(sun1.security.util.BitArray) -> a
    138:142:sun1.security.util.BitArray getKey() -> a
    164:178:java.security.PublicKey parse(sun1.security.util.DerValue) -> a
    196:197:void parseKeyBits() -> b
    212:277:java.security.PublicKey buildX509Key(sun1.security.x509.AlgorithmId,sun1.security.util.BitArray) -> a
    284:284:java.lang.String getAlgorithm() -> getAlgorithm
    299:300:void encode(sun1.security.util.DerOutputStream) -> a
    307:311:byte[] getEncoded() -> getEncoded
    315:327:byte[] getEncodedInternal() -> c
    334:334:java.lang.String getFormat() -> getFormat
    343:343:byte[] encode() -> d
    351:354:java.lang.String toString() -> toString
    428:444:boolean equals(java.lang.Object) -> equals
    454:462:int hashCode() -> hashCode
    471:475:void encode(sun1.security.util.DerOutputStream,sun1.security.x509.AlgorithmId,sun1.security.util.BitArray) -> a
